#
# syslog configuration file for SunOS 4.X
# (modified to do local2 separately)
#
# This file is processed by m4 so be careful to quote (`') names
# that match m4 reserved words.  Also, within ifdef's, arguments
# containing commas must be quoted.
#
# Note: Have to exclude user from most lines so that user.alert
#	and user.emerg are not included, because old sendmails
#	will generate them for debugging information.  If you
#	have no 4.2BSD based systems doing network logging, you
#	can remove all the special cases for "user" logging.

#*.err;kern.debug;auth.notice;user.none		/dev/console
kern.debug;user,mail.crit;auth.notice		/dev/console
daemon,syslog,lpr,news,uucp,cron.err		/dev/console

#*.err;kern.debug;daemon,auth.notice;mail.crit;user.none /var/adm/messages
kern.debug;user,mail.crit;auth.notice		/var/adm/messages
daemon.notice;syslog,news,uucp,cron.err		/var/adm/messages

lpr.debug					/var/adm/lpd-errs

*.alert;kern.err;daemon.err;user.none		operator
*.alert;user.none				root

*.emerg;user.none				*

# for loghost machines, to have authentication messages (su, login, etc.)
# logged to a file, un-comment out the following line and adjust the file name
# as appropriate.
#
# if a non-loghost machine chooses to have such messages 
# sent to the loghost machine, un-comment out the following line.
#
#auth.notice			ifdef(`LOGHOST', /var/log/authlog, @loghost)

mail.debug			ifdef(`LOGHOST', /var/log/syslog, @loghost)

# following line for compatibility with old sendmails.  they will send
# messages with no facility code, which will be turned into "user" messages
# by the local syslog daemon.  only the "loghost" machine needs the following
# line, to cause these old sendmail log messages to be logged in the
# mail syslog file.
#
ifdef(`LOGHOST',
user.alert					/var/log/syslog
)
#
# non-loghost machines will use the following lines to cause "user"
# log messages to be logged locally.
#
ifdef(`LOGHOST', ,
user.err					/dev/console
user.err					/var/adm/messages
user.alert					`root, operator'
user.emerg					*
)

# Local2: (bootpd, pppd)
local2.debug				/dev/console
#local2.debug				/var/log/local2
