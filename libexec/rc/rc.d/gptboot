#!/bin/sh
#
# Copyright (c) 2010 Pawel Jakub Dawidek <pjd@FreeBSD.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#

# PROVIDE: gptboot
# REQUIRE: mountcritremote
# KEYWORD: nojail

. /etc/rc.subr

name="gptboot"
rcvar="gptboot_enable"
start_cmd="gptboot_report"

gptboot_report()
{
	gpart show | \
		egrep '(^=>| freebsd-ufs .*(\[|,)(bootfailed|bootonce)(,|\]))' | \
		sed 's/^=>//' | \
		egrep -v '(\[|,)bootme(,|\])' | \
	while read start size pos type attrs rest; do
		case "${pos}" in
		[0-9]*)
			if [ -n "${disk}" ]; then
				part="${disk}p${pos}"
				echo "${attrs}" | egrep -q '(\[|,)bootfailed(,|\])'
				bootfailed=$?
				echo "${attrs}" | egrep -q '(\[|,)bootonce(,|\])'
				bootonce=$?
				if [ ${bootfailed} -eq 0 ]; then
					logger -t gptboot -p local0.notice "Boot from ${part} failed."
					gpart unset -a bootfailed -i ${pos} ${disk} >/dev/null
				elif [ ${bootonce} -eq 0 ]; then
					# We want to log success after all failures.
					echo -n "Boot from ${part} succeeded."
					gpart unset -a bootonce -i ${pos} ${disk} >/dev/null
				fi
			fi
			;;
		*)
			if [ "${type}" = "GPT" ]; then
				disk="${pos}"
			else
				disk=""
			fi
			;;
		esac
	done | logger -t gptboot -p local0.notice
}

load_rc_config $name

# doesn't make sense to run in a svcj: config setting
gptboot_svcj="NO"

run_rc_command "$1"
