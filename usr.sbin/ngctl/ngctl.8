.\" Copyright (c) 1996-1999 Whistle Communications, Inc.
.\" All rights reserved.
.\"
.\" Subject to the following obligations and disclaimer of warranty, use and
.\" redistribution of this software, in source or object code forms, with or
.\" without modifications are expressly permitted by Whistle Communications;
.\" provided, however, that:
.\" 1. Any and all reproductions of the source or object code must include the
.\"    copyright notice above and the following disclaimer of warranties; and
.\" 2. No rights are granted, in any manner or form, to use Whistle
.\"    Communications, Inc. trademarks, including the mark "WHISTLE
.\"    COMMUNICATIONS" on advertising, endorsements, or otherwise except as
.\"    such appears in the above copyright notice or in the software.
.\"
.\" THIS SOFTWARE IS BEING PROVIDED BY WHISTLE COMMUNICATIONS "AS IS", AND
.\" TO THE MAXIMUM EXTENT PERMITTED BY LAW, WHISTLE COMMUNICATIONS MAKES NO
.\" REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, REGARDING THIS SOFTWARE,
.\" INCLUDING WITHOUT LIMITATION, ANY AND ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.
.\" WHISTLE COMMUNICATIONS DOES NOT WARRANT, GUARANTEE, OR MAKE ANY
.\" REPRESENTATIONS REGARDING THE USE OF, OR THE RESULTS OF THE USE OF THIS
.\" SOFTWARE IN TERMS OF ITS CORRECTNESS, ACCURACY, RELIABILITY OR OTHERWISE.
.\" IN NO EVENT SHALL WHISTLE COMMUNICATIONS BE LIABLE FOR ANY DAMAGES
.\" RESULTING FROM OR ARISING OUT OF ANY USE OF THIS SOFTWARE, INCLUDING
.\" WITHOUT LIMITATION, ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
.\" PUNITIVE, OR CONSEQUENTIAL DAMAGES, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES, LOSS OF USE, DATA OR PROFITS, HOWEVER CAUSED AND UNDER ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF WHISTLE COMMUNICATIONS IS ADVISED OF THE POSSIBILITY
.\" OF SUCH DAMAGE.
.\" $Whistle: ngctl.8,v 1.6 1999/01/20 03:19:44 archie Exp $
.\"
.Dd January 19, 1999
.Dt NGCTL 8
.Os
.Sh NAME
.Nm ngctl
.Nd netgraph control utility
.Sh SYNOPSIS
.Nm
.Op Fl d
.Op Fl f Ar filename
.Op Fl n Ar nodename
.Op Ar command ...
.Sh DESCRIPTION
The
.Nm
utility creates a new netgraph node of type
.Em socket
which can be used to issue netgraph commands.
If no
.Fl f
flag is given, no
command is supplied on the command line, and standard input is a tty,
.Nm
will enter interactive mode.
Otherwise
.Nm
will execute the supplied command(s) and exit immediately.
.Pp
Nodes can be created, removed, joined together, etc.
.Tn ASCII
formatted control messages can be sent to any node if that node
supports binary/ASCII control message conversion.
.Pp
In interactive mode,
.Nm
will display any control messages and data packets received by the socket node.
In the case of control messages, the message arguments are displayed in
.Tn ASCII
form if the originating node supports conversion.
.Pp
The options are as follows:
.Bl -tag -width indent
.It Fl f Ar nodeinfo
Read commands from the named file.
A single dash represents the standard input.
Blank lines and lines starting with a
.Dq #
are ignored.
.It Fl n Ar nodename
Assign
.Em nodename
to the newly created netgraph node.
The default name is
.Em ngctlXXX
where XXX is the process ID number.
.It Fl d
Increase the debugging verbosity level.
.El
.Sh COMMANDS
The currently supported commands in
.Nm
are:
.Pp
.Bd -literal -offset indent -compact
config     get or set configuration of node at <path>
connect    Connects hook <peerhook> of the node at <relpath> to <hook>
debug      Get/set debugging verbosity level
dot        Produce a GraphViz (.dot) of the entire netgraph.
help       Show command summary or get more help on a specific command
list       Show information about all nodes
mkpeer     Create and connect a new node to the node at "path"
msg        Send a netgraph control message to the node at "path"
name       Assign name <name> to the node at <path>
read       Read and execute commands from a file
rmhook     Disconnect hook "hook" of the node at "path"
show       Show information about the node at <path>
shutdown   Shutdown the node at <path>
status     Get human readable status information from the node at <path>
types      Show information about all installed node types
write      Send a data packet down the hook named by "hook".
quit       Exit program
.Ed
.Pp
Some commands have aliases, e.g.,
.Dq ls
is the same as
.Dq list .
The
.Dq help
command displays the available
commands, their usage and aliases, and a brief description.
.Sh EXIT STATUS
.Ex -std
.Sh SEE ALSO
.Xr netgraph 3 ,
.Xr netgraph 4 ,
.Xr nghook 8
.Sh HISTORY
The
.Nm netgraph
system was designed and first implemented at Whistle Communications, Inc.\& in
a version of
.Fx 2.2
customized for the Whistle InterJet.
.Sh AUTHORS
.An Archie Cobbs Aq Mt archie@whistle.com
