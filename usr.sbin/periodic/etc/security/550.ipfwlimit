#!/bin/sh -
#
# Copyright (c) 2001  The FreeBSD Project
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#

# Show ipfw rules which have reached the log limit
#

# If there is a global system configuration file, suck it in.
#
if [ -r /etc/defaults/periodic.conf ]
then
    . /etc/defaults/periodic.conf
    source_periodic_confs
fi

rc=0

if check_yesno_period security_status_ipfwlimit_enable
then
	IPFW_VERBOSE=`sysctl -n net.inet.ip.fw.verbose 2> /dev/null`
	if [ $? -ne 0 ] || [ "$IPFW_VERBOSE" -eq 0 ]; then
		exit 0
	fi
	TMP=`mktemp -t security`
	ipfw -a list | grep " log " | \
	grep '^[[:digit:]]\+[[:space:]]\+[[:digit:]]\+' | \
	awk \
		'{if ($6 == "logamount") {
			if ($2 > $7)
				{print $0}}
		}' > ${TMP}

	if [ -s "${TMP}" ]; then
		rc=1
		echo ""
		echo 'ipfw log limit reached:'
		cat ${TMP}
	fi
	rm -f ${TMP}
fi

exit $rc
