commit a522a226545730551f7e7c2685fab27cf567746c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-04-03 14:34:43 +0300

    Bump version and soname for 5.8.1

 src/liblzma/Makefile.am        | 2 +-
 src/liblzma/api/lzma/version.h | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit 1c462c2ad86ff85766928638431029cd0b0dc995
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-04-03 14:34:43 +0300

    Add NEWS for 5.8.1

 NEWS | 30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)

commit 513cabcf7f5ce1c3ed0619e791393fc53d1dbbd0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-04-03 14:34:43 +0300

    Tests: Call lzma_code() in smaller chunks in fuzz_common.h
    
    This makes it easy to crash fuzz_decode_stream_mt when tested
    against the code from 5.8.0.
    
    Obviously this might make it harder to reach some other code path now.
    The previous code has been in use since 2018 when fuzzing was added
    in 106d1a663d4b ("Tests: Add a fuzz test program and a config file
    for OSS-Fuzz.").

 tests/ossfuzz/fuzz_common.h | 31 ++++++++++++++++++++++++-------
 1 file changed, 24 insertions(+), 7 deletions(-)

commit 48440e24a25911ae59e8518b67a1e0f6f1c293bf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-04-03 14:34:43 +0300

    Tests: Add a fuzzing target for the multithreaded .xz decoder
    
    It doesn't seem possible to trigger the CVE-2025-31115 bug with this
    fuzzing target at the moment. It's because the code in fuzz_common.h
    passes the whole input buffer to lzma_code() at once.

 tests/ossfuzz/fuzz_decode_stream_mt.c | 47 +++++++++++++++++++++++++++++++++++
 1 file changed, 47 insertions(+)

commit 0c80045ab82c406858d9d5bcea9f48ebc3d0a81d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-04-03 14:34:42 +0300

    liblzma: mt dec: Fix lack of parallelization in single-shot decoding
    
    Single-shot decoding means calling lzma_code() by giving it the whole
    input at once and enough output buffer space to store the uncompressed
    data, and combining this with LZMA_FINISH and no timeout
    (lzma_mt.timeout = 0). This way the file is decoded with a single
    lzma_code() call if possible.
    
    The bug prevented the decoder from starting more than one worker thread
    in single-shot mode. The issue was noticed when reviewing the code;
    there are no bug reports. Thus maybe few have tried this mode.
    
    Fixes: 64b6d496dc81 ("liblzma: Threaded decoder: Always wait for output if LZMA_FINISH is used.")

 src/liblzma/common/stream_decoder_mt.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

commit 8188048854e8d11071b8a50d093c74f4c030acc9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-04-03 14:34:42 +0300

    liblzma: mt dec: Don't modify thr->in_size in the worker thread
    
    Don't set thr->in_size = 0 when returning the thread to the stack of
    available threads. Not only is it useless, but the main thread may
    read the value in SEQ_BLOCK_THR_RUN. With valid inputs, it made
    no difference if the main thread saw the original value or 0. With
    invalid inputs (when worker thread stops early), thr->in_size was
    no longer modified after the previous commit with the security fix
    ("Don't free the input buffer too early").
    
    So while the bug appears harmless now, it's important to fix it because
    the variable was being modified without proper locking. It's trivial
    to fix because there is no need to change the value. Only main thread
    needs to set the value in (in SEQ_BLOCK_THR_INIT) when starting a new
    Block before the worker thread is activated.
    
    Fixes: 4cce3e27f529 ("liblzma: Add threaded .xz decompressor.")
    Reviewed-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>
    Thanks-to: Sam James <sam@gentoo.org>

 src/liblzma/common/stream_decoder_mt.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit d5a2ffe41bb77b918a8c96084885d4dbe4bf6480
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-04-03 14:34:42 +0300

    liblzma: mt dec: Don't free the input buffer too early (CVE-2025-31115)
    
    The input buffer must be valid as long as the main thread is writing
    to the worker-specific input buffer. Fix it by making the worker
    thread not free the buffer on errors and not return the worker thread to
    the pool. The input buffer will be freed when threads_end() is called.
    
    With invalid input, the bug could at least result in a crash. The
    effects include heap use after free and writing to an address based
    on the null pointer plus an offset.
    
    The bug has been there since the first committed version of the threaded
    decoder and thus affects versions from 5.3.3alpha to 5.8.0.
    
    As the commit message in 4cce3e27f529 says, I had made significant
    changes on top of Sebastian's patch. This bug was indeed introduced
    by my changes; it wasn't in Sebastian's version.
    
    Thanks to Harri K. Koskinen for discovering and reporting this issue.
    
    Fixes: 4cce3e27f529 ("liblzma: Add threaded .xz decompressor.")
    Reported-by: Harri K. Koskinen <x64nop@nannu.org>
    Reviewed-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>
    Thanks-to: Sam James <sam@gentoo.org>

 src/liblzma/common/stream_decoder_mt.c | 31 ++++++++++++++++++++++---------
 1 file changed, 22 insertions(+), 9 deletions(-)

commit c0c835964dfaeb2513a3c0bdb642105152fe9f34
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-04-03 14:34:42 +0300

    liblzma: mt dec: Simplify by removing the THR_STOP state
    
    The main thread can directly set THR_IDLE in threads_stop() which is
    called when errors are detected. threads_stop() won't return the stopped
    threads to the pool or free the memory pointed by thr->in anymore, but
    it doesn't matter because the existing workers won't be reused after
    an error. The resources will be cleaned up when threads_end() is
    called (reinitializing the decoder always calls threads_end()).
    
    Reviewed-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>
    Thanks-to: Sam James <sam@gentoo.org>

 src/liblzma/common/stream_decoder_mt.c | 75 +++++++++++++---------------------
 1 file changed, 29 insertions(+), 46 deletions(-)

commit 831b55b971cf579ee16a854f177c36b20d3c6999
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-04-03 14:34:42 +0300

    liblzma: mt dec: Fix a comment
    
    Reviewed-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>
    Thanks-to: Sam James <sam@gentoo.org>

 src/liblzma/common/stream_decoder_mt.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b9d168eee4fb6393b4fe207c0aeb5faee316ca1a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-04-03 14:34:30 +0300

    liblzma: Add assertions to lzma_bufcpy()

 src/liblzma/common/common.c | 6 ++++++
 1 file changed, 6 insertions(+)

commit c8e0a4897b4d0f906966f5d4d4f662221d64f3ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-04-02 16:40:22 +0300

    DOS: Update Makefile to fix the build

 dos/Makefile | 2 ++
 1 file changed, 2 insertions(+)

commit 307c02ed698a69763ef1c9c0df4ff24727442118
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-29 12:41:32 +0200

    sysdefs.h: Avoid <stdalign.h> even with C11 compilers
    
    Oracle Developer Studio 12.6 on Solaris 10 claims C11 support in
    __STDC_VERSION__ and supports _Alignas. However, <stdalign.h> is missing.
    We only need alignas, so define it to _Alignas with C11/C17 compilers.
    If something included <stdalign.h> later, it shouldn't cause problems.
    
    Thanks to Ihsan Dogan for reporting the issue and testing the fix.
    
    Fixes: c0e7eaae8d6eef1e313c9d0da20ccf126ec61f38

 src/common/sysdefs.h | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 7ce38b318339d6c01378a77585e08169ca3a604e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-29 12:32:05 +0200

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 688e51bde4c987589717b2be1a1fde9576c604fc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-29 12:21:51 +0200

    Translations: Update the Croatian translation

 po/hr.po | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit 173fb5c68b08a8c1369550267be258132b7760c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-25 18:23:57 +0200

    doc/SHA256SUMS: Add 5.8.0

 doc/SHA256SUMS | 6 ++++++
 1 file changed, 6 insertions(+)

commit db9258e828bc2cd96e3954f1ddcc9d3530589025
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-25 15:18:32 +0200

    Bump version and soname for 5.8.0
    
    Also remove the LZMA_UNSTABLE macro.

 src/liblzma/Makefile.am         | 2 +-
 src/liblzma/api/lzma/bcj.h      | 2 --
 src/liblzma/api/lzma/version.h  | 6 +++---
 src/liblzma/common/common.h     | 2 --
 src/liblzma/liblzma_generic.map | 2 +-
 src/liblzma/liblzma_linux.map   | 2 +-
 6 files changed, 6 insertions(+), 10 deletions(-)

commit bfb752a38f89ed03fc93d54f11c09f43fda64bc2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-25 15:18:32 +0200

    Add NEWS for 5.8.0

 NEWS | 62 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 62 insertions(+)

commit 6ccbb904da851eb0c174c8dbd43e84da31739720
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-25 15:18:31 +0200

    Translations: Run "make -C po update-po"
    
    POT-Creation-Date is set to match the timestamp in 5.7.2beta which
    in the Translation Project is known as 5.8.0-pre1. The strings
    haven't changed since 5.7.1alpha but a few comments have.
    
    This is a very noisy commit, but this helps keeping the PO files
    similar between the Git repository and stable release tarballs.

 po/ca.po    | 964 ++++++++++++++++++++++++++++++++++++++++++++---------------
 po/cs.po    | 935 ++++++++++++++++++++++++++++++++++++++++++----------------
 po/da.po    | 663 ++++++++++++++++++++++++++++++-----------
 po/de.po    |   7 +-
 po/eo.po    | 966 +++++++++++++++++++++++++++++++++++++++++++++---------------
 po/es.po    |   7 +-
 po/fi.po    |   2 +-
 po/fr.po    | 916 +++++++++++++++++++++++++++++++++++++++++---------------
 po/hu.po    | 966 +++++++++++++++++++++++++++++++++++++++++++++---------------
 po/ka.po    |   7 +-
 po/ko.po    |   7 +-
 po/nl.po    |   7 +-
 po/pl.po    |   7 +-
 po/pt_BR.po | 962 ++++++++++++++++++++++++++++++++++++++++++++---------------
 po/sr.po    |   2 +-
 po/sv.po    |   7 +-
 po/tr.po    |   7 +-
 po/uk.po    |   7 +-
 po/vi.po    | 948 +++++++++++++++++++++++++++++++++++++++++++---------------
 po/zh_CN.po | 940 ++++++++++++++++++++++++++++++++++++++++++++--------------
 po/zh_TW.po |   2 +-
 21 files changed, 6209 insertions(+), 2120 deletions(-)

commit 891a5f057a6bb2dd2e3ce5e3bdd7a1f1ee03b800
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-25 15:18:31 +0200

    Translations: Run po4a/update-po
    
    Also remove the trivial obsolete messages like man page dates.
    
    This is a noisy commit, but this helps keeping the PO files similar
    between the Git repository and stable release tarballs.

 po4a/fr.po    | 82 +++++++++++++++++++++++++++++++++++++------------------
 po4a/pt_BR.po | 88 +++++++++++++++++++++++++++++++++++++++++------------------
 po4a/sr.po    | 79 ++++++++++++++++++++++++++++++++++-------------------
 3 files changed, 167 insertions(+), 82 deletions(-)

commit 4f52e7387012cb3510b01c937dd9b3a0c6a3ac6c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-25 15:18:31 +0200

    Translations: Partially fix overtranslation in Serbian man pages
    
    Names of environment variables and some other strings must be present
    in the original form. The translator couldn't be reached so I'm
    changing some of the strings myself. In the "Robot mode" section,
    occurrences in the middle of sentences weren't changed to reduce
    the chance of grammar breakage, but I kept the translated strings in
    parenthesis in the headings. It's not ideal, but now people shouldn't
    need to look at the English man page to find the English strings.

 po4a/sr.po | 66 ++++++++++++++++++++++++++++++++++++++++++--------------------
 1 file changed, 45 insertions(+), 21 deletions(-)

commit ff5d944749b99eb5ab35e2ebaf01d05a59e7169b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-25 15:18:31 +0200

    liblzma: Count the extra bytes in LZMA/LZMA2 decoder memory usage

 src/liblzma/lz/lz_decoder.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 943b012d09f717f7b44284c4e4976ea41264c731
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-25 15:18:31 +0200

    liblzma: Use SSE2 intrinsics instead of memcpy() in dict_repeat()
    
    SSE2 is supported on every x86-64 processor. The SSE2 code is used on
    32-bit x86 if compiler options permit unconditional use of SSE2.
    
    dict_repeat() copies short random-sized unaligned buffers. At least
    on glibc, FreeBSD, and Windows (MSYS2, UCRT, MSVCRT), memcpy() is
    clearly faster than byte-by-byte copying in this use case. Compared
    to the memcpy() version, the new SSE2 version reduces decompression
    time by 0-5 % depending on the machine and libc. It should never be
    slower than the memcpy() version.
    
    However, on musl 1.2.5 on x86-64, the memcpy() version is the slowest.
    Compared to the memcpy() version:
    
      - The byte-by-version takes 6-7 % less time to decompress.
      - The SSE2 version takes 16-18 % less time to decompress.
    
    The numbers are from decompressing a Linux kernel source tarball in
    single-threaded mode on older AMD and Intel systems. The tarball
    compresses well, and thus dict_repeat() performance matters more
    than with some other files.

 src/liblzma/lz/lz_decoder.c | 14 ++++++--
 src/liblzma/lz/lz_decoder.h | 87 ++++++++++++++++++++++++++++++++++++++++-----
 2 files changed, 90 insertions(+), 11 deletions(-)

commit bc14e4c94e788d42eeab984298391fc0ca46f969
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-25 15:18:31 +0200

    liblzma: Add "restrict" to a few functions in lz_decoder.h
    
    This doesn't make any difference in practice because compilers can
    already see that writing through the dict->buf pointer cannot modify
    the contents of *dict itself: The LZMA decoder makes a local copy of
    the lzma_dict structure, and even if it didn't, the pointer to
    lzma_dict in the LZMA decoder is already "restrict".
    
    It's nice to add "restrict" anyway. uint8_t is typically unsigned char
    which can alias anything. Without the above conditions or "restrict",
    compilers could need to assume that writing through dict->buf might
    modify *dict. This would matter in dict_repeat() because the loops
    refer to dict->buf and dict->pos instead of making local copies of
    those members for the duration of the loops. If compilers had to
    assume that writing through dict->buf can affect *dict, then compilers
    would need to emit code that reloads dict->buf and dict->pos after
    every write through dict->buf.

 src/liblzma/lz/lz_decoder.h | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit e82ee090c567e560f51a056775a17f534d159d65
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-25 15:18:30 +0200

    liblzma: Define LZ_DICT_INIT_POS for initial dictionary position
    
    It's more readable.

 src/liblzma/lz/lz_decoder.c | 4 ++--
 src/liblzma/lz/lz_decoder.h | 9 ++++++---
 2 files changed, 8 insertions(+), 5 deletions(-)

commit 8e7cd0091e5239334437decbe1989662d45a2f47
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-25 15:18:30 +0200

    Windows: Update README-Windows.txt about UCRT

 windows/README-Windows.txt | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 2c24292d341e505e5579fccac3bce5bc71d839ef
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-25 15:18:15 +0200

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 48053c90898fa191a216aefca01626520a7413f4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-17 15:33:25 +0200

    Translations: Update the Italian translation

 po/it.po | 32 ++++++++++++++++----------------
 1 file changed, 16 insertions(+), 16 deletions(-)

commit 8d6f06a65f50358fad13567f5dd8af41ef1d2b58
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-17 15:28:56 +0200

    Translations: Update the Portuguese translation
    
    The language tag in the Translation Project is pt, not pt_PT,
    thus I changed the "Language:" line to pt.

 po/pt.po | 1045 +++++++++++++++++++++++++++++++-------------------------------
 1 file changed, 526 insertions(+), 519 deletions(-)

commit c3439b039f46fe547ad603e16dc3bd63c1ca9b0c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-14 13:02:21 +0200

    Translations: Update the Italian translation

 po/it.po | 1020 +++++++++++++++++++++++++++++++-------------------------------
 1 file changed, 516 insertions(+), 504 deletions(-)

commit 79b4ab8d79528dd633a84df2d29e63f5d13ccbdf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-12 20:48:39 +0200

    Translations: Update the Italian man page translations
    
    Only trivial additions but this keeps the file in sync with the TP.

 po4a/it.po | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 515b6fc8557825e1335012b3b1c8cf71e2c38775
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-12 19:38:54 +0200

    Translations: Update the Italian man page translations

 po4a/it.po | 129 ++++++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 77 insertions(+), 52 deletions(-)

commit 333b7c0b776295f0941269b4e6cdb1a0ba5f6218
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-10 21:00:31 +0200

    Translations: Update the Korean man page translations

 po4a/ko.po | 139 +++++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 80 insertions(+), 59 deletions(-)

commit ae52ebd27dc0be5e1ba62fb0c45255d8563fcd88
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-10 20:56:57 +0200

    Translations: Update the German man page translations

 po4a/de.po | 102 ++++++++++++++++++++++++++++++++++++++-----------------------
 1 file changed, 63 insertions(+), 39 deletions(-)

commit 1028e52c93d2292b44ff7bae8e721025d2f2c94d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-10 13:13:30 +0200

    CMake: Fix tuklib_use_system_extensions
    
    Revert back to a macro so that list(APPEND CMAKE_REQUIRED_DEFINITIONS)
    will affect the calling scope. I had forgotten that while CMake
    functions inherit the variables from the parent scope, the changes
    to them are local unless using set(... PARENT_SCOPE).
    
    This also means that the commit message in 5bb77d0920dc is wrong. The
    commit itself is still fine, making it clearer that -DHAVE_SYS_PARAM_H
    is only needed for specific check_c_source_compiles() calls.
    
    Fixes: c1ea7bd0b60eed6ebcdf9a713ca69034f6f07179

 cmake/tuklib_common.cmake | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit 80e48836024ec2d7cbd557575be6da3d1f055cba
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-10 11:38:55 +0200

    INSTALL: Document -bmaxdata on AIX
    
    This is based on a pull request and AIX docs. I haven't tested the
    instructions myself.
    
    Closes: https://github.com/tukaani-project/xz/pull/137

 INSTALL | 5 +++++
 1 file changed, 5 insertions(+)

commit ab319186b6d0454285ff4941a777ac95e580f60f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-10 11:37:19 +0200

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 4434671a04436038f88ab0feaa251cc8d7abb683
Author: Collin Funk <collin.funk1@gmail.com>
Date:   2025-03-09 19:14:31 -0700

    tuklib_physmem: Silence -Wsign-conversion on AIX
    
    Closes: https://github.com/tukaani-project/xz/pull/168

 src/common/tuklib_physmem.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 18bcaa4fafc935d89ffde94301fa6427907306bf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-09 22:10:38 +0200

    Translations: Update the Romanian man page translations

 po4a/ro.po | 110 ++++++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 66 insertions(+), 44 deletions(-)

commit 1e17b7f42fe2f9df279f44ad7043d3753cd00363
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-09 21:28:15 +0200

    Translations: Update the Croatian translation

 po/hr.po | 19 +++++++++++--------
 1 file changed, 11 insertions(+), 8 deletions(-)

commit ff85e6130d5940896915cdbb99aa9ece9d41240b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-09 21:23:34 +0200

    Translations: Update the Romanian translation

 po/ro.po | 24 +++++++++++++-----------
 1 file changed, 13 insertions(+), 11 deletions(-)

commit a5bfb33f30f77e656723d365db8b06e089d3de61
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-09 21:11:34 +0200

    Translations: Update the Ukrainian man page translations

 po4a/uk.po | 107 ++++++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 64 insertions(+), 43 deletions(-)

commit 5bb77d0920dcf949d8eb04eb19204b7b199e42df
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-09 14:43:07 +0200

    CMake: Use cmake_push_check_state in tuklib_cpucores and tuklib_physmem
    
    Now the changes to CMAKE_REQUIRED_DEFINITIONS are temporary and don't
    leak to the calling code.

 cmake/tuklib_cpucores.cmake | 3 +++
 cmake/tuklib_physmem.cmake  | 4 +++-
 2 files changed, 6 insertions(+), 1 deletion(-)

commit c1ea7bd0b60eed6ebcdf9a713ca69034f6f07179
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-09 14:06:35 +0200

    CMake: Revise tuklib_use_system_extensions
    
    Define NetBSD and Darwin/macOS feature test macros. Autoconf defines
    these too (and a few others).
    
    Define the macros on Windows except with MSVC. The _GNU_SOURCE macro
    makes a difference with mingw-w64.
    
    Use a function instead of a macro. Don't take the TARGET_OR_ALL argument
    because there's always global effect because the global variable
    CMAKE_REQUIRED_DEFINITIONS is modified.

 CMakeLists.txt            |  2 +-
 cmake/tuklib_common.cmake | 27 +++++++++++++++------------
 2 files changed, 16 insertions(+), 13 deletions(-)

commit 4243c45a48ef8c103d77b75d9f93d48adcb631db
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-08 14:54:29 +0200

    doc/SHA256SUMS: Add 5.7.2beta

 doc/SHA256SUMS | 3 +++
 1 file changed, 3 insertions(+)

commit cc7f2fc1cf9f3c63cbce90ee92bfbb004f98140b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-08 14:29:57 +0200

    Bump version and soname for 5.7.2beta

 src/liblzma/Makefile.am         | 2 +-
 src/liblzma/api/lzma/version.h  | 4 ++--
 src/liblzma/liblzma_generic.map | 2 +-
 src/liblzma/liblzma_linux.map   | 2 +-
 4 files changed, 5 insertions(+), 5 deletions(-)

commit 62e44b36167de27541776dcf677ed04077c9fd19
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-08 14:24:38 +0200

    Add NEWS for 5.7.2beta

 NEWS | 35 +++++++++++++++++++++++++++++++++++
 1 file changed, 35 insertions(+)

commit 70f1f203789433b5d7b8b22e1655abc465d659f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-08 14:23:00 +0200

    COPYING: Remove the note about old releases

 COPYING | 19 -------------------
 1 file changed, 19 deletions(-)

commit db9827dc38ff79de747a6fc7a99619e961dbc5e6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-08 14:22:28 +0200

    xz: Update the man page about the environment variables again

 src/xz/xz.1 | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

commit 99c584891bd1d946561cebded2226df9b83f1efb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-06 19:26:09 +0200

    liblzma: Edit spelling in a comment
    
    It was found with codespell.

 src/liblzma/api/lzma/container.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 7a234c8c05a8f64efde013cd6a6d31a90b7d0d28
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-06 19:14:23 +0200

    xz: Update the man page about the environment variables

 src/xz/xz.1 | 26 ++++++++++++++++++++++++--
 1 file changed, 24 insertions(+), 2 deletions(-)

commit 808f05af3ef40730d40b3798666757bd866484f1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-06 17:37:39 +0200

    Docs: Add a few TRANSLATORS comments to man pages
    
    All translators know that --command-line-options must not be translated.
    With some other strings it's not obvious when the untranslated string
    must be preserved. These comments hopefully help.

 src/scripts/xzmore.1 |  2 ++
 src/xz/xz.1          | 22 ++++++++++++++++++++++
 2 files changed, 24 insertions(+)

commit 051de255f00dda331e2a6fa189a6e7fe56a7c69b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-06 16:34:32 +0200

    Scripts: Mark the LZMA Utils script aliases as deprecated
    
    The deprecated aliases are lzcmp, lzdiff, lzless, lzmore,
    lzgrep, lzegrep, and lzfgrep. The commands that start with
    the xz prefix have identical behavior, for example, both
    lzgrep and xzgrep handle all supported file formats.
    
    This doesn't affect lzma, unlzma, lzcat, lzmadec, or lzmainfo.
    The last release of LZMA Utils was made in 2008, but the lzma
    compatibility alias for the gzip-like tool is still in common use.
    Deprecating it would cause unnecessary breakage.

 src/scripts/xzdiff.1 | 5 ++++-
 src/scripts/xzgrep.1 | 6 +++++-
 src/scripts/xzless.1 | 4 +++-
 src/scripts/xzmore.1 | 4 +++-
 4 files changed, 15 insertions(+), 4 deletions(-)

commit 4941ea454c02cf15a64d6434a0778fc2a81282fc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-02 21:13:04 +0200

    Translations: Add Serbian man page translations

 po4a/po4a.conf |    2 +-
 po4a/sr.po     | 3892 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 3893 insertions(+), 1 deletion(-)

commit d142d96f24daa451edaabfca8594e202932b3c0b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-03-02 20:42:14 +0200

    Translations: Update Georgian translation

 po/ka.po | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 9b7e45d841195c8fd8d286e26f810df28c53dd16
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-28 21:07:21 +0200

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 9351592710e0df3238b09d39c545a643c50ac88f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-22 16:04:58 +0200

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 9023be7831faca2f28def55e16c39e3a42e1e262
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-19 16:33:52 +0200

    Translations: Update the Croatian translation

 po/hr.po | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 2eaf242c56e8c65db83d48b018fa44aeafeb33a5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-17 21:46:15 +0200

    Build: Fix out-of-tree builds when using the replacement getopt_long
    
    Nowaways $(top_builddir)/lib/getopt.h depends on headers in
    $(top_srcdir)/lib, so both have to be in the include path.
    CMake-based build already did this.
    
    Fixes: 7e884c00d0093c38339f17fb1d280eec493f42ca

 src/lzmainfo/Makefile.am | 6 ++++--
 src/xz/Makefile.am       | 6 ++++--
 src/xzdec/Makefile.am    | 6 ++++--
 3 files changed, 12 insertions(+), 6 deletions(-)

commit 41322b2c60cd2c67a1053cb40d27e573420185b7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-17 18:25:52 +0200

    m4/getopt.m4: Remove an outdated comment

 m4/getopt.m4 | 3 ---
 1 file changed, 3 deletions(-)

commit 03c23a4952bce1b50a1d213ca2d1c15acd76a489
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-17 18:11:58 +0200

    Build: Allow forcing the use of the replacement getopt_long
    
    Now one can pass gl_replace_getopt=yes to configure to force the use
    of GNU getopt_long from the lib directory. This only checks that the
    value of gl_replace_getopt is non-empty, so one cannot force the
    replacement to be disabled.
    
    Closes: https://github.com/tukaani-project/xz/pull/166

 m4/getopt.m4 | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit c23b837d15960ecc0d537f0260f389904e1e7f02
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-17 18:11:42 +0200

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 2672a38f1159babf9ba3cca429f644bb823a8bdd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-12 19:23:31 +0200

    Update THANKS

 THANKS | 2 ++
 1 file changed, 2 insertions(+)

commit 4fdcbfaf3f222299747c6a815762a74eeb1b0b23
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-11 12:13:41 +0200

    Update THANKS

 THANKS | 3 +++
 1 file changed, 3 insertions(+)

commit 0d553568f1af9a35779ecac41392a6c871786930
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-08 11:39:08 +0200

    Translations: Update the Polish translation

 po/pl.po | 802 ++++++++++++++++++++++++++++++++++++---------------------------
 1 file changed, 464 insertions(+), 338 deletions(-)

commit 9f165076aebb3b5115d2b6520529db8fa11a6bdd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-07 19:12:03 +0200

    Docs: Update TODO a little

 TODO | 22 ++++------------------
 1 file changed, 4 insertions(+), 18 deletions(-)

commit f5aa292c534f87b9dd588e667d1c65ed31e5f289
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-07 18:50:56 +0200

    Add researcher credits of CVE-2022-1271 and CVE-2024-47611 to THANKS
    
    These are specific phrases that were included in the advisories and
    NEWS. It's nice to have them in THANKS as well.

 THANKS | 4 ++++
 1 file changed, 4 insertions(+)

commit 7cf463b5add70e3fb48a10de3965c8beb6c01ad9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-07 18:43:00 +0200

    Update THANKS

 THANKS | 5 +++++
 1 file changed, 5 insertions(+)

commit 6b7fe7e27b77038592e2c2e31df955059dda7d1d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-04 14:12:46 +0200

    Docs: Update the "Translations" section in README
    
    Make it clearer that translations cannot be accepted if they don't
    come via the Translation Project.
    
    Column headings have been handled automatically for years and now --help
    is autowrapped too, so the related instructions can be removed.

 README | 107 ++++++++++++++++++++++++-----------------------------------------
 1 file changed, 39 insertions(+), 68 deletions(-)

commit 2c7aee94936babf84b61b55420e503a0b2629ec1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-04 13:23:53 +0200

    debug/translations.bash: Revise a little
    
    Make it work for out-of-tree builds without requiring one to specify
    the location of the xz executable.
    
    Add xz --filters-help.
    
    Make the output shorter by reducing the number of xz -lvv test files.
    
    Show the value of LANGUAGE environment variable.
    
    Show the xz.git version using git describe --abbrev=8 instead of =4.

 debug/translation.bash | 24 +++++++++++-------------
 1 file changed, 11 insertions(+), 13 deletions(-)

commit c6b15e7045209002bbbf4979c48072af01c20d8d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-04 13:20:52 +0200

    Build: Use "git describe --abbrev=8" in snapshot tarball names
    
    8 is more likely to be reproducible than the old 4 without being
    excessively long for a small repository like this.

 Makefile.am | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 0ce97987c5b27cfb6f98984e5fd7477880e0cf33
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-04 19:37:17 +0200

    Update THANKS

 THANKS | 2 ++
 1 file changed, 2 insertions(+)

commit 353c33355cb12e5016d49052fd1e90d15568aa37
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-03 16:29:31 +0200

    Translations: Update the Serbian translation

 po/sr.po | 805 ++++++++++++++++++++++++++++++++++++---------------------------
 1 file changed, 458 insertions(+), 347 deletions(-)

commit 887dc281885052bced32b3aa309506ea58a2e78e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-03 16:15:38 +0200

    Translations: Update Chinese (traditional) translation
    
    Since there are no spaces between words, the unsophisticated automatic
    word wrapping code needs some help. Compared to the version in the
    Translation Project, I added a few \t characters which the word
    wrapping code interprets as zero width spaces (hopefully they are
    placed correctly). These edits can be seen with this command:
    
        grep -v ^# po/zh_TW.po | grep --color -F '\t'

 po/zh_TW.po | 843 +++++++++++++++++++++++++++++++++---------------------------
 1 file changed, 471 insertions(+), 372 deletions(-)

commit 0f1454cf5f460a4095f47f8f73f5a290e9777d7f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-03 16:12:44 +0200

    Update THANKS

 THANKS | 2 ++
 1 file changed, 2 insertions(+)

commit 23ea031820086d302a213be005a091df763b8a7b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-02 14:15:07 +0200

    Build: Update posix-shell.m4 from Gnulib
    
    Tabs have been converted to spaces and a "serial" number has been
    added. The previous version was from 2008/2009. There are no functional
    changes since then but now it's clearer that the copy in XZ Utils
    isn't outdated.
    
    The new file was picked from the Gnulib commit
    81a4c1e3b7692e95c0806d948cbab9148ad85ef2. A later commit adds
    a warranty disclaimer to the license, which obviously is fine,
    but I didn't find a SPDX license identifier for the new license,
    so for simplicity I used the earlier commit.

 m4/posix-shell.m4 | 31 ++++++++++++++++---------------
 1 file changed, 16 insertions(+), 15 deletions(-)

commit 84c33c0384aa4604ff7956f2fae6f83ea60ba96b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-02 12:51:03 +0200

    Build: Check for -fsanitize= also in $CC
    
    People may put -fsanitize in CC instead of CFLAGS so check both.
    Landlock sandbox isn't compatible with sanitizers so it's nice
    to catch the incompatible options at configure time.
    
    Don't attempt to do the same in CMakeLists.txt; the check for
    CMAKE_C_FLAGS / CFLAGS shall be enough there. The extra flags from
    the CC environment variable go into the undocumented internal variable
    CMAKE_C_COMPILER_ARG1 (all flags from CC go into that same variable).
    Peeking the internal variable merely for improved diagnostics isn't
    worth it.
    
    Fixes: 88588b1246d8c26ffbc138b3e5c413c5f14c3179

 configure.ac | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit a7304ea4a7daede9789a8fe422b714e372737120
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-26 19:11:20 +0300

    Build: Remove the FIXME about -Werror checks

 configure.ac | 7 -------
 1 file changed, 7 deletions(-)

commit 1780bba74075da5e7764615bd323e95e19057dee
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-26 19:10:51 +0300

    Build: If using a GCC compatible compiler, ensure that -Werror works
    
    The check can be skipped by passing SKIP_WERROR_CHECK=yes to configure.
    It won't be documented anywhere else than in the error message.
    
    Ways to test:
    
        ./configure CC=gcc CFLAGS=-Wunused-macros
        ./configure CC=clang CFLAGS=-Weverything
        ./configure CC=clang CFLAGS=-Weverything SKIP_WERROR_CHECK=yes

 configure.ac | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

commit 3aca2daefbdedd7cc0fb75ddde6b714273b1cc1d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-02 14:30:15 +0200

    Update THANKS

 THANKS | 4 ++++
 1 file changed, 4 insertions(+)

commit 186ff78ab40ceb07cde139506cab42a927ca99d2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-02-01 12:49:09 +0200

    Translations: Update Romanian translation

 po/ro.po | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

commit 40a8ce3e10747ca5233610cc2cb704fc303c48e4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-30 18:16:43 +0200

    Translations: Update Korean man page translations

 po4a/ko.po | 146 ++++++++++++++++++++++++-------------------------------------
 1 file changed, 56 insertions(+), 90 deletions(-)

commit 1787f9bd18ea8798d64b636cdefe6d0fda9b8f72
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-30 18:15:52 +0200

    Translations: Add Italian man page translations

 po4a/it.po     | 3876 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 po4a/po4a.conf |    2 +-
 2 files changed, 3877 insertions(+), 1 deletion(-)

commit 9b9182e561787a811fc0178489589f28c3e0174c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 22:18:29 +0200

    Translations: Update the Finnish translation

 po/fi.po | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

commit 7d73ff7a9d8eab6270f0b1ff7d10c0aa6f5ba53f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 20:50:03 +0200

    lzmainfo: Use tuklib_mbstr_wrap for --help text
    
    Some languages have so long strings that they need to be wrapped.

 CMakeLists.txt           |  4 ++++
 src/lzmainfo/Makefile.am |  2 ++
 src/lzmainfo/lzmainfo.c  | 36 ++++++++++++++++++++++++++----------
 3 files changed, 32 insertions(+), 10 deletions(-)

commit c56eb4707627d700695813fccdddd1483eac4f21
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 20:00:06 +0200

    Translations: Update the Croatian translation

 po/hr.po | 926 ++++++++++++++++++++++++++++++++++++---------------------------
 1 file changed, 529 insertions(+), 397 deletions(-)

commit 69f4aec0a2442ab81f9ab66e5871a6546aefb0fc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:56:01 +0200

    Translations: Update the Finnish translation

 po/fi.po | 911 +++++++++++++++++++++++++++++++++------------------------------
 1 file changed, 483 insertions(+), 428 deletions(-)

commit d49dde33cf5f488bb38b1f57e172c4e3343fb383
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:55:27 +0200

    Translations: Update the German man page translations

 po4a/de.po | 147 +++++++++++++++++++++++--------------------------------------
 1 file changed, 55 insertions(+), 92 deletions(-)

commit 23b99fc4a1f35bec5d63ffd02b14cacbdce9fe3c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:55:17 +0200

    Translations: Update the German translation

 po/de.po | 825 +++++++++++++++++++++++++++++++++++----------------------------
 1 file changed, 460 insertions(+), 365 deletions(-)

commit 7edab2bde0606b42229d9c04fe664069e38de3fb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:55:05 +0200

    Translations: Update the Turkish translation

 po/tr.po | 892 +++++++++++++++++++++++++++++++++++----------------------------
 1 file changed, 490 insertions(+), 402 deletions(-)

commit fac4d0fa5277d7a1f621707621ee9516f0bdbac5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:54:36 +0200

    Translations: Add the Dutch translation

 po/LINGUAS |    1 +
 po/nl.po   | 1268 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 1269 insertions(+)

commit abe5092f24b55dde9f7f78fac1bf810bce173273
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:53:50 +0200

    Translations: Update the Georgian translation

 po/ka.po | 153 +++++++++++++++++++++++++++++++++++++++++++++++----------------
 1 file changed, 115 insertions(+), 38 deletions(-)

commit b97b23c78d8100eec363c3e999c511560366d347
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:53:21 +0200

    Translations: Update the Spanish translation

 po/es.po | 824 ++++++++++++++++++++++++++++++++++-----------------------------
 1 file changed, 450 insertions(+), 374 deletions(-)

commit c68318cb49e0562bd22e88724ce85e76c6789a3a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:53:06 +0200

    Translations: Update the Korean translation

 po/ko.po | 785 +++++++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 460 insertions(+), 325 deletions(-)

commit 153ee17f635962a474499f786ea1de1e1a2bb276
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:52:42 +0200

    Translations: Update the Romanian man page translations

 po4a/ro.po | 141 +++++++++++++++++++++++--------------------------------------
 1 file changed, 54 insertions(+), 87 deletions(-)

commit 6ed308197e1f9d6c7a5cfe5aae301e75544017c4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:51:59 +0200

    Translations: Update the Romanian translation

 po/ro.po | 818 +++++++++++++++++++++++++++++++++++----------------------------
 1 file changed, 461 insertions(+), 357 deletions(-)

commit 06028803e19219f642aa9abddd3525c43594ec6c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:50:50 +0200

    Translations: Update the Ukrainian man page translations

 po4a/uk.po | 142 +++++++++++++++++++++++--------------------------------------
 1 file changed, 54 insertions(+), 88 deletions(-)

commit 8cbaf896a65a53c1d1e7e2ffc80d6ea216b1e8df
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:50:26 +0200

    Translations: Update the Ukrainian translation

 po/uk.po | 813 ++++++++++++++++++++++++++++++++++++---------------------------
 1 file changed, 460 insertions(+), 353 deletions(-)

commit 81c352907b8048b97d9868947026701a49f377ef
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-29 19:48:43 +0200

    Translations: Update the Swedish translation

 po/sv.po | 847 ++++++++++++++++++++++++++++++++++-----------------------------
 1 file changed, 462 insertions(+), 385 deletions(-)

commit 999ce263718a52ba74245c3e2a416ab11494d1b1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-28 16:33:32 +0200

    tuklib_physmem: Clean up disabled code

 src/common/tuklib_physmem.c | 9 +--------
 1 file changed, 1 insertion(+), 8 deletions(-)

commit 4d7e7c9d94f7a5ad4931a5bbd6ed9d00173fa1ab
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-28 16:28:18 +0200

    Windows: Avoid an error message on broken pipe
    
    Also make xz not process more input files after a broken pipe has
    been detected. This matches the behavior on POSIX. If all files
    are being written to standard output, trying with the next file is
    pointless when it's known that standard output won't accept more data.
    
    xzdec already stopped after the first error. It does so with all
    errors, so it differs from xz:
    
        $ xz -dc not_found_1 not_found_2
        xz: not_found_1: No such file or directory
        xz: not_found_2: No such file or directory
    
        $ xzdec not_found_1 not_found_2
        xzdec: not_found_1: No such file or directory
    
    Reported-by: Vincent Torri

 src/xz/file_io.c  | 13 +++++++++++++
 src/xzdec/xzdec.c | 11 ++++++++++-
 2 files changed, 23 insertions(+), 1 deletion(-)

commit 95b638480aa8203e547c709c651f421c22db1718
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-23 19:59:17 +0200

    doc/SHA256SUMS: Add 5.6.4 and 5.7.1alpha

 doc/SHA256SUMS | 9 +++++++++
 1 file changed, 9 insertions(+)

commit cdae0df31e4c2dfb1e885941cd1998e5a2b6e39d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-23 11:50:42 +0200

    Bump version and soname for 5.7.1alpha

 src/liblzma/Makefile.am         | 2 +-
 src/liblzma/api/lzma/version.h  | 2 +-
 src/liblzma/liblzma_generic.map | 2 +-
 src/liblzma/liblzma_linux.map   | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

commit 4d2af2c43bae25ef4ef9cd88304471d4859aa322
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-23 11:48:43 +0200

    Translations: Run po4a/update-po

 po4a/de.po    | 64 +++++++++++++++++++++++++++++++++++++++++++++++++----------
 po4a/fr.po    | 57 +++++++++++++++++++++++++++++++++++++++++++++++-----
 po4a/ko.po    | 64 +++++++++++++++++++++++++++++++++++++++++++++++++----------
 po4a/pt_BR.po | 57 +++++++++++++++++++++++++++++++++++++++++++++++-----
 po4a/ro.po    | 64 +++++++++++++++++++++++++++++++++++++++++++++++++----------
 po4a/uk.po    | 64 +++++++++++++++++++++++++++++++++++++++++++++++++----------
 6 files changed, 320 insertions(+), 50 deletions(-)

commit ff0b825505e60e21b32e33c42f551c8f34ba393f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-23 11:40:46 +0200

    Add NEWS for 5.7.1alpha

 NEWS | 107 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 107 insertions(+)

commit f6cd3e3bfc8d1f5a76dd55170968bf4582b95baf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-23 11:40:46 +0200

    Add NEWS for 5.6.4

 NEWS | 45 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 45 insertions(+)

commit b3af3297e4d6cf0eafb48155aa97bb06c82a9228
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-23 11:40:46 +0200

    NEWS: The security fix in 5.6.3 is known as CVE-2024-47611

 NEWS | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit a04b9dd0c7c74fabd8c393d2dc68a221276d6e29
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-22 16:55:09 +0200

    windows/build.bash: Fix error message
    
    Fixes: 1ee716f74085223c8fbcae1d5a384e6bf53c0f6a

 windows/build.bash | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 4eae859ae8ad7072eaa74aeaee79a2c3c12c55cb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-22 15:03:55 +0200

    Windows: Disable MinGW-w64's stdio functions in size-optimized builds
    
    This only affects builds with UCRT. With legacy MSVCRT, the replacement
    functions are always enabled.
    
    Omitting the MinGW-w64 replacements saves over 20 KiB per executable.
    The downside is that --enable-small or XZ_SMALL=ON disables thousand
    separator support in xz messages. If someone is OK with the slower
    speed of slightly smaller builds, lack of thousand separators won't
    matter.
    
    Don't override __USE_MINGW_ANSI_STDIO if it is already defined (via
    CPPFLAGS or such method).

 src/common/sysdefs.h | 30 +++++++++++++++++++++---------
 src/xz/util.c        |  6 +++++-
 2 files changed, 26 insertions(+), 10 deletions(-)

commit a831bc185bdd44c06847eae8df2d35cc281f65da
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-20 16:44:27 +0200

    liblzma: Add raw ARM64, RISC-V, and x86 BCJ filter APIs
    
    Put them behind the LZMA_UNSTABLE macro for now.
    
    These low-level special APIs might become useful in erofs-utils.

 src/liblzma/api/lzma/bcj.h      | 99 +++++++++++++++++++++++++++++++++++++++++
 src/liblzma/common/common.h     |  2 +
 src/liblzma/liblzma_generic.map | 10 +++++
 src/liblzma/liblzma_linux.map   | 10 +++++
 src/liblzma/simple/arm64.c      | 18 ++++++++
 src/liblzma/simple/riscv.c      | 18 ++++++++
 src/liblzma/simple/x86.c        | 24 ++++++++++
 7 files changed, 181 insertions(+)

commit 6f5cdd4534faf7db4b6c123651d6a606bc59b98c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-20 16:31:49 +0200

    xz: Unify a few strings with liblzma
    
    Avoid having both "%s: foo" and "foo" as translatable strings
    so that translators don't need to handle it twice.

 src/xz/options.c | 11 ++++++-----
 src/xz/util.c    |  4 ++--
 2 files changed, 8 insertions(+), 7 deletions(-)

commit 713fdaa8b06a83f18b06811aba7b9bd7b7cbf1cb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-20 16:31:49 +0200

    xz: Translate error messages from lzma_str_to_filters()
    
    liblzma doesn't use gettext but the messages are included in xz.pot,
    so xz can translate the messages.

 src/xz/coder.c | 9 +++------
 1 file changed, 3 insertions(+), 6 deletions(-)

commit f2e2b267cab8d7aa0b0a58c325546ee5070c0028
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-20 16:31:49 +0200

    liblzma: Mark string conversion messages as translatable

 po/POTFILES.in                         |  1 +
 src/liblzma/common/string_conversion.c | 96 ++++++++++++++++++++--------------
 2 files changed, 59 insertions(+), 38 deletions(-)

commit f49d7413d9a0d480ded6d448c1ef7475ae6cd1c9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-20 16:31:35 +0200

    liblzma: Tweak a few error messages in lzma_str_to_filters()

 src/liblzma/common/string_conversion.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

commit da359c360e986b21cd8d7b888c6a80f56b9d49c7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-19 20:11:54 +0200

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit f032373561cefaf07f92ffe3fbc471ec6770456e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-19 19:40:32 +0200

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 51f038f8cbd5d8a95954c05bfcbbc32f2a313615
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-13 08:44:58 +0200

    liblzma: memcmplen.h: Use 8-byte method on 64-bit unaligned archs
    
    Previously it was enabled only on x86-64 and ARM64 when also support
    for unaligned access was detected or manually enabled at built time.
    
    In the default build configuration, the 8-byte method is now enabled
    also on 64-bit RISC-V and 64-bit PowerPC (both endiannesses). It was
    reported that on big endian POWER9, encoding time may reduce 12-13 %.
    
    This change only affects builds with GCC and Clang because the code
    uses __builtin_ctzll or __builtin_clzll.
    
    Thanks to Marcus Comstedt for testing on POWER9.

 src/liblzma/common/memcmplen.h | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 96336b0110d47756a9fd2a103fbf0a99e905fbed
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-12 13:06:17 +0200

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 150356207c8d6a3e0af465b676430d19d62f884c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-12 12:59:20 +0200

    liblzma: Fix the encoder breakage on big endian ARM64
    
    When the 8-byte method was enabled for ARM64, a check for endianness
    wasn't added. This broke the LZMA/LZMA2 encoder. Test suite caught it.
    
    Fixes: cd64dd70d5665b6048829c45772d08606f44672e
    Co-authored-by: Marcus Comstedt <marcus@mc.pp.se>

 src/liblzma/common/memcmplen.h | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

commit b01b0958025a2da284b53a583f313f8140636cb5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-12 11:04:27 +0200

    Windows: Update manifest comments about long UTF-8 filenames

 src/common/w32_application.manifest.comments.txt | 23 +++++++++++++++--------
 1 file changed, 15 insertions(+), 8 deletions(-)

commit 0dfc67d37ebb038be8a9b17b536d1b561d52e81a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-12 10:47:58 +0200

    Windows: Update build.bash and its README-Windows.txt to UCRT
    
    While MSVCRT builds are possible, UCRT works better with UTF-8.
    A 32-bit build is included still but hopefully it's not actually
    needed anymore.

 windows/README-Windows.txt | 17 ++++++++---------
 windows/build.bash         | 20 ++++++++++++++------
 2 files changed, 22 insertions(+), 15 deletions(-)

commit 7b3eb2db6c4ba24b5eb438e58ab1ca57e14e59c2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-10 13:11:40 +0200

    Translations: Update Serbian translation
    
    I rewrapped a few overlong lines. Those edits aren't in the
    Translation Project. Automatic wrapping in the master branch
    means that these strings need to be updated soon anyway.

 po/sr.po | 346 ++++++++++++++++++++++-----------------------------------------
 1 file changed, 121 insertions(+), 225 deletions(-)

commit 950da11ce09c90412dcbca29689575037640667a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-08 19:26:29 +0200

    Build: Use --sort=name in TAR_OPTIONS
    
    Use also LC_COLLATE=C to make the sorting locale-independent.
    Sorting makes the file order reproducible.

 Makefile.am | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 75d91d6b39ea3e2fae8f027dcec01be2dca9594d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-08 19:08:08 +0200

    xz: Workaround broken O_SEARCH in musl
    
    Testing with musl 1.2.5 and Linux 6.12, O_SEARCH doesn't result
    in a file descriptor that works with fsync() although it should work.
    See the added comment.
    
    The same issue affected gzip --synchronous:
    
        https://bugs.gnu.org/75405
    
    Thanks to Paul Eggert.

 src/xz/file_io.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

commit ea92eae122a3ccefa61087f84fd99b417fc9ee3c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-07 21:34:33 +0200

    Revert "xz: O_SEARCH cannot be used for fsync()"
    
    This reverts commit 4014e2479c7b0273f15bd0c9c017c5fe859b0d8f.
    
    POSIX-conforming O_SEARCH should allow fsync().

 src/xz/file_io.c | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

commit 4014e2479c7b0273f15bd0c9c017c5fe859b0d8f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-05 21:43:11 +0200

    xz: O_SEARCH cannot be used for fsync()
    
    Opening a directory with O_SEARCH results in a file descriptor that can
    be used with functions like openat(). Such a file descriptor cannot be
    used with fsync(). Use O_RDONLY instead.
    
    In musl, O_SEARCH becomes Linux-specific O_PATH. A file descriptor
    from O_PATH doesn't allow fsync().
    
    Seems that it's not possible to fsync() a directory that has write
    and search permissions but not read permission.
    
    Fixes: 2a9e91d796d091740489d951fa7780525e4275f1

 src/xz/file_io.c | 21 ++++++++++-----------
 1 file changed, 10 insertions(+), 11 deletions(-)

commit ad2b57cb477b753293c25a01fc24c7f84ee523c2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-05 20:48:28 +0200

    CI: Make ctest show errors from failed tests

 build-aux/ci_build.bash | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit c405264c031aceaf68dfd1546d6337afcebd48e5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-05 20:14:49 +0200

    tuklib_mbstr_nonprint: Preserve the value of errno
    
    A typical use case is like this:
    
        printf("%s: %s\n", tuklib_mask_nonprint(filename), strerror(errno));
    
    tuklib_mask_nonprint() may call mbrtowc() and malloc() which may modify
    errno. If errno isn't preserved, the error message might be wrong if
    a compiler decides to call tuklib_mask_nonprint() before strerror().
    
    Fixes: 40e573305535960574404d2eae848b248c95ea7e

 src/common/tuklib_mbstr_nonprint.c | 17 ++++++++++++++---
 src/common/tuklib_mbstr_nonprint.h |  4 +++-
 2 files changed, 17 insertions(+), 4 deletions(-)

commit 2a9e91d796d091740489d951fa7780525e4275f1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-05 20:14:49 +0200

    xz: Use fsync() before deleting the input file, and add --no-sync
    
    xz's default behavior is to delete the input file after successful
    compression or decompression (unless writing to standard output).
    If the system crashes soon after the deletion, it is possible that
    the newly written file has not yet hit the disk while the previous
    delete operation might have. In that case neither the original file
    nor the written file is available.
    
    Call fsync() on the file. On POSIX systems, sync also the directory
    where the file was created.
    
    Add a new option --no-sync which disables fsync() usage. It can avoid
    a (possibly significant) performance penalty when processing many
    small files. It's fine to use --no-sync when one knows that the files
    are easy to recreate or restore after a system crash.
    
    Using fsync() after every flush initiated by --flush-timeout was
    considered. It wasn't implemented at least for now.
    
      - --flush-timeout is typically used when writing to stdout. If stdout
        is a file, xz cannot (portably) sync the directory of the file.
        One would need to create the output file first, sync the directory,
        and then run xz with fsync() enabled.
    
      - If xz --flush-timeout output goes to a file, it's possible to use
        a separate script to sync the file, for example, once per minute
        while telling xz to flush more frequently.
    
      - Not supporting syncing with --flush-timeout was simpler.
    
    Portability notes:
    
      - On systems that lack O_SEARCH (like Linux), "xz dir/file" will now
        fail if "dir" cannot be opened for reading. If "dir" still has
        write and search permissions (like d-wx------ in "ls -l"),
        previously xz would have been able to compress "dir/file" still.
        Now it only works if using --no-sync (or --keep or --stdout).
    
      - <libgen.h> and dirname() should be available on all POSIX systems,
        and aren't needed on non-POSIX systems.
    
      - fsync() is available on all POSIX systems. The directory syncing
        could be changed to fdatasync() although at least on ext4 it
        doesn't seem to make a performance difference in xz's usage.
        fdatasync() would need a build system check to support (old)
        special cases, for example, MINIX 3.3.0 doesn't have fdatasync()
        and Solaris 10 needs -lrt.
    
      - On native Windows, _commit() is used to replace fsync(). Directory
        syncing isn't done and shouldn't be needed. (In Cygwin, fsync() on
        directories is a no-op.)
    
      - DJGPP has fsync() for files. ;-)
    
    Using fsync() was considered somewhere around 2009 and again in 2016 but
    those times the idea was rejected. For comparison, GNU gzip 1.7 (2016)
    added the option --synchronous which enables fsync().
    
    Co-authored-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>
    Fixes: https://bugs.debian.org/814089
    Link: https://www.mail-archive.com/xz-devel@tukaani.org/msg00282.html
    Closes: https://github.com/tukaani-project/xz/pull/151

 src/xz/args.c    |  14 ++++++
 src/xz/args.h    |   2 +-
 src/xz/file_io.c | 129 +++++++++++++++++++++++++++++++++++++++++++++++++++++--
 src/xz/file_io.h |   6 +++
 src/xz/message.c |   3 ++
 src/xz/sandbox.c |   5 ++-
 src/xz/xz.1      |  24 ++++++++++-
 7 files changed, 177 insertions(+), 6 deletions(-)

commit 2e28c7145747b3287283f13c9d2becd73a7c4a1f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-27 09:15:50 +0200

    xz: Use "goto" for error handling in io_open_dest_real()

 src/xz/file_io.c | 20 +++++++++-----------
 1 file changed, 9 insertions(+), 11 deletions(-)

commit 75107217670a97b7b772833669d88c3c2f188e37
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-05 12:10:05 +0200

    liblzma: Always validate the first digit of a preset string
    
    lzma_str_to_filters() may call parse_lzma12_preset() in two ways. The
    call from str_to_filters() detects the string type from the first
    character(s) and as a side-effect it validates the first digit of
    the preset string. So this change makes no difference there.
    
    However, the call from parse_options() doesn't pre-validate the string.
    parse_lzma12_preset() will return an invalid value which is passed to
    lzma_lzma_preset() which safely rejects it. The bug still affects the
    the error message:
    
        $ xz --filters=lzma2:preset=X
        xz: Error in --filters=FILTERS option:
        xz: lzma2:preset=X
        xz:               ^
        xz: Unsupported preset
    
    After the fix:
    
        $ xz --filters=lzma2:preset=X
        xz: Error in --filters=FILTERS option:
        xz: lzma2:preset=X
        xz:              ^
        xz: Unsupported preset
    
    The ^ now correctly points to the X and not past it because the X itself
    is the problematic character.
    
    Fixes: cedeeca2ea6ada5b0411b2ae10d7a859e837f203

 src/liblzma/common/string_conversion.c | 4 ++++
 1 file changed, 4 insertions(+)

commit 52ff32433734d03befd85a5bf00fba77d6501455
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-05 11:40:34 +0200

    xz: Fix getopt_long argument type in --filters*
    
    Forgetting the argument (or not using = to separate the option from
    the argument) resulted in lzma_str_to_filters() being called with NULL
    as input string argument. The function handles it fine but xz passes
    the NULL to printf() too:
    
        $ xz --filters
        xz: Error in --filters=FILTERS option:
        xz: (null)
        xz: ^
        xz: Unexpected NULL pointer argument(s) to lzma_str_to_filters()
    
    Now it's correct:
    
        $ xz --filters
        xz: option '--filters' requires an argument
    
    The --filters-help option doesn't take any arguments.
    
    Fixes: 9ded880a0221f4d1256845fc4ab957ffd377c760
    Fixes: d6af7f347077b22403133239592e478931307759
    Fixes: a165d7df1964121eb9df715e6f836a31c865beef

 src/xz/args.c | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

commit 2655c81b5e92278b0fd51f6537c1116f8349b02a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-04 20:04:56 +0200

    xzdec: Don't leave Landlock file descriptor open for no reason
    
    This fix is similar to 48ff3f06521ca326996ab9a04d1b342098960427.
    
    Fixes: d74fb5f060b76db709b50f5fd37490394e52f975

 src/xzdec/xzdec.c | 2 ++
 1 file changed, 2 insertions(+)

commit 35df4c2bc0500e60ba9d0d163d37a6d110d6841e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-04 20:02:18 +0200

    xz: Make --single-stream imply --keep
    
    Suggested by xx on #tukaani on 2024-04-12.

 src/xz/args.c | 3 +++
 src/xz/xz.1   | 9 ++++++++-
 2 files changed, 11 insertions(+), 1 deletion(-)

commit 6f412814a8019700248229ce972530159a0d9872
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-04 19:57:07 +0200

    Update AUTHORS
    
    The contributions have been rewritten.

 AUTHORS                         | 2 +-
 src/liblzma/check/crc32_arm64.h | 1 -
 src/liblzma/check/crc32_fast.c  | 1 -
 src/liblzma/check/crc_common.h  | 1 -
 4 files changed, 1 insertion(+), 4 deletions(-)

commit 5651d153031a7ee2581cdba9bff658031826cb50
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-04 15:02:16 +0200

    xz: Avoid printf formats like %2$s
    
    It's a POSIX feature that isn't in standard C. It's not available on
    Windows. Even MinGW-w64 with __USE_MINGW_ANSI_STDIO doesn't support
    it even though it supports POSIX %'d for thousand separators.
    
    Gettext's <libintl.h> provides overrides for printf and other functions
    which do support the %2$s formats. Translations use them. But xz should
    work on Windows without <libintl.h> too.
    
    Fixes: 3e9177fd206d20d6d8acc7d203c25a9ae0549229

 src/xz/message.c | 51 ++++++++++++++++++++++++++++++++-------------------
 1 file changed, 32 insertions(+), 19 deletions(-)

commit 63b246c90e7677c617faab1d3f6fc5c643b5e7cf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-04 14:41:37 +0200

    tuklib_mbstr_wrap: Add printf format attribute
    
    It's supported by GCC 3.x already.

 src/common/tuklib_common.h     | 7 +++++++
 src/common/tuklib_mbstr_wrap.h | 1 +
 2 files changed, 8 insertions(+)

commit a7313c01d9b8db71ffb61dc1dd7c4ea928824b4b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-04 13:44:12 +0200

    xz: Translate a Windows-specific string
    
    Originally I thought that native Windows builds wouldn't be translated
    but nowadays at least MSYS2 ships such binaries.

 src/xz/file_io.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 00eb6073c088be9e7516dfc00a13ef520827b57c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-02 15:32:10 +0200

    xz: Use my_landlock.h
    
    A slightly silly thing is that xz may now query the ABI version up to
    three times. We could call my_landlock_ruleset_attr_forbid_all() only
    once and cache the result but it didn't seem worth doing.

 CMakeLists.txt   |  1 +
 src/xz/sandbox.c | 72 ++++++++++----------------------------------------------
 2 files changed, 13 insertions(+), 60 deletions(-)

commit 0fc5a625d7cc4ad51fde9367de088b9ad3bd40f6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-02 15:32:10 +0200

    xzdec: Use my_landlock.h

 CMakeLists.txt    |  1 +
 src/xzdec/xzdec.c | 34 ++++++----------------------------
 2 files changed, 7 insertions(+), 28 deletions(-)

commit 38cb8ec9fd70d25fca6b473de44cf61586238552
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-02 15:32:10 +0200

    Add my_landlock.h with helper functions to use Linux Landlock
    
    This supports up to Landlock ABI version 6. The current code in
    xz and xzdec only support up to ABI version 4.

 src/Makefile.am          |   1 +
 src/common/my_landlock.h | 141 +++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 142 insertions(+)

commit 672da29bb3a209a727ae46c0df948d7eea69f2e2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-01 18:46:50 +0200

    liblzma: Silence warnings from "clang -Wimplicit-fallthrough"

 src/liblzma/lzma/lzma_decoder.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 1a8a1ad9a1e3179ce267baa551fb17b30624b4dd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-01 15:34:51 +0200

    Build: Use -Wimplicit-fallthrough=5 when supported
    
    Now that we have the FALLTHROUGH macro, use the strictest mode with
    GCC so that comment-based fallthrough markings are no longer accepted.
    
    In GCC, -Wextra includes -Wimplicit-fallthrough=3 and
    -Wimplicit-fallthrough is the same as -Wimplicit-fallthrough=3.
    Thus, the strict mode requires specifying -Wimplicit-fallthrough=5.
    
    Clang has -Wimplicit-fallthrough which is *not* enabled by -Wextra.
    Clang doesn't have a variant that takes an argument. Thus we need
    to check for -Wimplicit-fallthrough. Do it before checking for
    -Wimplicit-fallthrough=5 so that the latter overrides the former
    when using GCC.

 CMakeLists.txt | 2 ++
 configure.ac   | 2 ++
 2 files changed, 4 insertions(+)

commit 94adc996e45cc5cad9352cc3271d3a1a2f5c4c22
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-01 15:30:50 +0200

    Replace "Fall through" comments with FALLTHROUGH

 src/liblzma/common/alone_decoder.c     |  3 +--
 src/liblzma/common/auto_decoder.c      |  5 ++---
 src/liblzma/common/block_decoder.c     |  6 ++----
 src/liblzma/common/block_encoder.c     |  6 ++----
 src/liblzma/common/common.c            |  2 +-
 src/liblzma/common/file_info.c         | 22 +++++++++-------------
 src/liblzma/common/index_decoder.c     |  9 +++------
 src/liblzma/common/index_encoder.c     |  6 ++----
 src/liblzma/common/index_hash.c        |  7 +++----
 src/liblzma/common/lzip_decoder.c      | 14 +++++---------
 src/liblzma/common/stream_decoder.c    | 16 ++++++----------
 src/liblzma/common/stream_decoder_mt.c | 25 +++++++++----------------
 src/liblzma/common/stream_encoder_mt.c | 10 ++++------
 src/liblzma/lzma/lzma2_encoder.c       |  9 +++------
 src/xz/args.c                          |  2 +-
 src/xz/list.c                          |  3 +--
 16 files changed, 54 insertions(+), 91 deletions(-)

commit f31c3a6647b5a5d056324a9c83e6b2c940ebec22
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-01 15:08:51 +0200

    sysdefs.h: Add FALLTHROUGH macro

 src/common/sysdefs.h | 9 +++++++++
 1 file changed, 9 insertions(+)

commit e34dbd6a0ae7a560a5508d51fc0bd142c5a320dc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-01 15:06:15 +0200

    xzdec: Fix language in a comment

 src/xzdec/xzdec.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 16821252c504071f5c2012e415e59cbf5fb79820
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-02 13:35:48 +0200

    Windows: Make NLS require UCRT and gettext-runtime >= 0.23.1
    
    Also remove the recently-added workaround from tuklib_gettext.h.
    Requiring a new enough gettext-runtime is cleaner. I guess it's
    mostly MSYS2 where xz is built with translation support, so once
    MSYS2 has Gettext >= 0.23.1, this requirement shouldn't be a problem
    in practice.

 CMakeLists.txt              | 29 ++++++++++++++++++++++++++
 configure.ac                | 29 ++++++++++++++++++++++++++
 src/common/tuklib_gettext.h | 51 ---------------------------------------------
 3 files changed, 58 insertions(+), 51 deletions(-)

commit aa1807ed942579f700a08ab091b796cf04e31aec
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2025-01-02 11:52:17 +0200

    windows/build-with-cmake.bat: Fix ENABLE_NLS to XZ_NLS
    
    Fixes: 29f77c7b707f2458fb047e77497354b195e05b14

 windows/build-with-cmake.bat | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ea21c76aa2406ba06ac154fe57741734c04f260f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-30 11:21:57 +0200

    Build: Use git log --pretty=medium when creating ChangeLog
    
    It's the default in git-log. Specifying it explicitly is good in case
    a user has set format.pretty to a different value.

 Makefile.am | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 08050c0788ce5bac0ffd572e9784a2749c4a13df
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-30 10:51:33 +0200

    Windows: Update MinGW-w64 + CMake instructions to recommend UCRT

 windows/INSTALL-MinGW-w64_with_CMake.txt | 38 +++++++++++++++++++-------------
 1 file changed, 23 insertions(+), 15 deletions(-)

commit 653732bd6f06d8f465bf353bf6e1c16f1405b906
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-30 10:51:26 +0200

    xz man page: Describe the source file deletion in -z and -d options
    
    The DESCRIPTION section always explained it, and the OPTIONS section
    only described the differences to the default behavior. However, new
    users in a hurry may skip reading DESCRIPTION. The default behavior
    is a bit dangerous, thus it's good to repeat in --compress and
    --decompress docs that source file is removed after successful operation.
    
    Fixes: https://github.com/tukaani-project/xz/issues/150

 src/xz/xz.1 | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

commit bb79f79b278fd4fb06a0bcd5ab3445c468f9baaf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-27 21:52:28 +0200

    Build: Set libtool -version-info so that it matches with CMake
    
    In the past, they haven't been in sync in development versions
    although they (of course) have been in stable releases.

 src/liblzma/Makefile.am | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit cf54f70e14c218faf5019ffa2fa769ed73772ee8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-28 18:28:56 +0200

    CMake/macOS: Use GNU Libtool compatible shared library versioning
    
    Because this increases the Mach-O compatibility_version, this commit
    shouldn't cause any ABI compatibility trouble for existing CMake users
    on macOS. This is assuming that they won't later downgrade to an older
    liblzma version that was built with CMake before this commit.
    
    Meson allows customising the Mach-O versioning too. So the three
    build systems can be configured to be compatible.

 CMakeLists.txt | 51 ++++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 48 insertions(+), 3 deletions(-)

commit 94e17916689d38bc09bf35e602ed6f6276034b59
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-28 14:49:45 +0200

    CMake: Edit a comment

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 6b50590725aeae8a2aed06faa3238cb9f8771c1b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-28 20:39:49 +0200

    version.sh: Omit an unwanted dot from development versions
    
    It printed 5.7.0.alpha instead of 5.7.0alpha.
    
    Fixes: e7a42cda7c827e016619e8cab15e2faf5d4181ae

 build-aux/version.sh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f7a248f56e94310a080051c4a709c08514fa48b1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-27 16:25:07 +0200

    CMake: Remove a duplicate word from a comment

 CMakeLists.txt | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 8b7c55d148f4a9b3702207164e862437ddffad33
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-27 16:23:12 +0200

    INSTALL: Document CMAKE_DLL_NAME_WITH_SOVERSION

 INSTALL | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

commit 260d5d36203955a7148ae1ab05d0931c942028d5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-26 21:27:18 +0200

    xz: Fix comments

 src/xz/file_io.c | 4 ++--
 src/xz/file_io.h | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit bf6da9a573a780cd1a7fb1728ef55d09e58dad11
Author: Dexter Castor Döpping <dexter.c.dopping@gmail.com>
Date:   2024-12-22 13:44:03 +0100

    CMake: Disable unity builds project-wide
    
    liblzma and xz can't be compiled as a unity/jumbo build because of
    redeclarations and type name reuse. The CMake documentation recommends
    setting UNITY_BUILD to false in this case.
    
    This is especially important if we're compiled as a subproject and the
    consumer wants to use CMAKE_UNITY_BUILD=ON for the rest of their code
    base.
    
    Closes: https://github.com/tukaani-project/xz/pull/158

 CMakeLists.txt | 6 ++++++
 1 file changed, 6 insertions(+)

commit f8c328eed1bf0a0168132025a52116b7735f894c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-20 08:51:18 +0200

    Windows: Workaround a UTF-8 issue in Gettext's libintl_setlocale()
    
    See the comment. In this package, locale is set at program startup and
    not changed later, so the point (2) in the comment isn't a problem.
    
    Fixes: 46ee0061629fb075d61d83839e14dd193337af59

 src/common/tuklib_gettext.h | 51 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 51 insertions(+)

commit 03533906093529701ba91081907d8977991997de
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-20 06:50:36 +0200

    Revert "Windows: Use UTF-8 locale when active code page is UTF-8"
    
    This reverts commit 0d0b574cc45045d6150d397776340c068df59e2a.

 src/common/tuklib_gettext.h | 32 ++------------------------------
 1 file changed, 2 insertions(+), 30 deletions(-)

commit 4b319e05afef4eab2fbafb6223f25d128ec99fce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-19 18:31:09 +0200

    xzdec: Use setlocale() instead of tuklib_gettext_setlocale()
    
    xzdec isn't translated and doesn't need libintl on Windows even
    when NLS is enabled, thus libintl_setlocale() cannot interfere
    with the locale settings. Thus, standard setlocale() works perfectly.
    
    In the commit 78868b6e, the explanation in the commit message is wrong.
    
    Fixes: 78868b6ed63fa4c89f73e3dfed27abfb8b0d46db

 src/xzdec/xzdec.c | 9 +++------
 1 file changed, 3 insertions(+), 6 deletions(-)

commit 34b80e282ea76ec793eaedaef58a36c3913dec78
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-19 19:36:15 +0200

    Windows: Revert the setlocale(LC_ALL, ".UTF8") documentation
    
    Only leave the FindFileFirstA() notes from 20dfca81, reverting
    the incorrect setlocale() notes. On Windows, Gettext's <libintl.h>
    overrides setlocale() with libintl_setlocale() wrapper. I hadn't
    noticed this, and thus my conclusions were wrong.
    
    Fixes: 20dfca8171dad4c64785ac61d5b68972c444877b

 src/common/w32_application.manifest.comments.txt | 21 +--------------------
 1 file changed, 1 insertion(+), 20 deletions(-)

commit 5794cda064ce980450eaa5a4e2c71bd317168ce4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-18 17:49:05 +0200

    tuklib_mbstr_wrap: Silence a warning from Clang
    
    Fixes: ca529c3f41a4a19a59e2e252e6dd9255f130c634

 src/common/tuklib_mbstr_wrap.c | 9 +++++++++
 1 file changed, 9 insertions(+)

commit 16c9796ef970ae349c54fef9a346e394d7cc4c75
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-18 14:00:09 +0200

    Update THANKS

 THANKS | 2 ++
 1 file changed, 2 insertions(+)

commit 3b5c8a1fcab385eed9cc95684223fddd7cf5a053
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-18 14:00:09 +0200

    Update TODO
    
    Fixes: 5f6dddc6c911df02ba660564e78e6de80947c947

 TODO | 3 ---
 1 file changed, 3 deletions(-)

commit 22a35e64ce3d331b668f15f858a7bb3da3acc78e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-18 14:00:09 +0200

    lzmainfo: Use tuklib_mbstr_nonprint

 CMakeLists.txt           |  3 +++
 src/lzmainfo/Makefile.am |  1 +
 src/lzmainfo/lzmainfo.c  | 16 ++++++++++------
 3 files changed, 14 insertions(+), 6 deletions(-)

commit 03111595ee713e0f94fb4f4a19a15594d5149347
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-18 14:00:09 +0200

    xzdec: Use tuklib_mbstr_nonprint

 CMakeLists.txt        |  3 +++
 src/xzdec/Makefile.am |  2 ++
 src/xzdec/xzdec.c     | 15 +++++++++++----
 3 files changed, 16 insertions(+), 4 deletions(-)

commit d22f96921fd2f94d842f3cc2e5f729cb3cca5122
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-18 14:00:09 +0200

    xz: Use tuklib_mbstr_nonprint
    
    Call tuklib_mask_nonprint() on filenames and also on a few other
    strings from the command line too.
    
    The filename printed by "xz --robot --list" (in list.c) is also masked.
    It's good to get rid of tabs and newlines which would desync the output
    but masking other chars wouldn't be strictly necessary. It might matter
    with sensible filenames if LC_CTYPE is "C" (when iswprint() might reject
    non-ASCII chars) and a script wants to read a filename from xz's output.
    Hopefully it's an unusual enough corner case to not be a real problem.

 CMakeLists.txt     |  2 ++
 src/xz/Makefile.am |  1 +
 src/xz/coder.c     | 19 ++++++++-----
 src/xz/file_io.c   | 81 ++++++++++++++++++++++++++++++++++--------------------
 src/xz/list.c      | 32 +++++++++++++--------
 src/xz/main.c      | 10 +++++--
 src/xz/message.c   |  8 ++++--
 src/xz/options.c   | 10 ++++---
 src/xz/private.h   |  1 +
 src/xz/suffix.c    | 12 ++++----
 10 files changed, 113 insertions(+), 63 deletions(-)

commit 40e573305535960574404d2eae848b248c95ea7e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-18 14:00:09 +0200

    Add tuklib_mbstr_nonprint to mask non-printable characters
    
    Malicious filenames or other untrusted strings may affect the state of
    the terminal when such strings are printed as part of (error) messages.
    Add functions that mask such characters.
    
    It's not enough to handle only single-byte control characters.
    In multibyte locales, some control characters are multibyte too, for
    example, terminals interpret C1 control characters (U+0080 to U+009F)
    that are two bytes as UTF-8.
    
    Instead of checking for control characters with iswcntrl(), this
    uses iswprint() to detect printable characters. This is much stricter.
    On Windows it's actually too strict as it rejects some characters that
    definitely are printable.
    
    Gnulib's quotearg would do a lot more but I hope this simpler method
    is good enough here.
    
    Thanks to Ryan Colyer for the discussion about the problems of
    the earlier single-byte-only method.
    
    Thanks to Christian Weisgerber for reporting a bug in an earlier
    version of this code.
    
    Thanks to Jeroen Roovers for a typo fix.
    
    Closes: https://github.com/tukaani-project/xz/pull/118

 src/Makefile.am                    |   2 +
 src/common/tuklib_mbstr_nonprint.c | 151 +++++++++++++++++++++++++++++++++++++
 src/common/tuklib_mbstr_nonprint.h |  69 +++++++++++++++++
 3 files changed, 222 insertions(+)

commit 36190c8c4bb13d1eab84a30f3650a5ec5ff0e402
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-18 11:33:09 +0200

    Translations: Add preliminary Georgian translation
    
    Most of the auto-wrapped strings are translated already. A few
    strings have changed since this was created though. This file
    isn't in the Translation Project *yet* because these strings
    are still very new.
    
    Closes: https://github.com/tukaani-project/xz/pull/145

 po/LINGUAS |    1 +
 po/ka.po   | 1186 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 1187 insertions(+)

commit 4a0c4f92b820b84ace625a95305a9d56cb662f4e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-10-30 20:50:20 +0200

    xz: Make one string simpler for translators
    
    Leading spaces in the string can get miscounted by translators.

 src/xz/list.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 3fcf547e926f6c0414b23459f7b43164f7e8c378
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-17 10:26:10 +0200

    lzmainfo: Sync the translatable strings with xz

 src/lzmainfo/lzmainfo.c | 20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

commit 3e9177fd206d20d6d8acc7d203c25a9ae0549229
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-17 10:26:10 +0200

    xz: Use automatic word wrapping for help texts
    
    --long-help is now one line longer because --lzma1 is now on its
    own line.

 CMakeLists.txt     |   2 +
 src/xz/Makefile.am |   3 +-
 src/xz/message.c   | 482 ++++++++++++++++++++++++++++++++++-------------------
 3 files changed, 313 insertions(+), 174 deletions(-)

commit a0eecc9eb23ac583ccf442de3f5c106d4b09482d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-16 18:46:45 +0200

    po/Makevars: Add --keyword=W_:... to XGETTEXT_OPTIONS
    
    The text was copied from tuklib_gettext.h.
    
    Also rearrange the --keyword options to be last on the line.

 po/Makevars | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ca529c3f41a4a19a59e2e252e6dd9255f130c634
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-16 18:43:52 +0200

    Add tuklib_mbstr_wrap for automatic word wrapping
    
    Automatic word wrapping makes translators' work easier and reduces
    errors like misaligned columns or overlong lines. Right-to-left
    languages and languages that don't use spaces between words will
    still need extra effort. (xz hasn't been translated to any RTL
    language so far.)

 cmake/tuklib_mbstr.cmake       |   4 +
 m4/tuklib_mbstr.m4             |   2 +-
 src/Makefile.am                |   2 +
 src/common/tuklib_gettext.h    |  11 ++
 src/common/tuklib_mbstr_wrap.c | 285 +++++++++++++++++++++++++++++++++++++++++
 src/common/tuklib_mbstr_wrap.h | 203 +++++++++++++++++++++++++++++
 6 files changed, 506 insertions(+), 1 deletion(-)

commit 314b83cebad0244a0015a8abc6d8d086b581c215
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-17 17:57:18 +0200

    Build: Sort filenames to ASCII order in Makefile.am

 src/Makefile.am | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit df399c52554dfdf60259ca2cce97adbcfff39dc0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-10-21 18:51:24 +0300

    tuklib_mbstr_width: Add tuklib_mbstr_width_mem()
    
    It's a new function split from tuklib_mbstr_width().
    It's useful with partial strings that aren't terminated with \0.

 src/common/tuklib_mbstr.h       | 17 +++++++++++++++++
 src/common/tuklib_mbstr_width.c |  8 ++++++++
 2 files changed, 25 insertions(+)

commit 51081efae4c52c226e96da95313916eba99f885f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-16 20:08:27 +0200

    tuklib_mbstr_width: Update a comment about shift states

 src/common/tuklib_mbstr_width.c | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

commit 7ff1b0ac53866877bdfd79acf5fee0269058c58b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-10-21 18:47:56 +0300

    tuklib_mbstr_width: Don't mention shift states in the API docs
    
    It is assumed that this code won't be used with charsets that use
    locking shift states.

 src/common/tuklib_mbstr.h | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

commit 3c16105936320e4095dbe84fa9a33a4a6d46a597
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-10-21 18:41:41 +0300

    tuklib_mbstr_width: Use stricter return value checking
    
    This should make no difference in practice (at least if mbrtowc()
    isn't broken).

 src/common/tuklib_mbstr_width.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b797c44c42ea54fe1c52722a2fca0c9618575598
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-16 20:06:07 +0200

    tuklib_mbstr_width: Change the behavior when wcwidth() is not available
    
    If wcwidth() isn't available (Windows), previously it was assumed
    that one byte == one column in the terminal. Now it is assumed that
    one multibyte character == one column. This works better with UTF-8.
    Languages that only use single-width characters without any combining
    characters should work correctly with this.
    
    In xz, none of po/*.po contain combining characters and only ko.po,
    zh_CN.po, and zh_TW.po contain fullwidth characters. Thus, "only"
    those three translations in xz are broken on Windows with the
    UTF-8 code page. Broken means that column headings in xz -lvv and
    (only in the master branch) strings in --long-help are misaligned,
    so it's not a huge problem. I don't know if those three languages
    displayed perfectly before the UTF-8 change because I hadn't tested
    translations with native Windows builds before.
    
    Fixes: 46ee0061629fb075d61d83839e14dd193337af59

 src/common/tuklib_mbstr_width.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

commit 78868b6ed63fa4c89f73e3dfed27abfb8b0d46db
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-18 14:23:13 +0200

    xzdec: Use setlocale() via tuklib_gettext_setlocale()
    
    xzdec isn't translated and didn't have locale-specific behavior
    in the past. On Windows with UTF-8 in the application manifest,
    setting the locale makes a difference though:
    
      - Without any setlocale() call, non-ASCII filenames don't display
        properly in Command Prompt unless one first uses "chcp 65001"
        to set the console code page to UTF-8.
    
      - setlocale(LC_ALL, "") is enough to make non-ASCII filenames
        print correctly in Command Prompt without using "chcp 65001",
        assuming that the non-UTF-8 code page (like 850) supports
        those non-ASCII characters.
    
      - setlocale(LC_ALL, ".UTF8") is even better because then mbrtowc() and
        such functions use an UTF-8 locale instead of a legacy code page.
        The tuklib_gettext_setlocale() macro takes care of this (without
        enabling any translations).
    
    Fixes: 46ee0061629fb075d61d83839e14dd193337af59

 src/xzdec/xzdec.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

commit 0d0b574cc45045d6150d397776340c068df59e2a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-17 14:59:37 +0200

    Windows: Use UTF-8 locale when active code page is UTF-8
    
    XZ Utils 5.6.3 set the active code page to UTF-8 to fix CVE-2024-47611.
    This wasn't paired with UCRT-specific setlocale(LC_ALL, ".UTF8"), thus
    non-ASCII characters from translations became mojibake.
    
    Fixes: 46ee0061629fb075d61d83839e14dd193337af59

 src/common/tuklib_gettext.h | 32 ++++++++++++++++++++++++++++++--
 1 file changed, 30 insertions(+), 2 deletions(-)

commit 20dfca8171dad4c64785ac61d5b68972c444877b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-17 15:01:29 +0200

    Windows: Document the need for setlocale(LC_ALL, ".UTF8")
    
    Also warn about unpaired surrogates and (somewhat UTF-8-specific)
    MAX_PATH issue in FindFirstFileA().
    
    Fixes: 46ee0061629fb075d61d83839e14dd193337af59

 src/common/w32_application.manifest.comments.txt | 28 +++++++++++++++++++++++-
 1 file changed, 27 insertions(+), 1 deletion(-)

commit 4e936f234056e5831013ed922145b666b04bb1e3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-18 14:12:22 +0200

    xzdec: Call tuklib_progname_init() early enough
    
    If the early pledge() call on OpenBSD fails, it calls my_errorf()
    which requires the "progname" variable.
    
    Fixes: d74fb5f060b76db709b50f5fd37490394e52f975

 src/xzdec/xzdec.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 61feaf681bd793dc5c919732b44bca7dcf2ed1b8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-15 19:08:32 +0200

    CMake: Bump maximum policy version to 3.31
    
    With CMake 3.31, there were a few warnings from
    CMP0177 "install() DESTINATION paths are normalized".
    These occurred because the install(FILES) command in
    my_install_man_lang() is called with a DESTINATION path
    that contains two consecutive slashes, for example,
    "share/man//man1". Such a path is for the English man pages.
    With translated man pages, the language code goes between
    the slashes. The warning was probably triggered because the
    extra slash gets removed by the normalization.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b0bb84dd7bbdcc85243386a0051c7b2cb5fc6a18
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-15 18:35:27 +0200

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit bee0c044d30a6ad3b3d94901c27e7519f6f46e27
Author: Dexter Castor Döpping <dexter.c.dopping@gmail.com>
Date:   2024-12-08 18:24:29 +0100

    liblzma: Fix incorrect macro name in a comment
    
    Fixes: 33b8a24b6646a9dbfd8358405aec466b13078559
    Closes: https://github.com/tukaani-project/xz/pull/155

 src/liblzma/api/lzma/lzma12.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 2cfa1ad0a9eb62b1847cf13f9aee290158978a3a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-17 10:36:43 +0200

    license-check.sh: Add an exception for doc/SHA256SUMS
    
    Fixes: 36b531022f24a2ab57a2dfb9e5052f1c176e9d9a

 build-aux/license-check.sh | 1 +
 1 file changed, 1 insertion(+)

commit 36b531022f24a2ab57a2dfb9e5052f1c176e9d9a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-12-01 21:38:17 +0200

    doc/SHA256SUMS: Add the list of SHA-256 hashes of release files
    
    The release files are signed but verifying the signatures cannot
    catch certain types of attacks:
    
    1. A malicious maintainer could make more than one variant of
       a package. One could be for general distribution. Another
       with malicious content could be targeted to specific users,
       for example, distributing the malicious version on a mirror
       controlled by the attacker.
    
    2. If the signing key of an honest maintainer was compromised
       without being detected, a similar situation as described
       above could occur.
    
    SHA256SUMS could be put on the project website but having it in
    the Git repository makes it obvious that old lines aren't modified
    when the file is updated.
    
    Hashes of uncompressed files are included too. This way tarballs
    can be recompressed and the hashes can still be verified.

 .gitattributes |   1 +
 doc/SHA256SUMS | 218 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 219 insertions(+)

commit fe9e66993fdbcc2981c7361b9b034a451eb0fc42
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-11-30 12:05:59 +0200

    Docs: Remove .github/SECURITY.md
    
    One of the reasons to have this file in the xz repository was to
    show vulnerability reporting info in the Security section on GitHub.
    On 2024-11-25, I added SECURITY.md to the tukaani-project organization
    on GitHub:
    
        https://github.com/tukaani-project/.github/blob/main/SECURITY.md
    
    GitHub shows that file in all projects in the organization unless
    overridden by a project-specific SECURITY.md. Thus, removing
    the file from the xz repo makes GitHub show the organization-wide
    text instead.
    
    Maintaining a single copy for the whole GitHub organization makes
    things simpler. It's also nicer to have fewer GitHub-specific files
    in the xz repo. Information how to report bugs (including security
    issues) is available in README and on the home page too.
    
    The OpenSSF Scorecard tool didn't find .github/SECURITY.md from the
    xz repository. There was a suggestion to move the file to the top-level
    directory where Scorecard should find it. However, Scorecard does find
    the organization-wide SECURITY.md. Thus, the file isn't needed in the
    xz repository to score points in the Scorecard game:
    
        https://scorecard.dev/viewer/?uri=github.com/tukaani-project/xz
    
    Closes: https://github.com/tukaani-project/xz/issues/148
    Closes: https://github.com/tukaani-project/xz/pull/149

 .github/SECURITY.md | 14 --------------
 1 file changed, 14 deletions(-)

commit b36177273602ebc83e9cc58517f63a7b6af33f70
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-11-30 10:27:14 +0200

    Translations: Update the Chinese (traditional) translation

 po/zh_TW.po | 201 +++++++++++++++++++++++++-----------------------------------
 1 file changed, 84 insertions(+), 117 deletions(-)

commit c15115f7ede492f20c91b08ba485f9426f60233f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-10-30 19:54:34 +0200

    liblzma: Optimize the loop conditions in BCJ filters
    
    Compilers cannot optimize the addition "i + 4" away since theoretically
    it could overflow.

 src/liblzma/simple/arm.c      | 4 +++-
 src/liblzma/simple/arm64.c    | 4 +++-
 src/liblzma/simple/armthumb.c | 7 ++++++-
 src/liblzma/simple/ia64.c     | 4 +++-
 src/liblzma/simple/powerpc.c  | 4 +++-
 src/liblzma/simple/sparc.c    | 5 +++--
 6 files changed, 21 insertions(+), 7 deletions(-)

commit 9f69e71e78621fd056f5eaaad7cdcd9279310fb5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-11-25 16:26:54 +0200

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 48ff3f06521ca326996ab9a04d1b342098960427
Author: Mark Wielaard <mark@klomp.org>
Date:   2024-11-25 12:28:44 +0200

    xz: Landlock: Fix a file descriptor leak

 src/xz/sandbox.c | 1 +
 1 file changed, 1 insertion(+)

commit dbca3d078ec581600600abebbb18769d3d713914
Author: Sam James <sam@gentoo.org>
Date:   2024-10-02 03:04:03 +0100

    CI: update FreeBSD, NetBSD, OpenBSD, Solaris actions
    
    Checked the changes and they're all innocuous. This should hopefully
    fix the "externally managed" pip error in these jobs that started
    recently.

 .github/workflows/freebsd.yml | 2 +-
 .github/workflows/netbsd.yml  | 2 +-
 .github/workflows/openbsd.yml | 2 +-
 .github/workflows/solaris.yml | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

commit a94b85bea3f04d8c1f4e2e6f648a9a15bc6ce58f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-10-01 12:17:39 +0300

    Add NEWS for 5.6.3

 NEWS | 125 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 125 insertions(+)

commit be4bf94446b6286a5dffdde85fc1d21448f4edff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-10-01 14:49:41 +0300

    cmake/tuklib_large_file_support.cmake: Add a missing include
    
    v5.2 didn't build with CMake. Other branches had
    include(CMakePushCheckState) in top-level CMakeLists.txt
    which made the build work.
    
    Fixes: 597f49b61475438a43a417236989b2acc968a686

 cmake/tuklib_large_file_support.cmake | 1 +
 1 file changed, 1 insertion(+)

commit 1ebbe915d4e0d877154261b5f8103719a6722975
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-10-01 12:10:23 +0300

    Update THANKS

 THANKS | 2 ++
 1 file changed, 2 insertions(+)

commit 74702ee00ecfd080d8ab11118cd25dbe6c437ec0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-10-01 12:10:23 +0300

    Tests/Windows: Add the application manifest to the test programs
    
    This ensures that the test programs get executed the same way as
    the binaries that are installed.

 CMakeLists.txt        | 14 ++++++++++----
 tests/Makefile.am     | 10 ++++++++++
 tests/tests.cmake     | 33 ++++++++++++++++++++++++++++++++-
 tests/tests_w32res.rc | 18 ++++++++++++++++++
 4 files changed, 70 insertions(+), 5 deletions(-)

commit 7ddf2273e0e4654582ee65db19d44431bfdb5791
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-10-01 12:10:23 +0300

    license-check.sh: Add an exception for w32_application.manifest
    
    The file gets embedded as is into executables, thus it cannot
    hold a license identifier.

 build-aux/license-check.sh | 1 +
 1 file changed, 1 insertion(+)

commit 46ee0061629fb075d61d83839e14dd193337af59
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-10-01 12:10:23 +0300

    Windows: Embed an application manifest in the EXE files
    
    IMPORTANT: This includes a security fix to command line tool
               argument handling.
    
    Some toolchains embed an application manifest by default to declare
    UAC-compliance. Some also declare compatibility with Vista/8/8.1/10/11
    to let the app access features newer than those of Vista.
    
    We want all the above but also two more things:
    
      - Declare that the app is long path aware to support paths longer
        than 259 characters (this may also require a registry change).
    
      - Force the code page to UTF-8. This allows the command line tools
        to access files whose names contain characters that don't exist
        in the current legacy code page (except unpaired surrogates).
        The UTF-8 code page also fixes security issues in command line
        argument handling which can be exploited with malicious filenames.
        See the new file w32_application.manifest.comments.txt.
    
    Thanks to Orange Tsai and splitline from DEVCORE Research Team
    for discovering this issue.
    
    Thanks to Vijay Sarvepalli for reporting the issue to me.
    
    Thanks to Kelvin Lee for testing with MSVC and helping with
    the required build system fixes.

 CMakeLists.txt                                   |  18 +++
 src/Makefile.am                                  |   4 +-
 src/common/common_w32res.rc                      |   5 +
 src/common/w32_application.manifest              |  28 ++++
 src/common/w32_application.manifest.comments.txt | 178 +++++++++++++++++++++++
 5 files changed, 232 insertions(+), 1 deletion(-)

commit dad153091552b52a41b95ec4981c6951f1cae487
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-09-29 14:46:52 +0300

    Windows: Set DLL name accurately in StringFileInfo on Cygwin and MSYS2
    
    Now the information in the "Details" tab in the file properties
    dialog matches the naming convention of Cygwin and MSYS2. This
    is only a cosmetic change.

 src/liblzma/liblzma_w32res.rc | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

commit 8940ecb96fe9f0f2a9cfb8b66fe9ed31ffbea904
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-09-25 15:47:55 +0300

    common_w32res.rc: White space edits
    
    LANGUAGE and VS_VERSION_INFO begin new statements so put an empty line
    between them.

 src/common/common_w32res.rc | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

commit c3b9dad07d3fd9319f88386b7095019bcea45ce1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-09-28 20:09:50 +0300

    CMake: Add the resource files to the Cygwin and MSYS2 builds
    
    Autotools-based build has always done this so this is for consistency.
    
    However, the CMake build won't create the DEF file when building
    for Cygwin or MSYS2 because in that context it should be useless.
    (If Cygwin or MSYS2 is used to host building of normal Windows
    binaries then the DEF file is still created.)

 CMakeLists.txt | 16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

commit da4f275bd1c18b897e5c2dd0043546de3accce0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-09-28 15:19:14 +0300

    CMake: Fix Windows resource file dependencies
    
    If common_w32res.rc is modified, the resource files need to be rebuilt.
    In contrast, the liblzma*.map files truly are link dependencies.

 CMakeLists.txt | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

commit 1c673c0aac7f7dee8dda2c1140351c8417a71e47
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-09-29 01:20:03 +0300

    CMake: Checking for CYGWIN covers MSYS2 too
    
    On MSYS2, both CYGWIN and MSYS are set.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 6aaa0173b839e28429d43a8b62d257ad2f3b4521
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-09-28 09:37:30 +0300

    Translations: Add the SPDX license identifier to pt_BR.po

 po/pt_BR.po | 2 ++
 1 file changed, 2 insertions(+)

commit dc7b9f24b737e4e55bcbbdde6754883f991c2cfb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-09-25 16:41:37 +0300

    Windows/CMake: Use the correct resource file for lzmadec.exe
    
    CMakeLists.txt was using xzdec_w32res.rc for both xzdec and lzmadec.
    
    Fixes: 998d0b29536094a89cf385a3b894e157db1ccefe

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b834ae5f80911a3819d6cdb484f61b257174c544
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-09-25 21:29:59 +0300

    Translations: Update the Brazilian Portuguese translation

 po/pt_BR.po | 144 ++++++++++++++++++++++--------------------------------------
 1 file changed, 53 insertions(+), 91 deletions(-)

commit eceb023d4c129fd63ee881a2d8696eaf52ad1532
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-09-17 01:21:15 +0300

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 76cfd0a9bb33ae8e534b1f73f6359dc825589f2f
Author: Tobias Stoeckmann <tobias@stoeckmann.org>
Date:   2024-09-16 23:19:46 +0200

    lzmainfo: Avoid integer overflow
    
    The MB output can overflow with huge numbers. Most likely these are
    invalid .lzma files anyway, but let's avoid garbage output.
    
    lzmadec was adapted from LZMA Utils. The original code with this bug
    was written in 2005, over 19 years ago.
    
    Co-authored-by: Lasse Collin <lasse.collin@tukaani.org>
    Closes: https://github.com/tukaani-project/xz/pull/144

 src/lzmainfo/lzmainfo.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit 78355aebb7fb654302e5e33692ba109909dacaff
Author: Tobias Stoeckmann <tobias@stoeckmann.org>
Date:   2024-09-16 22:04:40 +0200

    xzdec: Remove unused short option -M
    
    "xzdec -M123" exited with exit status 1 without printing
    any messages. The "M:" entry should have been removed when
    the memory usage limiter support was removed from xzdec.
    
    Fixes: 792331bdee706aa852a78b171040ebf814c6f3ae
    Closes: https://github.com/tukaani-project/xz/pull/143
    [ Lasse: Commit message edits ]

 src/xzdec/xzdec.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e5758db7bd75587a2499e0771907521a4aa86908
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-09-10 13:54:47 +0300

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 80ffa38f56657257ed4d90d76f6bd2f2bcb8163c
Author: Firas Khalil Khana <firasuke@gmail.com>
Date:   2024-09-10 12:30:32 +0300

    Build: Fix a typo in autogen.sh
    
    Fixes: e9be74f5b129fe8a5388d588e68b1b7f5168a310
    Closes: https://github.com/tukaani-project/xz/pull/141

 autogen.sh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 68c54e45d042add64a4cb44bfc87ca74d29b87e2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-09-02 20:08:40 +0300

    Translations: Update Chinese (simplified) translation
    
    Differences to the zh_CN.po file from the Translation Project:
    
      - Two uses of \v were fixed.
    
      - Missing "OPTS" translation in --riscv[=OPTS] was copied from
        previous lines.
    
      - "make update-po" was run to remove line numbers from comments.

 po/zh_CN.po | 102 ++++++++++++++++++++++++------------------------------------
 1 file changed, 40 insertions(+), 62 deletions(-)

commit 2230692aa1bcebb586100183831e3daf1714d60a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-09-02 19:40:50 +0300

    Translations: Update the Catalan translation
    
    Differences to the ca.po file from the Translation Project:
    
      - An overlong line translating --filters-help was wrapped.
    
      - "make update-po" was used to remove line numbers from the comments
        to match the changes in fccebe2b4fd513488fc920e4dac32562ed3c7637
        and 093490b58271e9424ce38a7b1b38bcf61b9c86c6. xz.pot in the TP
        is older than these commits.

 po/ca.po | 171 ++++++++++++++++++++++++++-------------------------------------
 1 file changed, 69 insertions(+), 102 deletions(-)

commit 3e7723ce26f74c71919984a6180504b4548cbb7e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-08-22 14:06:16 +0300

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit d3e0e679b2b8b428598bb8ba56a17715190814db
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-08-22 14:06:16 +0300

    CMake: Don't install lzmadec.1 symlinks if XZ_TOOL_LZMADEC=OFF
    
    Thanks-to: 榆柳松 (ZhengSen Wang) <wzhengsen@gmail.com>
    Fixes: fb50c6ba1d4c9405e5b12b5988b01a3002638c5d
    Closes: https://github.com/tukaani-project/xz/pull/134

 CMakeLists.txt | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

commit acdf21033abe347d9a279e9fe757f90ed16c1dbb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-08-22 14:06:16 +0300

    CMake: Fix the build when XZ_TOOL_LZMADEC=OFF
    
    Co-developed-by: 榆柳松 (ZhengSen Wang) <wzhengsen@gmail.com>
    Fixes: fb50c6ba1d4c9405e5b12b5988b01a3002638c5d
    Fixes: https://github.com/tukaani-project/xz/pull/134

 CMakeLists.txt | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 5e375987509fab484b7bef0b90be92f241c58c91
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-08-22 11:01:07 +0300

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 6cd7c8607843c337edfe2c472aa316602a393754
Author: Yifeng Li <tomli@tomli.me>
Date:   2024-08-22 02:18:49 +0000

    liblzma: Fix x86-64 movzw compatibility in range_decoder.h
    
    Support for instruction "movzw" without suffix in "GNU as" was
    added in commit [1] and stabilized in binutils 2.27, released
    in August 2016. Earlier systems don't accept this instruction
    without a suffix, making range_decoder.h's inline assembly
    unable to build on old systems such as Ubuntu 16.04, creating
    error messages like:
    
        lzma_decoder.c: Assembler messages:
        lzma_decoder.c:371: Error: no such instruction: `movzw 2(%r11),%esi'
        lzma_decoder.c:373: Error: no such instruction: `movzw 4(%r11),%edi'
        lzma_decoder.c:388: Error: no such instruction: `movzw 6(%r11),%edx'
        lzma_decoder.c:398: Error: no such instruction: `movzw (%r11,%r14,4),%esi'
    
    Change "movzw" to "movzwl" for compatibility.
    
    [1] https://sourceware.org/git/?p=binutils-gdb.git;a=commit;h=c07315e0c610e0e3317b4c02266f81793df253d2
    
    Suggested-by: Lasse Collin <lasse.collin@tukaani.org>
    Tested-by: Yifeng Li <tomli@tomli.me>
    Signed-off-by: Yifeng Li <tomli@tomli.me>
    Fixes: 3182a330c1512cc1f5c87b5c5a272578e60a5158
    Fixes: https://github.com/tukaani-project/xz/issues/121
    Closes: https://github.com/tukaani-project/xz/pull/136

 src/liblzma/rangecoder/range_decoder.h | 24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

commit bf901dee5d4c46609645e50311c0cb2dfdcf9738
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-19 20:02:43 +0300

    Build: Comment that elf_aux_info(3) will be available on OpenBSD >= 7.6

 CMakeLists.txt |  2 +-
 configure.ac   | 17 +++++++++++------
 2 files changed, 12 insertions(+), 7 deletions(-)

commit f7103c2c2a8fa51d1f308ba7387beeff20a0d4dd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-19 19:42:26 +0300

    Revert "liblzma: Add ARM64 CRC32 instruction support detection on OpenBSD"
    
    This reverts commit dc03f6290f5b9bd3d50c7e12e58dee870889d599.
    
    OpenBSD 7.6 will support elf_aux_info(3), and the detection code used
    on FreeBSD will work on OpenBSD 7.6 too. Keep things simpler and drop
    the OpenBSD-specific sysctl() method.
    
    Thanks to Christian Weisgerber.

 CMakeLists.txt                  |  6 ------
 configure.ac                    |  9 ---------
 src/liblzma/check/crc32_arm64.h | 15 ---------------
 src/liblzma/check/crc_common.h  |  1 -
 4 files changed, 31 deletions(-)

commit 7c292dd0bf23cefcdf4b1509f3666322e08a7ede
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-13 22:10:37 +0300

    liblzma: Tweak a comment

 src/liblzma/simple/arm64.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 6408edac5529d6ec0abf52794074f229c8362303
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-11 22:17:56 +0300

    CMake: Bump maximum policy version to 3.30

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 9231c39ffb518196d6664a86e5325e744621a21b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-06 15:13:19 +0300

    CMake: Require CMake 3.20 or later
    
    This allows a few cleanups.

 CMakeLists.txt | 78 ++++++++++++++++++++--------------------------------------
 1 file changed, 27 insertions(+), 51 deletions(-)

commit 028185dd4889e3d6235ff13560160ebca6985021
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-09 14:27:51 +0300

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit baecfa142644eb5f5c6dd6f8e2f531c362fa3747
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-06 14:04:48 +0300

    xz: Remove the TODO comment about --recursive
    
    It won't be implemented. find + xargs is more flexible, for example,
    it allows compressing small files in parallel. An example for that
    has been included in the xz man page since 2010.

 src/xz/args.c | 1 -
 1 file changed, 1 deletion(-)

commit f691d58fae82bd815c5f86ffad10fe9b6b59dad8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-06 14:04:16 +0300

    Document --disable-loongarch-crc32 in INSTALL

 INSTALL | 8 ++++++++
 1 file changed, 8 insertions(+)

commit b3e53122f42796aaebd767bab920cf7bedf69966
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-03 20:45:48 +0300

    CMake: Link xz against Threads::Threads if using pthreads
    
    The liblzma target was recently changed to link against Threads::Threads
    with the PRIVATE keyword. I had forgotten that xz itself depends on
    pthreads too due to pthread_sigmask(). Thus, the build broke when
    building shared liblzma and pthread_sigmask() wasn't in libc.
    
    Thanks to Peter Seiderer for the bug report.
    
    Fixes: ac05f1b0d7cda1e7ae79775a8dfecc54601d7f1c
    Fixes: https://github.com/tukaani-project/xz/issues/129#issuecomment-2204522994

 CMakeLists.txt | 13 +++++++++++++
 1 file changed, 13 insertions(+)

commit 5742ec1fc7f2cf1c82cfe3477bb90594a4658374
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-02 22:49:33 +0300

    Update THANKS

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 2d13d10357ecad243d7e4ff1de0e6b437c38a47a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-02 20:23:35 +0300

    CMake: Improve NLS error messages

 CMakeLists.txt | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

commit 628d8d2c4fdf9e6a91c7bba7a743f400a94c2909
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-02 20:19:47 +0300

    CMake: Update the comment at the top of CMakeLists.txt
    
    While po/*.gmo files won't be used from the release tarball,
    the generated translated man pages will be used still. Those
    are text files and po4a has slightly more dependencies than
    gettext tools so installing po4a might be a bit more challenging
    in some situations.

 CMakeLists.txt | 17 +++++++----------
 1 file changed, 7 insertions(+), 10 deletions(-)

commit b4b23c94fd4429abc663ced28d5cdc9cf7eb7507
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-02 20:12:40 +0300

    CMake: Drop support for pre-generated po/*.gmo files
    
    When a release tarball is created using Autotools, the tarball includes
    po/*.gmo files which are binary files generated from po/*.po. Other
    tarball creation methods don't and won't create the .gmo files.
    
    It feels clearer if CMake will never install pre-generated binary files
    from the source package. If people are able to install CMake, they
    likely are able to install gettext tools as well (assuming they want
    translations).

 CMakeLists.txt | 66 +++++++++++++++++++---------------------------------------
 1 file changed, 21 insertions(+), 45 deletions(-)

commit fb99f8e8c50171b898cb79fe1dc703d5f91e4f0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-02 19:14:50 +0300

    CMake: Make XZ_NLS handling more robust
    
    If a user set XZ_NLS=ON but find_package(Intl) failed or CMake version
    wasn't at least 3.20, the configuration would fail in a cryptic way.
    
    If XZ_NLS is enabled, require that CMake is new enough and that either
    gettext tools or pre-generated .gmo files are available. Otherwise fail
    the configuration. Previously missing gettext tools and .gmo files would
    only result in a warning.
    
    Missing man page translations are still only a warning.
    
    Thanks to Peter Seiderer for the bug report.
    
    Fixes: https://github.com/tukaani-project/xz/issues/129
    Closes: https://github.com/tukaani-project/xz/pull/130

 CMakeLists.txt | 82 ++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 46 insertions(+), 36 deletions(-)

commit ec6157570ea8a8e38158894e530d35416ff6a0f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-02 19:39:05 +0300

    CI: Add gettext as a dependency to CMake builds

 .github/workflows/ci.yml | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 24f0f7e399de03bb2ff675d97b723d14f17ed6ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-02 18:43:56 +0300

    CMake: Fix ENABLE_NLS comment too
    
    Fixes: 29f77c7b707f2458fb047e77497354b195e05b14

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a0df0676130bc565af0ec911e68a1d0fbc3ed0fb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-02 18:02:50 +0300

    CMake: The compile definition is ENABLE_NLS, not XZ_NLS
    
    The CMake variables were renamed and accidentally also
    the compile definition was renamed. As a result, translation
    support wasn't actually enabled in the executables.
    
    Fixes: 29f77c7b707f2458fb047e77497354b195e05b14

 CMakeLists.txt | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 45d08abc33ccc52d2f050dcec458badc2ce59d0b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-07-01 17:33:20 +0300

    Update AUTHORS and THANKS

 AUTHORS | 2 +-
 THANKS  | 1 +
 2 files changed, 2 insertions(+), 1 deletion(-)

commit 7baf6835cfbf9c85ba37f9ffb7d4f87fb86a474e
Author: Xi Ruoyao <xry111@xry111.site>
Date:   2024-06-28 13:36:43 +0300

    liblzma: Speed up CRC32 calculation on 64-bit LoongArch
    
    The crc.w.{b/h/w/d}.w instructions in LoongArch can calculate the CRC32
    result for 1/2/4/8 bytes in a single operation. Using these is much
    faster compared to the generic method.
    
    Optimized CRC32 is enabled unconditionally on 64-bit LoongArch because
    the LoongArch specification says that CRC32 instructions shall be
    implemented for 64-bit processors. Optimized CRC32 isn't enabled for
    32-bit LoongArch processors because not enough information is available
    about them.
    
    Co-authored-by: Lasse Collin <lasse.collin@tukaani.org>
    
    Closes: https://github.com/tukaani-project/xz/pull/86

 CMakeLists.txt                      | 25 ++++++++++++++
 configure.ac                        | 40 +++++++++++++++++++++++
 src/liblzma/check/Makefile.inc      |  3 +-
 src/liblzma/check/crc32_fast.c      |  2 ++
 src/liblzma/check/crc32_loongarch.h | 65 +++++++++++++++++++++++++++++++++++++
 src/liblzma/check/crc_common.h      | 15 +++++++++
 6 files changed, 149 insertions(+), 1 deletion(-)

commit 0ed893668554fb0758003289f8a6af9bd08b89d1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-28 14:20:49 +0300

    liblzma: ARM64 CRC32: Align the buffer faster
    
    Instead of doing it byte by byte, use the 1/2/4-byte CRC32 instructions.

 src/liblzma/check/crc32_arm64.h | 54 ++++++++++++++++++++++++++++++-----------
 1 file changed, 40 insertions(+), 14 deletions(-)

commit 7e99856f66c07852c4e0de7aa01951e9147d86b0
Author: Sam James <sam@gentoo.org>
Date:   2024-06-28 14:18:35 +0300

    CI: Speed up Valgrind job by using --trace-children-skip-by-arg=...
    
    This addresses the issue I mentioned in
    6c095a98fbec70b790253a663173ecdb669108c4 and speeds up the Valgrind
    job a bit, because non-xz tools aren't run unnecessarily with
    Valgrind by the script tests.

 .github/workflows/ci.yml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 2402e8a1ae92676fa0d4cb1b761d7f62f005c098
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-25 16:00:22 +0300

    Build: Prepend, not append, PTHREAD_CFLAGS to LIBS
    
    It shouldn't make any difference because LIBS should be empty
    at that point in configure. But prepending is the correct way
    because in general the libraries being added might require other
    libraries that come later on the command line.

 configure.ac | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 7bb46f2b7b3989c1b589a247a251470f65e91cda
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-25 14:24:29 +0300

    Build: Use AC_LINK_IFELSE to handle implicit function declarations
    
    It's more robust in case the compiler allows pre-C99 implicit function
    declarations. If an x86 intrinsic is missing and gets treated as
    implicit function, the linking step will very probably fail. This
    isn't the only way to workaround implicit function declarations but
    it might be the simplest and cleanest.
    
    The problem hasn't been observed in the wild.
    
    There are a couple more AC_COMPILE_IFELSE uses in configure.ac.
    Of these, Landlock check calls prctl() and in theory could have
    the same problem. In practice it doesn't as the check program
    looks for several other things too. However, it was changed to
    AC_LINK_IFELSE still to look more correct.
    
    Similarly, m4/tuklib_cpucores.m4 and m4/tuklib_physmem.m4 were
    updated although they haven't given any trouble either. They
    have worked all these years because those check programs rely
    on specific headers and types: if headers or types are missing,
    compilation will fail. Using the linker makes these checks more
    similar to the ones in cmake/tuklib_*.cmake which always link.

 configure.ac          |  8 ++++++--
 m4/tuklib_cpucores.m4 |  8 ++++----
 m4/tuklib_physmem.m4  | 17 +++++++++++------
 3 files changed, 21 insertions(+), 12 deletions(-)

commit 35eb57355ad1c415a838d26192d5af84abb7cf39
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 23:35:59 +0300

    Build: Use AC_LINK_IFELSE instead of -Werror
    
    AC_COMPILE_IFELSE needed -Werror because Clang <= 14 would merely
    warn about the unsupported attribute and implicit function declaration.
    Changing to AC_LINK_IFELSE handles the implicit declaration because
    the symbol __crc32d is unlikely to exist in libc.
    
    Note that the other part of the check is that #include <arm_acle.h>
    must work. If the header is missing, most compilers give an error
    and the linking step won't be attempted.
    
    Avoiding -Werror makes the check more robust in case CFLAGS contains
    warning flags that break -Werror anyway (but this isn't the only check
    in configure.ac that has this problem). Using AC_LINK_IFELSE also makes
    the check more similar to how it is done in CMakeLists.txt.

 configure.ac | 12 +-----------
 1 file changed, 1 insertion(+), 11 deletions(-)

commit 5a728813c378cc3c4c9c95793762452418d08f1b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 23:34:34 +0300

    Build: Sync the compile check changes from CMakeLists.txt
    
    It's nice to keep these in sync. The use of main() will later allow
    AC_LINK_IFELSE usage too which may avoid the more fragile -Werror.

 configure.ac | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

commit 5279828635a95abdef82e691fc4979d362780e63
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 20:14:43 +0300

    CMake: Not experimental anymore
    
    While the CMake support has gotten a lot less testing than
    the Autotools-based build, the supported features should now
    be equal. The output may differ slightly, for example,
    liblzma.pc may have
    
        Libs.private: -pthread -lpthread
    
    with Autotools on GNU/Linux. CMake doesn't put any options
    in Libs.private because on modern glibc the pthread functions
    are in libc. The options options aren't required to link static
    liblzma into an application.
    
    Autotools-based build doesn't generate or install
    lib/cmake/liblzma-*.cmake files. This means that on most
    platforms one cannot rely on
    
        find_package(liblzma 5.2.5 REQUIRED CONFIG)
    
    or such finding those files.

 CMakeLists.txt | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit de215a0517645d16343f3a5336d3df884a4f665f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-25 16:11:13 +0300

    CMake: Use configure_file() to copy a file
    
    I had missed this simpler method before. It does create a dependency
    so that if .in.h changes the copying is done again.

 CMakeLists.txt | 17 +++++++----------
 1 file changed, 7 insertions(+), 10 deletions(-)

commit e620f35097c0ad20cd76d8258750aa706758ced9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-25 15:51:48 +0300

    CMake: Always add pthread flags into CMAKE_REQUIRED_LIBRARIES
    
    It was weird to add CMAKE_THREAD_LIBS_INIT in CMAKE_REQUIRED_LIBRARIES
    only if CLOCK_MONOTONIC is available. Alternative would be to remove
    the thread libs from CMAKE_REQUIRED_LIBRARIES after the check for
    pthread_condattr_setclock() but keeping the libs should be fine too.
    Then it's ready in case more pthread functions were wanted some day.

 CMakeLists.txt | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 068a70e54932ca32ca2922aff5a67a62615c650b
Author: Sam James <sam@gentoo.org>
Date:   2024-06-24 19:25:30 +0100

    CMake: Tweak comments
    
    Co-authored-by: Lasse Collin <lasse.collin@tukaani.org>

 CMakeLists.txt | 15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)

commit 3c95c93bca593bdd54ac5cc01526b12c82c78faa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 22:42:01 +0300

    CMake: Edit white space for consistency

 CMakeLists.txt | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

commit 114cba69dbb96003e676c8c87a2e9943b12d065f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 22:41:10 +0300

    CMake: Fix three checks if building with -flto
    
    In CMake, check_c_source_compiles() always links too. With
    link-time optimization, unused functions may get omitted if
    main() doesn't depend on them. Consider the following which
    tries to check if somefunction() is available when <someheader.h>
    has been included:
    
        #include <someheader.h>
        int foo(void) { return somefunction(); }
        int main(void) { return 0; }
    
    LTO may omit foo() completely because the program as a whole doesn't
    need it and then the program will link even if the symbol somefunction
    isn't available in libc or other library being linked in, and then
    the test may pass when it shouldn't.
    
    What happens if <someheader.h> doesn't declare somefunction()?
    Shouldn't the test fail in the compilation phase already? It should
    but many compilers don't follow the C99 and later standards that
    prohibit implicit function declarations. Instead such compilers
    assume that somefunction() exists, compilation succeeds (with a
    warning), and then linker with LTO omits the call to somefunction().
    
    Change the tests so that they are part of main(). If compiler accepts
    implicitly declared functions, LTO cannot omit them because it has to
    assume that they might have side effects and thus linking will fail.
    On the other hand, if the functions/intrinsics being used are supported,
    they might get optimized away but in that case it's fine because they
    really are supported.
    
    It is fine to use __attribute__((target(...))) for main(). At least
    it works with GCC 4.9 to 14.1 on x86-64.
    
    Reported-by: Sam James <sam@gentoo.org>

 CMakeLists.txt | 19 ++++++++-----------
 1 file changed, 8 insertions(+), 11 deletions(-)

commit 78e882205e1f1e91df2af2cb7da00fe205dede99
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 21:19:14 +0300

    CMake: Use MATCHES instead of multiple STREQUAL

 CMakeLists.txt | 11 ++++-------
 1 file changed, 4 insertions(+), 7 deletions(-)

commit d3f20382fc1bd865eb70a65455d5022ed05caac8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 21:06:18 +0300

    CMake: Improve the comment about LIBS

 CMakeLists.txt | 6 ++++++
 1 file changed, 6 insertions(+)

commit 33ec377729a3889e58d98934b2777b2754a3e045
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 20:01:25 +0300

    CMake: Fix a typo in a message
    
    It was spotted with codespell.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 2a47be823cd6c717bc91fa29c7710c9b1ae0331f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 19:58:54 +0300

    Document CMake options in INSTALL

 INSTALL | 115 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 106 insertions(+), 9 deletions(-)

commit 3faf4e8079a46bd46e05cd1234365724a6a33802
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 17:18:44 +0300

    CI: Don't omit crc32 from the list with CMake anymore
    
    XZ_CHECKS accepts it but works without too.

 build-aux/ci_build.bash | 10 +---------
 1 file changed, 1 insertion(+), 9 deletions(-)

commit 1bf83cded2955282fe1a868f08c83d4e5d6dca4a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 17:39:54 +0300

    CI: Workaround buggy config.guess on Ubuntu 22.04LTS and 24.04LTS
    
    Check for the wrong triplet from config.guess and override it with
    the --build option on the configure command line. Then i386 assembly
    autodetection will work.
    
    These Ubuntu versions (and as of writing, also Debian unstable)
    ship config.guess version 2022-01-09 which contains a bug that
    was fixed in version 2022-05-08. It results in a wrong configure
    triplet when using CC="gcc -m32" to build i386 binaries.
    
    Upstream fix:
    https://git.savannah.gnu.org/cgit/config.git/commit/?id=f56a7140386d08a531bcfd444d632b28c61a6329
    
    More information:
    https://mail.gnu.org/archive/html/config-patches/2022-05/msg00003.html

 build-aux/ci_build.bash | 9 +++++++++
 1 file changed, 9 insertions(+)

commit dbcdabf68fee9ed694b68c3a82e6adbeff20b679
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 15:24:52 +0300

    CI: Use CC="gcc -m32" to get i386 compiler on x86-64
    
    The old method put it in CFLAGS which is a wrong place because
    config.guess doesn't read CFLAGS.

 .github/workflows/ci.yml | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 0c1e6d900bac127464fb30a854776e1810ab5f16
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-24 14:54:17 +0300

    CI: Let CMake use the CC environment variable
    
    CC from environment is used to initialize CMAKE_C_COMPILER so
    setting CMAKE_C_COMPILER explicitly isn't needed.
    
    The syntax in ci_build.bash was broken in case one wished to put
    spaces in CC.

 build-aux/ci_build.bash | 4 ----
 1 file changed, 4 deletions(-)

commit a3d6eb797c1bd9b0425ef6754e475e43e62bf075
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-20 23:25:42 +0300

    CMake: Add autodetection for 32-bit x86 CRC assembly usage

 CMakeLists.txt | 33 ++++++++++++++++++---------------
 1 file changed, 18 insertions(+), 15 deletions(-)

commit dbc14f213e5cf866f1f42b7c6381a91e1189908c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-20 23:00:59 +0300

    CMake: Move option(XZ_ASM_I386) downwards a few lines

 CMakeLists.txt | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit e5c2b07b489b155c1bebd5cb5e5b94325c2fef1a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-20 18:45:41 +0300

    DOS: Update Makefile and config.h for the CRC changes

 dos/Makefile | 4 ++--
 dos/config.h | 3 +++
 2 files changed, 5 insertions(+), 2 deletions(-)

commit fe77c4e130d62dc3f9c1de40a18c0c6caa5a4d88
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-23 15:35:35 +0300

    liblzma: Tidy up crc_common.h
    
    Prefix ARM64_RUNTIME_DETECTION with CRC_ and reorder it to be with
    the other ARM64-specific lines. That macro isn't used outside this
    file.
    
    ARM64 CLMUL implementation doesn't exist yet and thus CRC64_ARM64_CLMUL
    isn't used anywhere yet.
    
    It's not ideal that the single-letter CRC utility macros are here
    as they pollute the namespace of the LZ encoder files. Those could
    be moved their own crc_macros.h like they were in 5.2.x but in practice
    this is fine enough already.

 src/liblzma/check/crc_common.h | 62 ++++++++++++++++++++++++++++--------------
 1 file changed, 42 insertions(+), 20 deletions(-)

commit 7484d375384f551d475ff44a93590a225e0cb8f6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-23 14:22:08 +0300

    liblzma: Move lzma_crcXX_table[][] declarations to crc_common.h
    
    LZ encoder needs lzma_crc32_table[0] but otherwise those tables
    are private to the CRC code. In contrast, the other things in
    check.h are needed in several places.

 src/liblzma/check/check.h        | 18 ------------------
 src/liblzma/check/crc32_small.c  |  3 +++
 src/liblzma/check/crc_common.h   | 18 ++++++++++++++++++
 src/liblzma/lz/lz_encoder_hash.h |  4 ++--
 4 files changed, 23 insertions(+), 20 deletions(-)

commit 85b081f5d4598342b8c155a2c08697fb2adc372c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-19 18:38:22 +0300

    liblzma: Make 32-bit x86 CRC assembly co-exist with CLMUL
    
    Now runtime detection of CLMUL support can pick between the CLMUL and
    the generic assembly implementations. Whatever overhead this has for
    builds that omit CLMUL completely isn't important because builds for
    any non-ancient system is likely to include the CLMUL code too.
    
    Handle the CRC tables in crcXX_fast.c files because now these files
    are built even when assembly code is used.
    
    If 32-bit x86 assembly is enabled then it will always be built even
    if compiler flags were such that CLMUL would be allowed unconditionally.
    That is, runtime detection will be used anyway. This keeps the build
    rules simpler.
    
    In LZ encoder, build and use lzma_lz_hash_table[256] if CLMUL CRC
    is used without runtime detection. Previously this wasn't needed
    because crc32_table.c included the lzma_crc32_table[][] in the build
    unless encoder support had been disabled. Including an 8 KiB table
    was silly when only 1 KiB is actually used. So now liblzma is 7 KiB
    smaller if CLMUL is enabled without runtime detection.

 CMakeLists.txt                    |  8 ++------
 src/liblzma/check/Makefile.inc    |  8 ++------
 src/liblzma/check/crc32_fast.c    | 14 ++++++++++++-
 src/liblzma/check/crc32_table.c   | 42 ---------------------------------------
 src/liblzma/check/crc32_x86.S     | 14 +++++--------
 src/liblzma/check/crc64_fast.c    | 18 +++++++++++++----
 src/liblzma/check/crc64_table.c   | 37 ----------------------------------
 src/liblzma/check/crc64_x86.S     | 14 +++++--------
 src/liblzma/check/crc_common.h    | 18 +++++++++--------
 src/liblzma/check/crc_x86_clmul.h |  5 -----
 src/liblzma/lz/lz_encoder.c       |  2 +-
 src/liblzma/lz/lz_encoder_hash.h  | 30 ++++++++++++++++++++--------
 12 files changed, 74 insertions(+), 136 deletions(-)

commit 6667d503b5dc9826654e3d9ad505e1883ff6c388
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-19 17:44:41 +0300

    liblzma: CRC: Rename crcXX_generic to lzma_crcXX_generic
    
    This prepares for the possibility that lzma_crc32_generic and
    lzma_crc64_generic are extern functions.

 src/liblzma/check/crc32_fast.c | 6 +++---
 src/liblzma/check/crc64_fast.c | 6 +++---
 2 files changed, 6 insertions(+), 6 deletions(-)

commit 1dca581ff20aa1cde61e9e5267d3aeb0af9b6845
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-20 22:55:22 +0300

    CMake: Define HAVE_CRC_X86_ASM when 32-bit x86 CRC assembly is used

 CMakeLists.txt | 3 +++
 1 file changed, 3 insertions(+)

commit f76837acb65676e541d8ee79cd62dbbf27280a62
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-10 16:00:26 +0300

    Build: Define HAVE_CRC_X86_ASM when 32-bit x86 CRC assembly is used
    
    This makes it easier to determine when the CRC tables are needed.

 configure.ac | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

commit 9ce0866b070850da4dc837741ff055faa218bdd6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-21 00:46:09 +0300

    CI: Update to the new renamed options in CMakeLists.txt

 build-aux/ci_build.bash | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 0232e66d5bc5b01a25a447c657e51747626488ab
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-20 18:12:22 +0300

    CMake: Add XZ_EXTERNAL_SHA256

 CMakeLists.txt | 121 ++++++++++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 116 insertions(+), 5 deletions(-)

commit 4535b80caead82a7ddf7feb988b8fbc773152522
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-20 18:12:21 +0300

    CMake: Move threading detection a few lines up
    
    It feels clearer this way, and when support for external SHA-256
    is added, this will keep the order of the library detection the
    same as in configure.ac (check for pthreads before libmd) although
    it shouldn't matter in practice.

 CMakeLists.txt | 176 ++++++++++++++++++++++++++++-----------------------------
 1 file changed, 88 insertions(+), 88 deletions(-)

commit 94d062dbac34d366eb26625034200cc3457e6645
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-20 18:12:21 +0300

    CMake: Move the sandbox code out of the liblzma section
    
    Sandboxing is for the command line tools, not liblzma.
    No functional changes.

 CMakeLists.txt | 214 ++++++++++++++++++++++++++++-----------------------------
 1 file changed, 107 insertions(+), 107 deletions(-)

commit 75ce4797d49621710e6da95d8cb91541028c6d68
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-20 18:12:21 +0300

    CMake: Keep existing options in LIBS when adding -lrt
    
    This makes no difference yet because -lrt is currently the only option
    that might be added to LIBS.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 47aaa92516fd9609821d04e5e94ca6558e56d62b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Don't install scripts if the xz tool isn't built
    
    The scripts need the xz tool.

 CMakeLists.txt    | 11 +++++++++--
 tests/tests.cmake |  2 +-
 2 files changed, 10 insertions(+), 3 deletions(-)

commit fb50c6ba1d4c9405e5b12b5988b01a3002638c5d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Add XZ_TOOL_XZDEC and XZ_TOOL_LZMADEC

 CMakeLists.txt | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

commit def767f7d18ccbd81cd5e5b46c8b6031f3a1de34
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Add XZ_TOOL_LZMAINFO

 CMakeLists.txt | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 5600e370fb7e11eafabc6c3ef5bf6510e859f4f0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Add XZ_TOOL_XZ

 CMakeLists.txt | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 6a3c4aaa43a90da441e1156c5ffd2e6098f5521f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    Windows: Drop Visual Studio 2013 support
    
    This simplifies things a little. Building liblzma with VS2013 probably
    still worked but building the command line tools was not supported.
    
    Microsoft ended support for VS2013 on 2024-04.

 CMakeLists.txt           | 9 +++++++--
 src/common/sysdefs.h     | 6 +-----
 windows/INSTALL-MSVC.txt | 8 ++------
 3 files changed, 10 insertions(+), 13 deletions(-)

commit 5d5c92b26246936461a635dda1f95740d7de2058
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Add XZ_TOOL_SCRIPTS

 CMakeLists.txt | 44 +++++++++++++++++++++++++++++---------------
 1 file changed, 29 insertions(+), 15 deletions(-)

commit d274a2bc00d235f07e96aaf82c149794cfe82b12
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Add XZ_DOC

 CMakeLists.txt | 45 ++++++++++++++++++++++++---------------------
 1 file changed, 24 insertions(+), 21 deletions(-)

commit 188143a50ade67253ed256608f50f78aa1380403
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-20 21:53:03 +0300

    CMake: Refactor XZ_SYMBOL_VERSIONING to match configure.ac
    
    Make the available options and their behavior match
    --enable-symbol-versions in configure.ac.
    
    Don't enable symbol versions on Linux if not using glibc. Previously
    the generic variant was selected on Microblaze or if using NVHPC
    without checking that libc is glibc.
    
    Leave the cache variable to "auto" or "yes" if that was specified
    instead of setting it to the autodetected value by default. A downside
    is that one cannot easily see which variant the autodetection code
    has selected. The same applies to XZ_SANDBOX and XZ_THREADS though.

 CMakeLists.txt | 125 ++++++++++++++++++++++++++++++++++-----------------------
 1 file changed, 75 insertions(+), 50 deletions(-)

commit cc52ef8ed3b75a581262c587f6c06c213a550f86
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Use the same option list for XZ_THREADS as in configure.ac
    
    Also clarify that "yes" will fail if no threading support is found.
    If no threading is wanted, it has to be disabled manually.
    
    configure.ac doesn't behave this way at the moment. Instead it
    assumes pthreads to be present if not targeting Windows. If pthreads
    actually are missing, the build fails later.

 CMakeLists.txt | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

commit 37f7af3452bab0a34ce320c2ad532835f18752d9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Use the same option list for XZ_SANDBOX as in configure.ac
    
    It's simpler to document this way.

 CMakeLists.txt | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

commit c715dec8e800b65145918cfb0ee9bbc90faa8aad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Fix indentation

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ea379f2f180befabd2039342db8eaeb757fdd2b7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Add warning options for GCC and Clang
    
    The list was copied from configure.ac and should be kept in sync.
    (Pretend that the deleted comment in CMakeLists.txt didn't exist.)
    
    There is no need to add equivalent of --enable-werror as CMake >= 3.24
    supports -DCMAKE_COMPILE_WARNING_AS_ERROR=ON.

 CMakeLists.txt | 64 +++++++++++++++++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 59 insertions(+), 5 deletions(-)

commit 74223338197b7dfcd69f56df78b6502805a75f23
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Use \040 instead of \x20 for a space
    
    This is for consistency with 4c81c9611f8b2e1ad65eb7fa166afc570c58607e
    where \040 has to be used because \0x20F gets interpret at three hex
    digits. Octals escapes are never longer than three digits.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e8854b6bdc956c46dc4232bd07c17163034a00f2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Add XZ_ASSUME_RAM

 CMakeLists.txt | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit e1127e75cb82e0385f02c995771d6fe1420f43c5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename liblzma_INSTALL_CMAKEDIR to XZ_INSTALL_CMAKEDIR

 CMakeLists.txt | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 96abfe98c15e431a50a6a31015c5bb05540ab2ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Refactor ADDITIONAL_CHECK_TYPES to XZ_CHECKS
    
    Now "crc32" is in the list too for completeness but it doesn't
    actually have any effect. The description of the cache variable
    says that "crc32 is always built" so it should be clear enough.

 CMakeLists.txt    | 14 +++++++-------
 tests/tests.cmake | 17 ++++++++---------
 2 files changed, 15 insertions(+), 16 deletions(-)

commit 679500ffe00ecb4f02292129e7529ab7392f3943
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename the cache variable POSIX_SHELL to XZ_POSIX_SHELL
    
    We still need the variable POSIX_SHELL for configure_file()
    but it doesn't need to be a cache variable.

 CMakeLists.txt | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit e5c0eb2e50e5522a0a55e7ba83fe49b04c8a6eef
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename ENCODERS and DECODERS to use XZ_ prefix

 CMakeLists.txt    | 34 +++++++++++++++++-----------------
 tests/tests.cmake |  4 ++--
 2 files changed, 19 insertions(+), 19 deletions(-)

commit e7785e2061f95d44aa6c0856b09cc0fbad7d6154
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename MATCH_FINDERS to XZ_MATCH_FINDERS

 CMakeLists.txt | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 63294806b488a27a28a0960f6a257695dd2b569a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename SYMBOL_VERSIONING to XZ_SYMBOL_VERSIONING

 CMakeLists.txt | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

commit ad245b133675d285bca5d48123062e9d1e3f747e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename ENABLE_THREADS to XZ_THREADS

 CMakeLists.txt | 24 +++++++++++-------------
 1 file changed, 11 insertions(+), 13 deletions(-)

commit 4250d4de32e66e558cc2ebe73b05255633c933ed
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename ENABLE_SANDBOX to XZ_SANDBOX

 CMakeLists.txt | 23 +++++++++++------------
 1 file changed, 11 insertions(+), 12 deletions(-)

commit 0fdcd0c582f1a38542cd647dde449d9447d5888d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename ENABLE_X86_ASM to XZ_ASM_I386

 CMakeLists.txt | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit e017d5526e316003fdb2a3f76acbb83443f14ddf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename CREATE_XZ_SYMLINKS to XZ_TOOL_SYMLINKS
    
    This only affects the names unxz and xzcat. The xz-prefixed script
    symlinks (xzfgrep and such) are always created if scripts are enabled.

 CMakeLists.txt | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 04cac14fcb9fb302c24e90b04ca4b77d3717b50c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename CREATE_LZMA_SYMLINKS to XZ_TOOL_LZMA_SYMLINKS
    
    Update the description too.
    
    It affects creation of not only the legacy lzma, unlzma, lzcat symlinks
    but also lzgrep and other legacy names for the scripts. The last
    LZMA Utils release was made in 2008 but these names are still used
    in some places to handle .lzma files.

 CMakeLists.txt | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit 612ccebf884eb1a9b6848e230c24f97a03fe917a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename ALLOW_ARM64_CRC32 to XZ_ARM64_CRC32
    
    Update description too.

 CMakeLists.txt | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 3dcc12290d6dffbe7f10f501c141d325bad65901
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename ALLOW_CLMUL_CRC to XZ_CLMUL_CRC
    
    Update description too.

 CMakeLists.txt | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 4b8faa72442da9aa1a356f5848aae798d8588a7d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename ENABLE_DOXYGEN to XZ_DOXYGEN

 CMakeLists.txt | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit b56273ae575bac350e50b0c689269dcab04b04b3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename LZIP_DECODER to XZ_LZIP_DECODER

 CMakeLists.txt    | 4 ++--
 tests/tests.cmake | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 2343992fcbe8b436da6df888be37713cccaff0ab
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename MICROLZMA_ENCODER/DECODER to XZ_MICROLZMA_ENCODER/DECODER

 CMakeLists.txt    | 8 ++++----
 tests/tests.cmake | 2 +-
 2 files changed, 5 insertions(+), 5 deletions(-)

commit 96f0a6632cc0598a26d93255b0c444df18dc7891
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename ENABLE_SMALL to XZ_SMALL

 CMakeLists.txt | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit 29f77c7b707f2458fb047e77497354b195e05b14
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 18:07:04 +0300

    CMake: Rename ENABLE_NLS to XZ_NLS
    
    Also update the description to mention that this affects installation
    of translated man pages too.
    
    Prefixing the cache variables with the project name helps if
    the package is used as a subproject in another package.
    It also makes the package-specific options group more nicely
    in ccmake and cmake-gui.

 CMakeLists.txt | 28 +++++++++++++++-------------
 1 file changed, 15 insertions(+), 13 deletions(-)

commit ac05f1b0d7cda1e7ae79775a8dfecc54601d7f1c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-15 23:34:29 +0300

    CMake: Link Threads::Threads as PRIVATE to liblzma
    
    This way pthread options aren't passed to the linker when linking
    against shared liblzma but they are still passed when linking against
    static liblzma. (Also, one never needs the include path of the
    threading library to use liblzma since liblzma's API headers
    don't #include <pthread.h>. But <pthread.h> tends to be in the
    default include path so here this change makes no difference.)
    
    One cannot mix target_link_libraries() calls that use the scope
    (PRIVATE, PUBLIC, or INTERFACE) keyword and calls that don't use it.
    The calls without the keyword are like PUBLIC except perhaps when
    they aren't, or something like that... It seems best to always
    specify a scope keyword as the meanings of those three keywords
    at least are clear.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 82986d8c691a294c78b48d8391303e5c428b5437
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-16 19:39:32 +0300

    CMake: Add empty lines

 CMakeLists.txt | 2 ++
 1 file changed, 2 insertions(+)

commit 2aecffe0f0e14f3ef635e8cd7b405420f2385de2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-16 19:37:36 +0300

    CMake: Use CMAKE_THREAD_LIBS_INIT in liblzma.pc only with pthreads
    
    This shouldn't make much difference in practice as on Windows
    no flags are needed anyway and unitialized variable (when threading
    is disabled) expands to empty. But it's clearer this way.

 CMakeLists.txt | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit 664918bd3635ea8e773f06022286ecb0c485166c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-17 18:20:14 +0300

    Update THANKS

 THANKS | 3 +++
 1 file changed, 3 insertions(+)

commit 5ca96a93488d0f5a530c78b274cac317453807ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-16 19:25:07 +0300

    CMake: Use native newlines in liblzma.pc
    
    vcpkg doesn't specify the newline type so it should be fine to
    use native newlines in liblzma.pc on Windows.

 CMakeLists.txt | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit ebd155c3a1b87411edae06d3bdaa9659ec057522
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-16 19:18:56 +0300

    CMake: Use relative paths in liblzma.pc if possible
    
    Now liblzma.pc can be relocatable only if using CMake >= 3.20
    but that should be OK as now we shouldn't get broken liblzma.pc
    if CMAKE_INSTALL_LIBDIR or CMAKE_INSTALL_INCLUDEDIR contain an
    absolute path.
    
    Thanks to Eli Schwartz.

 CMakeLists.txt | 18 ++++++++++++++----
 1 file changed, 14 insertions(+), 4 deletions(-)

commit 7a366d93cfd74ce10201db400be8836199944e36
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-16 18:33:08 +0300

    Revert "CMake: Set only "prefix" as an absolute path in liblzma.pc"
    
    This reverts commit 5d1c649ba9eb7a5b9371252ebfbc2911dc774e69.
    
    While CMAKE_INSTALL_<dir> tend to be relative paths, they don't need
    to be. Thus the commit was broken. A fancier method is required.
    
    Thanks to Eli Schwartz for the bug report and explanation.

 CMakeLists.txt | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 30a2d5d51006301a3ddab5ef1f5ff0a9d74dce6f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-16 13:39:37 +0300

    liblzma: CRC CLMUL: Omit is_arch_extension_supported() when not needed
    
    On E2K the function compiles only due to compiler emulation but the
    function is never used. It's cleaner to omit the function when it's
    not needed even though it's a "static inline" function.
    
    Thanks to Ilya Kurdyukov.

 src/liblzma/check/crc_x86_clmul.h | 4 ++++
 1 file changed, 4 insertions(+)

commit 54eaea5ea49bb8bca4286d4412f19ac73187489e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-16 13:21:34 +0300

    liblzma: x86 CLMUL CRC: Rewrite
    
    It's faster with both tiny and large buffers and doesn't require
    disabling any sanitizers. With large buffers the extra speed is
    from folding four 16-byte chunks in parallel.
    
    The 32-bit x86 with MSVC reportedly still needs a workaround.
    Now the simpler "__asm mov ebx, ebx" trick is enough but it
    needs to be in lzma_crc64() instead of crc64_arch_optimized().
    Thanks to Iouri Kharon for testing and the fix.
    
    Thanks to Ilya Kurdyukov for testing the speed with aligned and
    unaligned buffers on a few x86 processors and on E2K v6.
    
    Thanks to Sam James for general feedback.
    
    Fixes: https://github.com/tukaani-project/xz/issues/112
    Fixes: https://github.com/tukaani-project/xz/issues/122

 src/liblzma/check/crc64_fast.c    |   8 +
 src/liblzma/check/crc_x86_clmul.h | 437 ++++++++++++++++++++------------------
 2 files changed, 237 insertions(+), 208 deletions(-)

commit c0e7eaae8d6eef1e313c9d0da20ccf126ec61f38
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-01 14:44:04 +0300

    sysdefs.h: Add alignas

 src/common/sysdefs.h | 11 +++++++++++
 1 file changed, 11 insertions(+)

commit 20014c261451381d5e2f58e63e7b1fbefd4df4bf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-11 12:47:59 +0300

    liblzma: Use a single macro to select CLMUL CRC to build
    
    This way it's clearer that two things cannot be selected
    at the same time.

 src/liblzma/check/crc32_fast.c    |  2 +-
 src/liblzma/check/crc64_fast.c    |  2 +-
 src/liblzma/check/crc_x86_clmul.h | 18 ++++++++++--------
 3 files changed, 12 insertions(+), 10 deletions(-)

commit d8fb0986171bd6a3066b236fc9a6b3d573c8e441
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-10 15:31:01 +0300

    liblzma: CRC32 CLMUL: Refactor the constants and simplify
    
    By using modulus scaled constants, the final reduction can
    be simplified.

 src/liblzma/check/crc_x86_clmul.h | 52 +++++++--------------------------------
 1 file changed, 9 insertions(+), 43 deletions(-)

commit ef652ac391ff7e8cda656238dc5b5f83bc1554c2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-10 15:12:48 +0300

    liblzma: CRC64 CLMUL: Refactor the constants
    
    Now it refers to crc_clmul_consts_gen.c. vfold8 was renamed to mu_p
    and the p no longer has the lowest bit set (it makes no difference
    as the output bits it affects are ignored).

 src/liblzma/check/crc_x86_clmul.h | 43 +++++++--------------------------------
 1 file changed, 7 insertions(+), 36 deletions(-)

commit 9f5fc17e32bf5c7c6cfadf40c29a1dedb4cc03ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-10 14:45:44 +0300

    liblzma: Add crc_clmul_consts_gen.c
    
    It's a standalone program that prints the required constants.
    It's won't be a part of the normal build of the package.

 src/liblzma/check/Makefile.inc           |   1 +
 src/liblzma/check/crc_clmul_consts_gen.c | 160 +++++++++++++++++++++++++++++++
 2 files changed, 161 insertions(+)

commit 71b147aab7fe4a60ed57b697d5bb490f099894be
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-09 21:44:03 +0300

    liblzma: Remove CRC_USE_GENERIC_FOR_SMALL_INPUTS
    
    It was already commented out.

 src/liblzma/check/crc32_fast.c    | 21 ---------------------
 src/liblzma/check/crc64_fast.c    |  5 -----
 src/liblzma/check/crc_common.h    | 14 --------------
 src/liblzma/check/crc_x86_clmul.h |  9 +--------
 4 files changed, 1 insertion(+), 48 deletions(-)

commit f99a7be40645f86959a5b180dfae948dd165e07c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-09 21:03:39 +0300

    liblzma: Remove crc_attr_no_sanitize_address
    
    It's not enough to silence the address sanitizer. Also memory and
    thread sanitizers would need to be silenced. They, at least currently,
    aren't smart enough to see that the extra bytes are discarded from
    the xmm registers by later instructions.
    
    Valgrind is smarter, possibly because this kind of code isn't weird
    to write in assembly. Agner Fog's optimizing_assembly.pdf even mentions
    this idea of doing an aligned read and then discarding the extra
    bytes. The sanitizers don't instrument assembly code but Valgrind
    checks all code.
    
    It's better to change the implementation to avoid the sanitization
    attributes which also look scary in the code. (Somehow they can look
    more scary than __asm__ which is implictly unsanitized.)
    
    See also:
    https://github.com/tukaani-project/xz/issues/112
    https://github.com/tukaani-project/xz/issues/122

 src/liblzma/check/crc_common.h    | 9 ---------
 src/liblzma/check/crc_x86_clmul.h | 3 ---
 2 files changed, 12 deletions(-)

commit ead4d151996f8a18bf9b07eb1e175c0a1590e562
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-10 15:37:49 +0300

    Revert "Build: Temporarily disable CRC CLMUL to silence OSS Fuzz"
    
    This reverts commit 9f1a6d6f9a258886933a22239a5b81af34b28199.

 configure.ac | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit 2178acf8a4d40a93e970cfcf9b807d5ef6c8da92
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-12 14:26:44 +0300

    CMake: Prefer C11 with a fallback to C99
    
    There is no need to make a similar change in configure.ac.
    With Autoconf 2.72, the deprecated macro AC_PROG_CC_C99
    is an alias for AC_PROG_CC which prefers a C11 compiler.

 CMakeLists.txt | 17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)

commit c97e9c12fef4d1093ee2a75236742481361f50f5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-12 14:20:21 +0300

    Update THANKS

 THANKS | 4 ++++
 1 file changed, 4 insertions(+)

commit 89e9f12e03324b8a186e807b268f34f92d1b2f41
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-11 11:15:49 +0300

    Tests: Improve the CRC32 test
    
    A similar one was already there for CRC64 but nowadays also CRC32
    has a CLMUL implementation, so it's good to test it better too.

 tests/test_check.c | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

commit c7164b1927e3fe7cdba70ee4687e1a590a81043b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-11 22:42:26 +0300

    xz: Fix white space

 src/xz/list.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 0a32d2072c598de281058b26dc08920fbf0cd2a1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-11 21:59:09 +0300

    liblzma: Fix a typo in a comment
    
    Thanks to Sam James for spotting it.
    
    Fixes: f644473a211394447824ea00518d0a214ff3f7f2

 src/liblzma/check/crc_x86_clmul.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit afd9b4d282a10186808c3331dad4caf79c02d55f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-10 15:52:26 +0300

    liblzma: Fix a comment indentation

 src/liblzma/check/crc_common.h | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 50e6bff274568c568930e15094da8217e7d47d28
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-09 22:09:12 +0300

    liblzma: Fix white space

 src/liblzma/check/crc32_table.c   | 10 +++++-----
 src/liblzma/check/crc_x86_clmul.h |  6 +++---
 src/liblzma/check/sha256.c        |  2 +-
 3 files changed, 9 insertions(+), 9 deletions(-)

commit caea7844d3824755d053b4743c4913d73ac2db3d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-01 14:25:29 +0300

    tuklib: __STDC_VERSION__ in C23 is 202311

 src/common/tuklib_common.h | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit 9e73918a4f14be754a23f74dda45ca431939a4a0
Author: RainRat <rainrat78@yahoo.ca>
Date:   2024-06-05 15:21:49 -0700

    Fix typos
    
    Closes: https://github.com/tukaani-project/xz/pull/124

 INSTALL                           | 2 +-
 doc/examples/03_compress_custom.c | 2 +-
 src/common/tuklib_integer.h       | 2 +-
 src/liblzma/api/lzma/container.h  | 2 +-
 src/xz/mytime.c                   | 2 +-
 tests/test_filter_str.c           | 2 +-
 6 files changed, 6 insertions(+), 6 deletions(-)

commit 04b23addf3733873667675df2439725f076c2f36
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-07 15:47:20 +0300

    tuklib_integer: Fix building on OpenBSD/sparc64 that uses GCC 4.2
    
    GCC 4.2 doesn't have __builtin_bswap16() and friends so tuklib_integer.h
    tries to use OS-specific byte swap methods instead. On OpenBSD those
    macros are swap16/32/64 instead of bswap16/32/64 like on other *BSDs
    and Darwin.
    
    An alternative to "#ifdef __OpenBSD__" could be "#ifdef swap16" as it
    is a macro. But since OpenBSD seems to be a special case under this
    special case of "*BSDs and Darwin", checking for __OpenBSD__ seems
    the more conservative choice now.
    
    Thanks to Christian Weisgerber and Brad Smith who both submitted
    the same patch a few hours apart.
    
    Co-authored-by: Christian Weisgerber <naddy@mips.inka.de>
    Co-authored-by: Brad Smith <brad@comstyle.com>
    Closes: https://github.com/tukaani-project/xz/pull/126

 src/common/tuklib_integer.h | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

commit dc03f6290f5b9bd3d50c7e12e58dee870889d599
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-07 15:06:59 +0300

    liblzma: Add ARM64 CRC32 instruction support detection on OpenBSD
    
    The C code is from Christian Weisgerber, I merely reordered the OSes.
    Then I added the build system checks without testing them.
    
    Also thanks to Brad Smith who submitted a similar patch on GitHub
    a few hours after Christian had sent his via email.
    
    Co-authored-by: Christian Weisgerber <naddy@mips.inka.de>
    Closes: https://github.com/tukaani-project/xz/pull/125

 CMakeLists.txt                  |  6 ++++++
 configure.ac                    |  9 +++++++++
 src/liblzma/check/crc32_arm64.h | 15 +++++++++++++++
 src/liblzma/check/crc_common.h  |  1 +
 4 files changed, 31 insertions(+)

commit f5c2ae58ec68c665e62c790b842657afcb31474c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-05 13:55:43 +0300

    Update THANKS

 THANKS | 2 ++
 1 file changed, 2 insertions(+)

commit e5491dfab9c54dc7078a8d3d07fabb91d6e06418
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-05 13:42:47 +0300

    CMake: Include the "alpha" or "beta" suffix in PACKAGE_VERSION
    
    This way the version string gets into xzgrep and other scripts
    in full and also into liblzma.pc.
    
    For the project() command, a suffixless string is required though.

 CMakeLists.txt | 16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

commit 1d3c61575fda0be6b2d50c9e32a343349d5cd5c0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-05 13:30:28 +0300

    CMake: Fix wrong version variable
    
    liblzma_VERSION has never existed in the repository. xz_VERSION from
    the project() command was used for liblzma SOVERSION so use xz_VERSION
    here too.
    
    The wrong variable did no harm in practice as PROJECT_VERSION
    was used as the fallback. It has the same value as xz_VERSION.
    
    Fixes: 7e3493d40eac0c3fa3d5124097745a70e15c41f6

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 5d1c649ba9eb7a5b9371252ebfbc2911dc774e69
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-05 12:59:59 +0300

    CMake: Set only "prefix" as an absolute path in liblzma.pc
    
    CMake provides variables that are relative to CMAKE_INSTALL_PREFIX
    so use them instead of repeating the full path.

 CMakeLists.txt | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit e0d6d05ce0d464e966c0669bbf869202a43cc2f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-04 23:59:29 +0300

    CMake: Fix liblzma filename in Windows environments
    
    This is a mess because liblzma DLL outside Cygwin and MSYS2
    is liblzma.dll instead of lzma.dll to avoid a conflict with
    lzma.dll from LZMA SDK.
    
    On Cygwin the name was "liblzma-5.dll" while "cyglzma-5.dll"
    would have been correct (and match what Libtool produces).
    MSYS2 likely was broken too as it uses the "msys-" prefix.
    
    This change has no effect with MinGW-w64 because with that
    the "lib" prefix was correct already.
    
    With MSVC builds this is a small breaking change that requires developers
    to adjust the library name when linking against liblzma. The liblzma.dll
    name is kept as is but the import library and static library are now
    lzma.lib instead of liblzma.lib. This is helpful when using pkgconf
    because "pkgconf --msvc-syntax --libs liblzma" outputs "lzma.lib"
    (it's converted from "-llzma" in liblzma.pc). It would be easy to
    keep the liblzma.lib naming but the pkgconf compatibility seems worth
    it in the long run. The lzma.lib name is compatible with MinGW-w64
    too as -llzma will find also lzma.lib.
    
    vcpkg had been patching CMakeLists.txt this way since 2022 but I
    learned this only recently. The reasoning for the patch makes sense,
    and while this is a small breaking change with MSVC, it seems like
    a decent compromise as it keeps the DLL name the same.
    
    2022 patch in vcpkg: https://github.com/microsoft/vcpkg/blob/0707a17ecf1466d64cf1a3c1ee18c8ff02aadb2d/ports/liblzma/win_output_name.patch
    See the discussion: https://github.com/microsoft/vcpkg/pull/39024
    
    Thanks to Vincent Torri for confirming the naming issue on Cygwin.

 CMakeLists.txt | 34 ++++++++++++++++++++++++++++++----
 1 file changed, 30 insertions(+), 4 deletions(-)

commit e7a42cda7c827e016619e8cab15e2faf5d4181ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-03 16:55:03 +0300

    Fix version.sh compatiblity with Solaris
    
    The ancient /bin/tr on Solaris doesn't support '\n'.
    With /usr/xpg4/bin/tr it works but it might not be in PATH.
    
    Another problem was that sed was given input that didn't have a newline
    at the end. Text files must end with a newline to be portable.
    
    Fix both problems:
    
      - Handle multiline input within sed itself to avoid one tr invocation.
        The default sed even on Solaris does understand \n.
    
      - Use octals in tr -d. \012 works for ASCII "line feed", it's even
        used as an example in the Solaris man page. But we must strip
        also ASCII "carriage return" \015 and EBCDIC "next line" \025.
        The EBCDIC case got handled with \n previously. Stripping \012
        and \015 on EBCDIC system won't matter as those control chars
        won't be present in the string in the first place.
    
    An awk-based solution could be an alternative but it might need
    special casing on Solaris to used nawk instead of awk. The changes
    in this commit are smaller and should have a smaller risk for
    regressions. It's also possible that version.sh will be dropped
    entirely at some point.

 build-aux/version.sh | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit a61c9ab4751f2710dcd5459c7d74bbf20781f0f9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-03 17:07:11 +0300

    CI: Don't require po4a on Solaris

 .github/workflows/solaris.yml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 5229bdf5335ce18ed54beb7e646e39927663be86
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-03 15:08:15 +0300

    CI: Use set -e on Solaris too

 .github/workflows/solaris.yml | 1 +
 1 file changed, 1 insertion(+)

commit afa938e429c1ce07d26d02999352fb014b62ff3d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-03 17:44:50 +0300

    CMake: Install liblzma.pc even with MSVC
    
    I had misunderstood that it wouldn't be useful with MSVC.
    vcpkg had been installing liblzma.pc with custom rules since 2020,
    years before liblzma.pc support was added to CMakeLists.txt.
    
    See:
    https://github.com/microsoft/vcpkg/blob/eb895b95aac6fd7485373702f29f508c42a180a0/ports/liblzma/portfile.cmake
    https://github.com/microsoft/vcpkg/pull/39024#issuecomment-2145064670

 CMakeLists.txt | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

commit 35f8649f08341639a627fd06350e938124ca3622
Author: Sam James <sam@gentoo.org>
Date:   2024-06-03 06:16:23 +0100

    ci: don't pin official GH actions via commit, just tag
    
    There's no real value in doing it via commit for official GH actions. We
    can keep using pinned commits for unofficial actions. It's hassle for no
    gain.
    
    Maybe going forward we can limit this further by only being paranoid
    for the jobs with any access to tokens.

 .github/workflows/ci.yml         | 4 ++--
 .github/workflows/freebsd.yml    | 2 +-
 .github/workflows/netbsd.yml     | 2 +-
 .github/workflows/openbsd.yml    | 2 +-
 .github/workflows/solaris.yml    | 2 +-
 .github/workflows/windows-ci.yml | 4 ++--
 6 files changed, 8 insertions(+), 8 deletions(-)

commit e885dae37ff5b1dbc760dabc1e03e866a7302ef2
Author: Christoph Junghans <christoph.junghans@gmail.com>
Date:   2024-04-30 07:49:26 -0600

    ci: set -e on openbsd
    
    Closes: https://github.com/tukaani-project/xz/pull/116

 .github/workflows/openbsd.yml | 1 +
 1 file changed, 1 insertion(+)

commit 21b02dd128cf9e8c76325ec124f70381862dcf19
Author: Christoph Junghans <christoph.junghans@gmail.com>
Date:   2024-04-30 07:48:58 -0600

    ci: set -e on netbsd

 .github/workflows/netbsd.yml | 1 +
 1 file changed, 1 insertion(+)

commit 8641f0c24c041136670c975b23408184b45431bc
Author: Christoph Junghans <christoph.junghans@gmail.com>
Date:   2024-04-25 14:56:06 -0700

    ci: actually fail on FreeBSD
    
    Without "set -e" the job will always be successful.
    
    See vmactions/freebsd-vm#72

 .github/workflows/freebsd.yml | 1 +
 1 file changed, 1 insertion(+)

commit ef616683ef11f11ffdfbe0624da33905e28a70f9
Author: Andrew Murray <radarhere@users.noreply.github.com>
Date:   2024-04-25 09:24:46 +1000

    Updated actions
    
    Closes: https://github.com/tukaani-project/xz/pull/115

 .github/workflows/ci.yml         | 4 ++--
 .github/workflows/windows-ci.yml | 6 +++---
 2 files changed, 5 insertions(+), 5 deletions(-)

commit 57b440d316da9ac9cb312ee7e6890f5382556f10
Author: Sam James <sam@gentoo.org>
Date:   2024-06-03 02:49:40 +0100

    ci: add po4a

 .github/workflows/netbsd.yml  | 2 +-
 .github/workflows/openbsd.yml | 3 ++-
 2 files changed, 3 insertions(+), 2 deletions(-)

commit 08cdf4be9a673d78efe393b53dd73bf43c81dd95
Author: Sam James <sam@gentoo.org>
Date:   2024-04-13 21:02:04 +0100

    ci: add Solaris
    
    Inspired by https://github.com/RsyncProject/rsync/commit/3f2a38b01184cae9a931280b534acf5a3dae2e94.
    
    It runs on Solaris 5.11 via a VirtualBox VM.

 .github/workflows/solaris.yml | 31 +++++++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)

commit b69768c8bd1a34fde311935c551d061ba52d9a3f
Author: Sam James <sam@gentoo.org>
Date:   2024-04-14 08:08:00 +0100

    xz: list: suppress -Wformat-nonliteral for Solaris
    
    Solaris' GCC can't understand that our use is fine, unlike modern compilers:
    ```
    list.c: In function 'print_totals_basic':
    list.c:1191:4: error: format not a string literal, argument types not checked [-Werror=format-nonliteral]
      uint64_to_str(totals.files, 0));
      ^~~~~~~~~~~~~
    cc1: all warnings being treated as errors
    ```
    
    It's presumably because of older gettext missing format attributes.
    
    This is with `gcc (GCC) 7.3.0`.

 src/xz/list.c | 7 +++++++
 1 file changed, 7 insertions(+)

commit bb90e1f66d9beb490c4c99763e79519045968710
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-06-03 11:44:28 +0300

    license-check.sh: Fix reporting of unclear license info
    
    The main feature was broken because an old variable name hadn't
    been updated to match the rest of the script.

 build-aux/license-check.sh | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit b8d134e61ede9f4a296226d97f5c20721fb4e8e2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-31 21:36:26 +0300

    Update THANKS

 THANKS | 3 +++
 1 file changed, 3 insertions(+)

commit 162587d3fb3fcedc6eee61eda3ccaaf60c80f0de
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-29 17:47:13 +0300

    Translations: Run po4a/update-po
    
    Now the files are in the new formatting without source file
    line numbers. Future updates should keep the diffs much smaller.

 po4a/de.po    | 1592 ++++++++++---------
 po4a/fr.po    | 4450 +++++++++++++++++-----------------------------------
 po4a/ko.po    | 1592 ++++++++++---------
 po4a/pt_BR.po | 4817 ++++++++++++++++++---------------------------------------
 po4a/ro.po    | 1592 ++++++++++---------
 po4a/uk.po    | 1592 ++++++++++---------
 6 files changed, 6114 insertions(+), 9521 deletions(-)

commit 50cd8ed002473c5cd53980e70a53e5e6ad646ffe
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-29 17:44:53 +0300

    Translations: Run "make -C po update-po"
    
    In the past this wasn't done before releases; the Git repository
    just contained the files from the Translation Project. But this
    way it is clearer when comparing release tarballs against the
    Git repository. In future releases this might no longer be necessary
    within a stable branch as the .po files won't change so easily anymore
    when creating a tarball.

 po/ca.po    | 567 +++++++++++++++++++++++++---------------
 po/cs.po    | 821 +++++++++++++++++++++++++++++++++++++--------------------
 po/da.po    | 809 +++++++++++++++++++++++++++++++++++---------------------
 po/de.po    | 403 ++++++++++++++--------------
 po/eo.po    | 403 ++++++++++++++--------------
 po/es.po    | 403 ++++++++++++++--------------
 po/fi.po    | 578 +++++++++++++++++++++++++---------------
 po/fr.po    | 538 +++++++++++++++++++++++---------------
 po/hr.po    | 403 ++++++++++++++--------------
 po/hu.po    | 403 ++++++++++++++--------------
 po/it.po    | 854 +++++++++++++++++++++++++++++++++++++++---------------------
 po/ko.po    | 403 ++++++++++++++--------------
 po/pl.po    | 403 ++++++++++++++--------------
 po/pt.po    | 842 +++++++++++++++++++++++++++++++++++++++--------------------
 po/pt_BR.po | 567 +++++++++++++++++++++++++---------------
 po/ro.po    | 403 ++++++++++++++--------------
 po/sr.po    | 838 ++++++++++++++++++++++++++++++++++++++--------------------
 po/sv.po    | 403 ++++++++++++++--------------
 po/tr.po    | 567 +++++++++++++++++++++++++---------------
 po/uk.po    | 403 ++++++++++++++--------------
 po/vi.po    | 403 ++++++++++++++--------------
 po/zh_CN.po | 417 +++++++++++++++--------------
 po/zh_TW.po | 558 ++++++++++++++++++++++++---------------
 23 files changed, 7257 insertions(+), 5132 deletions(-)

commit 16dbd865c8833462e1604a1e13f7effe55bb3fe6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-29 18:03:04 +0300

    Add NEWS for 5.6.2

 NEWS | 130 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 130 insertions(+)

commit a0eeb5f9369c43508610dcf00140edb8e2be92a6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-29 18:03:04 +0300

    Add NEWS for 5.4.7

 NEWS | 89 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 89 insertions(+)

commit 9b476fb93a9672f2e70b56e3e9c7e9cfedd6c162
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-29 18:03:04 +0300

    Add NEWS for 5.2.13

 NEWS | 115 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 115 insertions(+)

commit 9284f1aea31f0eb23e2ea72f7218b271e2234762
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-29 16:33:24 +0300

    Build: Update po/*.po files only when needed
    
    When po/xz.pot doesn't exist, running "make" or "make dist" will
    create it. Then the .po files will be updated but only if they
    actually would change more than the POT-Creation-Date line.
    Then the .gmo files would be generated from the .po files.
    This is the case before and after this commit.
    
    However, "make dist" and thus "make mydist" did a forced update
    to the files, updating them even if the only change was the
    POT-Creation-Date line. This had pros and cons: It made it clear
    that the .po file really is in sync with the recent strings in
    the package. On the other hand, it added noise in form of changed
    files in the source tree and distribution tarballs. It can be
    ignored with something like "diff -I'^"POT-Creation-Date: '" but
    it's still a minor annoyance *if* there's not enough value in
    having the most recent timestamp.
    
    Setting DIST_DEPENDS_ON_UPDATE_PO = no means that such forced
    update won't happen in "make dist" anymore. However, the "mydist"
    target will use xz.pot-update target which is the same target that
    is run when xz.pot doesn't exist at all yet. Thus "mydist" will
    ensure that the translations are up to date, without noise from
    changes that would affect only the POT-Creation-Date line.
    
    Note that po4a always uses msgmerge with --update, so POT-Creation-Date
    in the man page translations is never the only change in .po files.
    In that sense this commit makes the message translations behave more
    similarly to the man page translations.
    
    Distribution tarballs will still have non-reproducible POT-Creation-Date
    in po/xz.pot and po4a/xz-man.pot but those are just two files. Even they
    could be made reproducible from a Git timestamp if desired.

 Makefile.am | 3 ++-
 po/Makevars | 6 +++++-
 2 files changed, 7 insertions(+), 2 deletions(-)

commit 4beba1cd62d7f8f7a6f1e899b68292d94c53b599
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-28 21:10:33 +0300

    po4a/update-po: Disable wrapping in .pot and .po files
    
    The .po files from the Translation Project come with unwrapped
    strings so this matches it.
    
    This may reduce the noise in diffs too. When the beginning of
    a paragraph had changed, the rest of the lines got rewrapped
    in msgsid. Now it's just one very long line that changes when
    a paragraph has been edited.
    
    The --add-location=file option was removed as redundant. The line
    numbers don't exist in the .pot file due to --porefs file and thus
    they cannot get copied to the .po files either.

 po4a/update-po | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

commit b14c130a58a649f9a73392eeb122cb252327c569
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-28 18:36:53 +0300

    Update contact info in README

 README | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

commit 75f5f2e014b0ee646963f36bc6a9c840fb272353
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-28 13:25:07 +0300

    Translations: Use --package-name=xz-man with po4a
    
    This is to match reality. See the added comment.

 po4a/update-po | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit eb217d016cfbbba1babc19a61095b3ea25898af6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-28 13:03:40 +0300

    Translations: Omit --package-name from po/Makevars
    
    This is closer to the reality in the po/*.po files.

 po/Makevars | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit d28a4b2520adeeaa1b9e921bf42c7c1f36552c06
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-27 17:45:51 +0300

    license-check.sh: Use '--' with slightly untrusted filenames
    
    Names from git ls-files should be safe but if one runs it on
    a tree without the .git dir and there are extra files, it's
    safer to have the end of arguments marked with '--'.

 build-aux/license-check.sh | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit fda0ec862a34094cf23fc25d0e0a95858c3a3ab5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-27 17:41:37 +0300

    license-check.sh: Use xargs -0 instead of -d
    
    Neither are in POSIX but -0 is much more portable in practice.
    
    Despite the old comment, the grep usage should be portable already.

 build-aux/license-check.sh | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

commit 9114267038deaecf4832a5cacb5acbe6591ac839
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-28 01:17:45 +0300

    Translations: Omit man page line numbers from .pot and .po files

 po4a/update-po | 5 +++++
 1 file changed, 5 insertions(+)

commit 093490b58271e9424ce38a7b1b38bcf61b9c86c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-28 01:06:30 +0300

    Translations: Use the xgettext option --add-location=file

 po/Makevars | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit fccebe2b4fd513488fc920e4dac32562ed3c7637
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-28 00:43:53 +0300

    Translations: Use the msgmerge option --add-location=file
    
    This way the PO file diffs are less noisy but the locations of the
    strings are still present at file level, just without line numbers.
    
    The option is available since gettext 0.19 (2014).
    configure.ac requires 0.19.6.

 po/Makevars | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f361d9ae85707a87eb28db400eb7229cec103d58
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-27 12:22:08 +0300

    Build: Use $(SHELL) instead of sh to run scripts in Makefile.am

 Makefile.am | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit a26dece34793a09aac2476f954d162d03e9cf62b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-23 17:25:13 +0300

    Translations: Change the home page URLs in man page translations
    
    Since the source strings have changed, these would get marked as
    fuzzy and the original string would be used instead. The original
    and translated strings are identical in this case so it wouldn't
    matter. But patching the translations helps still because then
    po4a will show the correct translation percentage.

 po4a/de.po    | 8 ++++----
 po4a/fr.po    | 4 ++--
 po4a/ko.po    | 4 ++--
 po4a/pt_BR.po | 4 ++--
 po4a/ro.po    | 8 ++++----
 po4a/uk.po    | 8 ++++----
 6 files changed, 18 insertions(+), 18 deletions(-)

commit 24387c234b4eed1ef9a7eaa107391740b4095568
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-23 15:15:18 +0300

    CMake: Add manual support for 32-bit x86 assembly files
    
    One has to pass -DENABLE_X86_ASM=ON to cmake to enable the
    CRC assembly code. Autodetection isn't done. Looking at
    CMAKE_SYSTEM_PROCESSOR might not work as it comes from uname
    unless cross-compilation is done using a CMake toolchain file.
    
    On top of this, if the code is run on modern processors that support
    the CLMUL instruction, then the C code should be faster (but then
    one should also be using a x86-64 build if possible).

 CMakeLists.txt | 34 +++++++++++++++++++++++++++++++---
 1 file changed, 31 insertions(+), 3 deletions(-)

commit 0fb3c9c3f684f5a25bd425ed079a20a79f0c969d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-23 14:26:45 +0300

    CMake: Rename USE_DOXYGEN to ENABLE_DOXYGEN
    
    It's more consistent with the other option() uses.

 CMakeLists.txt | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 6bbec3bda02bf87d24fa095074456e723589921f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-22 15:21:53 +0300

    Mention license-check.sh in COPYING

 COPYING | 6 ++++++
 1 file changed, 6 insertions(+)

commit 62733592a1cc6f0b41f46ef52e06d1a6fe1ff38a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-22 15:21:53 +0300

    Use more confident language in COPYING

 COPYING | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit a119a4209e8827e1d7c2cfd30cb9f5a9b76f9dff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-22 15:21:53 +0300

    Build: Run license-check.sh in "mydist" and "dist-hook"
    
    In mydist the point is to check using the file list from the Git
    repository. In dist-hook it is to check that the TARBALL_IGNORE
    patterns work when the .git dir or the "git" command aren't available.
    
    Refuse to create a distribution tarball if license issues are found.

 Makefile.am | 2 ++
 1 file changed, 2 insertions(+)

commit f3434ecfcb45154508752986f4fc670b8f0555dc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-22 15:21:53 +0300

    Add build-aux/license-check.sh
    
    This helps in spotting files that lack SPDX license identifier
    and which haven't been explicitly white listed either. The script
    requires the .git directory to be present as only the files that
    are in the Git repository are checked.
    
    XZ Utils isn't FSFE REUSE compliant for now.

 Makefile.am                |   1 +
 build-aux/license-check.sh | 174 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 175 insertions(+)

commit 9ae2ebc1e504a1814b0788de95fb5c58c0328dde
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-29 17:16:38 +0300

    Add SPDX license identifiers to files under tests/ossfuzz

 tests/ossfuzz/Makefile                          | 2 ++
 tests/ossfuzz/config/fuzz_decode_alone.options  | 2 ++
 tests/ossfuzz/config/fuzz_decode_stream.options | 2 ++
 tests/ossfuzz/config/fuzz_encode_stream.options | 2 ++
 tests/ossfuzz/config/fuzz_lzma.dict             | 2 ++
 tests/ossfuzz/config/fuzz_xz.dict               | 2 ++
 6 files changed, 12 insertions(+)

commit 9000d70eb9815bd7f43ffddc1c3316c507aa0e05
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-29 17:16:06 +0300

    Add SPDX license identifier to .codespellrc

 .codespellrc | 2 ++
 1 file changed, 2 insertions(+)

commit 903c16fcfa5bfad0cdb2a7383d941243bcb12e76
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-22 15:12:09 +0300

    Move entries po4a/.gitignore to the top level .gitignore
    
    The po4a directory is in EXTRA_DIST and thus all files there
    are included in the package. .gitignore doesn't belong in the
    package so keep that file out of the po4a directory.

 .gitignore      | 4 ++++
 po4a/.gitignore | 3 ---
 2 files changed, 4 insertions(+), 3 deletions(-)

commit 56f1d5ed68e84ba5dfa328ea2291b8f46c995125
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-20 16:55:00 +0300

    Tests: Make the config.h grep patterns Meson compatible
    
    Now the test scripts detect both
    
        #define HAVE_DECODER_ARM
        #define HAVE_DECODER_ARM 1
    
    as support for the ARM filter without confusing it with these:
    
        #define HAVE_DECODER_ARM64
        #define HAVE_DECODER_ARM64 1
    
    Previously only the ones ending with " 1" were accepted for
    the macros where this kind of confusion was possible.
    
    This should help with Meson support because Meson's built-in
    features produce config.h entries that are either
    
        #define FOO 1
        #define FOO 0
    
    or:
    
        #define FOO
        #undef FOO
    
    The former method has a benefit that one can use "#if FOO" and -Wundef
    will catch if a #define is missing (for example, it helps catching
    typos). But XZ Utils has to use the latter since it has been
    convenient with Autoconf's default behavior.[*] While it's easy to
    emulate the Autoconf style (#define FOO 1 vs. no #define at all)
    in Meson, it results in clumsy code. Thus it's better to change
    the few places in the tests where this difference matters.
    
    [*] While most checks in Autoconf default to the second style above,
        a few things use the first style (like AC_CHECK_DECLS). The mix
        of both styles is the most confusing as one has to remember which
        macro needs #ifdef and which #if. Currently HAVE_VISIBILITY is
        only such config.h entry that is 1 or 0. It comes unmodified
        from Gnulib's visibility.m4.

 tests/test_compress.sh | 4 ++--
 tests/test_files.sh    | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 9d997d6f9d4f042412e45c7b7a23a14ad2e4f9aa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-20 16:55:00 +0300

    CMake: Add comments

 tests/tests.cmake | 2 ++
 1 file changed, 2 insertions(+)

commit d35368b33e54bad2f566df99fac29ffea38e34de
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-20 16:55:00 +0300

    CMake: Remove the note that some tests aren't run
    
    They are now in the common build configurations.

 CMakeLists.txt | 2 --
 1 file changed, 2 deletions(-)

commit dc232d584619b2819a9c52d6ad5d8b5d56b392ba
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-20 16:55:00 +0300

    CMake: Add support for test_files.sh

 tests/tests.cmake | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

commit a7e9230af9d1f87f474fe38886eb977d4149dc9b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-20 16:55:00 +0300

    Tests: Make test_files.sh more flexible
    
    Add a new optional argument to specify the directory of the xz and
    xzdec executables.
    
    If ../config.h doesn't exist, assume that all encoders and decoders
    are available.

 tests/test_files.sh | 18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

commit b40e6efbb48d740b9b5b303e59e344801cbb5bd8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-20 16:55:00 +0300

    CMake: Add support for test_compress.sh tests

 tests/tests.cmake | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

commit ac3222d2cb1ff3a15eb6d58f9ea9bc78e8bc3bb2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-20 16:55:00 +0300

    Tests: Make test_compress.sh more flexible
    
    Add a new optional second argument: directory of the xz and xzdec
    executables. This is need with the CMake build where the binaries
    end up in the top-level build directory.
    
    If ../config.h doesn't exist, assume that all encoders and decoders
    are available. This will make this script usable from CMake in the
    most common build configuration.
    
    NOTE: Since the existence of ../config.h is checked, the working
    directory of the test script must be a subdir in the build tree!
    Otherwise ../config.h would look outside the build tree.
    
    Use the default check type instead of forcing CRC32 or CRC64.
    Now the script doesn't need to check if CRC64 is available.

 tests/test_compress.sh | 41 +++++++++++++++++++++++++++++------------
 1 file changed, 29 insertions(+), 12 deletions(-)

commit 006040b29c83104403621e950ada0c8956c56b3d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-20 16:55:00 +0300

    CMake: Prepare to support the test_*.sh tests
    
    This is a bit hacky since the scripts grep config.h to know which
    features were built but the CMake build doesn't create config.h.
    So instead those test scripts will be run only when all relevant
    features have been enabled.

 tests/tests.cmake | 49 +++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 49 insertions(+)

commit 6167607a6ea72fb74eefb943c4566e3cab528cd2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-20 16:55:00 +0300

    Tests: test_suffix.sh: Add a comment

 tests/test_suffix.sh | 3 +++
 1 file changed, 3 insertions(+)

commit 4e9023857d287f624562156b60dc23d2b64c0f10
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-18 00:34:07 +0300

    Fix typos
    
    Thanks to xx on #tukaani.

 src/common/mythread.h                      | 2 +-
 src/common/tuklib_integer.h                | 2 +-
 src/liblzma/api/lzma/base.h                | 2 +-
 src/liblzma/common/filter_buffer_decoder.c | 2 +-
 src/liblzma/common/filter_common.c         | 2 +-
 src/scripts/xzgrep.in                      | 2 +-
 6 files changed, 6 insertions(+), 6 deletions(-)

commit b14d08fbbc254485ace9ccfe7908674f608a62ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-18 00:23:52 +0300

    liblzma: Fix white space
    
    Thanks to xx on #tukaani.

 src/liblzma/simple/simple_coder.h | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 9f1a6d6f9a258886933a22239a5b81af34b28199
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-15 23:14:17 +0300

    Build: Temporarily disable CRC CLMUL to silence OSS Fuzz
    
    The code makes aligned 16-byte reads which may read up to 15 bytes
    before the beginning or past the end of the buffer if the buffer
    is misaligned. The unneeded bytes are then ignored. It cannot cross
    page boundaries and thus cannot cause access violations.
    
    This inherently trips address sanitizer which was already disabled
    with __attribute__((__no_sanitize_address__)). However, it also
    trips memory sanitizer if the extra bytes are uninitialized because
    memory sanitizer doesn't see that those bytes then get ignored by
    byte shuffling in the xmm registers.
    
    The plan is to change the code so that all sanitizers pass but it's
    not finished yet (performance shouldn't get worse) so as a temporary
    measure to keep OSS Fuzz happy, the CLMUL CRC is now disabled even
    though I think think the code is fine to use (and easy enough to review
    the memory accesses in it too).

 configure.ac | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 142e670a413a7bce1a2647f1cf1f33f8ee2dbe88
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-13 17:15:04 +0300

    xz: Document the static function get_chains_memusage()

 src/xz/coder.c | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

commit 78e984399a64bfee5d11e7308e0bdbc1006db2ca
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-13 17:07:22 +0300

    xz: Rename filters_memusage_max() to get_chains_memusage()

 src/xz/coder.c | 14 ++++++--------
 1 file changed, 6 insertions(+), 8 deletions(-)

commit 54c3db0a83d3e67d89aba92a0957f2dce9b111a7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-13 17:04:05 +0300

    xz: Rename filter_memusages to chains_memusages

 src/xz/coder.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit d9e1ae79ec90d6a7eafeaceaf0ece4f0c83d4417
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 22:26:30 +0300

    xz: Simplify the memory usage scaling code
    
    This is closer to what it was before the --filtersX support was added,
    just extended to support for scaling all filter chains. The method
    before this commit was an extended version of the original too but
    it was done in a more complex way for no clear reason. In case of
    an error, the complex version printed fewer informative messages
    (a good thing) but it's not a sigificant benefit.
    
    In the limit is too low even for single-threaded mode, the required
    amount of memory is now reported like in 5.4.x instead of like in
    5.5.1alpha - 5.6.1 which showed the original non-scaled usage. It
    had been a FIXME in the old code but it's not clear what message
    makes the most sense.
    
    Fixes: 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a

 src/xz/coder.c | 163 ++++++++++++++++++++-------------------------------------
 1 file changed, 57 insertions(+), 106 deletions(-)

commit 0ee56983d198b776878432703de664049b1be32e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-13 12:14:00 +0300

    xz: Edit comments

 src/xz/coder.h | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

commit ec82a49c3553f7206104582dbfb8b64fa433b491
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-13 12:03:51 +0300

    xz: Rename chain_idx to chain_num

 src/xz/coder.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit a731a6993c34bbbd55abaf9c166718682b1da24f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 22:29:11 +0300

    xz: Edit coding style

 src/xz/coder.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 32eb176b89243fce3112347fe43a8ad14a9fd2be
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 22:16:05 +0300

    xz: Edit comments
    
    Fixes: 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a

 src/xz/coder.c | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

commit b90339f4daa510d2b1b8c550f855a99667f1d004
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 21:57:49 +0300

    xz: Fix grammar in a comment
    
    Fixes: cb3111e3ed84152912b5138d690c8d9f00c6ef02

 src/xz/coder.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 4c0bdaf13d651b22ba13bd93f8379724d6ccdc13
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 21:46:56 +0300

    xz: Rename filter_memusages to encoder_memusages

 src/xz/coder.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

commit b54aa023e0ec291b06e976e5f094ab0549e7b09b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 21:42:05 +0300

    xz: Edit coding style

 src/xz/coder.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 49f67d3d3f42b640a7dfc4ca04c8934f658e10ce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 21:31:02 +0300

    xz: Rename filters_index to chain_num
    
    The reason is the same as in bd0782c1f13e52cd0fd8415208e30e47004a4c68.

 src/xz/args.c  | 8 ++++----
 src/xz/coder.c | 8 ++++----
 src/xz/coder.h | 2 +-
 3 files changed, 9 insertions(+), 9 deletions(-)

commit ff9e8b3d069ecfa52ec43dcdb198542d1692a492
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 21:22:43 +0300

    xz: Replace a few uint32_t with "unsigned" to reduce the number of casts
    
    These hold only tiny values.

 src/xz/args.c  |  2 +-
 src/xz/coder.c | 17 ++++++++---------
 src/xz/coder.h |  2 +-
 3 files changed, 10 insertions(+), 11 deletions(-)

commit b5e6c1113b1ba02c282bd9163eccdb521c937a78
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 21:10:45 +0300

    xz: Rename filters_used_mask to chains_used_mask
    
    The reason is the same as in bd0782c1f13e52cd0fd8415208e30e47004a4c68.

 src/xz/coder.c | 30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

commit 32500dfaadae2ea36fda2e17b49ae7d9ac1acf52
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 17:14:43 +0300

    xz: Move the setting of "check" in coder_set_compression_settings()
    
    It's more logical to do it in the beginning instead of in the middle
    of the filter chain handling.
    
    Fixes: d6af7f347077b22403133239592e478931307759

 src/xz/coder.c | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

commit ad146b1f42bbb678175a503a45ce525e779f9b8b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 17:09:17 +0300

    xz: Rename "filters" to "chains"
    
    The convention is that
    
        lzma_filter filters[LZMA_FILTERS_MAX + 1];
    
    contains the filters of a single filter chain.
    It was so here as well before the commit
    d6af7f347077b22403133239592e478931307759.
    It changes "filters" to a ten-element array of filter chains.
    It's clearer to call this array-of-arrays "chains".
    
    This also renames "filter_idx" to "chain_idx" which is used
    as an index as in chains[chain_idx].

 src/xz/coder.c | 68 +++++++++++++++++++++++++++++-----------------------------
 1 file changed, 34 insertions(+), 34 deletions(-)

commit 5a4ae4e4d0105404184e9a82ee08f94e1b7783e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 16:56:15 +0300

    xz: Clean up a comment

 src/xz/coder.c | 9 +++------
 1 file changed, 3 insertions(+), 6 deletions(-)

commit 2de80494ed9a4dc7db395a32a5efb770ce769804
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 16:52:09 +0300

    xz: Add clarifying assertions

 src/xz/coder.c | 4 ++++
 1 file changed, 4 insertions(+)

commit 1eaad004bf7748976324672db028e34f42802e61
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-10 20:23:33 +0300

    xz: Add a clarifying assertion
    
    Fixes: 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a

 src/xz/coder.c | 1 +
 1 file changed, 1 insertion(+)

commit 605094329b986244833c967c04963cacc41a868d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 16:47:17 +0300

    xz: Clarify a comment

 src/xz/coder.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 8fac2577f2dbb9491afd8500f60d004c9071df3b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 16:28:25 +0300

    xz: Use the info collected in parse_block_list()
    
    This is slightly simpler and it avoids looping through
    the opt_block_list array.

 src/xz/coder.c | 95 ++++++++++++++++++++++++----------------------------------
 1 file changed, 39 insertions(+), 56 deletions(-)

commit 81d350dab864b985b740742772f3b132d4c52914
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 15:48:45 +0300

    xz: Remember the filter chains and the largest Block in parse_block_list()

 src/xz/args.c  | 18 ++++++++++++++++++
 src/xz/coder.c |  2 ++
 src/xz/coder.h | 13 +++++++++++++
 3 files changed, 33 insertions(+)

commit 46ab56968f7dfdac187710a1223659d832fa1565
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 15:38:48 +0300

    xz: Update a comment and initialization of filters_used_mask

 src/xz/coder.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit e89293a0baeb8663707c6b4a74fbb310ec698a8f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 15:08:10 +0300

    xz: parse_block_list: Edit integer type casting

 src/xz/args.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit 87011e40c168255cd2edea129ee68c901770603b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-12 14:51:37 +0300

    xz: Make filter_memusages a local variable

 src/xz/coder.c | 35 +++++++++++++++++++++--------------
 1 file changed, 21 insertions(+), 14 deletions(-)

commit 347b412a9374e0456bef9da0d7d79174c0b6f1a5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-10 20:33:08 +0300

    xz: Remove unused code and simplify
    
    opt_mode == MODE_COMPRESS isn't possible when HAVE_ENCODERS isn't
    defined. Thus, when *encoding*, the message about *decoder* memory
    usage is possible to show only when both encoder and decoder have
    been built.
    
    Since the message is shown only at V_DEBUG, skip the memusage
    calculation if verbosity level isn't high enough.
    
    Fixes: 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a

 src/xz/coder.c | 16 ++++------------
 1 file changed, 4 insertions(+), 12 deletions(-)

commit 31358c057c9de9d6aba96bae112b2d17942de7cb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-10 20:22:58 +0300

    xz: Fix integer type from uint64_t to uint32_t
    
    lzma_options_lzma.dict_size is uint32_t so use it here too.
    
    Fixes: 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a

 src/xz/coder.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 3f71e0f3a118e1012526f94fd640a626d30cb599
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-08 21:40:07 +0300

    debug/translation.bash: Remove an outdated test command
    
    Since 5.3.5beta, "xz --lzma2=mf=bt4,nice=2" works even though bt4 needs
    at least nice=4. It is rounded up internally by liblzma when needed.
    
    Fixes: 5cd9f0df78cc4f8a7807bf6104adea13034fbb45

 debug/translation.bash | 1 -
 1 file changed, 1 deletion(-)

commit b05a516830095a0e1937aeb31c937fb0400408b6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-07 20:41:28 +0300

    Fix the date of NEWS for 5.4.5

 NEWS | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 6d336aeb97b69c496ddc626af403f6f21c753658
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-07 16:21:15 +0300

    Build: Update visibility.m4 from Gnulib
    
    This fixes the syntax of the "serial" line and renames
    a temporary variable.

 m4/visibility.m4 | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

commit ab51e8ee610e2a893906859848f93d5cb0d5ba83
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-07 15:05:21 +0300

    po4a/update-po: Delete the *.po.authors files
    
    These are temporary files that are needed only when running po4a.
    The top-level Makefile.am puts the whole po4a directory into
    distribution tarball (it's simpler) so deleting these temporary
    files is needed to prevent them from getting into tarballs.

 po4a/update-po | 4 ++++
 1 file changed, 4 insertions(+)

commit e4780244a17420cc95d5498cd6e02ad10eac6e5f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-07 13:12:17 +0300

    xz: Edit comments and coding style

 src/xz/coder.c | 25 ++++++++++++-------------
 1 file changed, 12 insertions(+), 13 deletions(-)

commit fe4d8b0c80eaeca3381be302eeb89aba871a7e7c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-06 23:08:22 +0300

    xz: Omit an incorrect comment
    
    It likely was a leftover from a development version of the code.
    
    Fixes: 183819bfd9efac8c184d9bf123325719b7eee30f

 src/xz/coder.c | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

commit 9bef5b8d17dd5e009d6a6b2becc2dc535da53937
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-06 23:04:31 +0300

    xz: Add braces to a for-statement and to an if-statement
    
    No functional changes.
    
    Fixes: 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a
    Fixes: 479fd58d60622331fcbe48fddf756927b9f80d9a

 src/xz/coder.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit de06b9f0c0a3f72569829ecadbc9c0a3ef099f57
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-06 23:00:09 +0300

    liblzma: Omit an unneeded array from the x86 filter
    
    Fixes: 6aa2a6deeba04808a0fe4461396e7fb70277f3d4

 src/liblzma/simple/x86.c | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

commit 7da488cb933fdf51cfc14cb5810beb0766224380
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-06 22:56:31 +0300

    CMake: Add test_suffix.sh to the tests

 tests/tests.cmake | 13 +++++++++++++
 1 file changed, 13 insertions(+)

commit a805594ed0b4cbf7b81aa28ff46a8ab3c83c6876
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-06 22:55:54 +0300

    Test: Add CMake support to test_suffix.sh
    
    It needs to find the xz executable from a different directory
    and work without config.h.

 tests/test_suffix.sh | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

commit 50e19489387774bab3c4a988397d0d9c7a142a46
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-06 20:45:34 +0300

    Update INSTALL about MINIX 3
    
    The latest stable is 3.3.0 and it's from 2014.
    Don't mention the older versions in INSTALL.
    3.3.0 ships with Clang already.
    
    Testing with 3.4.0beta6 shows that tuklib_physmem
    works too so omit comments about that from INSTALL.
    Visibility warnigns weren't a problem either.
    
    Thus it's enough to mention the need for --disable-threads
    as configure doesn't autodetect the lack of pthreads.

 INSTALL | 20 +++++++-------------
 1 file changed, 7 insertions(+), 13 deletions(-)

commit 68d18aea1422a2b86b98b71d0b019233d84e01b0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-02 23:00:16 +0300

    Windows: Remove the "doc/api" line from README-Windows.txt
    
    Fixes: 252aa1d67bc015eeba462803ab72edeb7744d864

 windows/README-Windows.txt | 2 --
 1 file changed, 2 deletions(-)

commit 8ede961374613aa302a13571d662cfaea1cf91f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-05-02 22:59:04 +0300

    Build: Don't copy doc/api from source tree to distribution tarball
    
    It was copied if it existed. This was intentional when autogen.sh
    still built liblzma API docs with Doxygen.
    
    Fixes: d3a77ebc04bf1db8d52de2d9b0f07877bc4fd139

 Makefile.am | 5 -----
 1 file changed, 5 deletions(-)

commit 9a6761aa35ed84d30bd2fda2333a4fdf3f46ecdc
Author: Sam James <sam@gentoo.org>
Date:   2024-05-02 13:26:40 +0100

    ci: add SPDX headers
    
    I've checked over each of these and they're straightforward applications
    of the relevant Github Actions.

 .github/workflows/freebsd.yml | 2 ++
 .github/workflows/netbsd.yml  | 2 ++
 .github/workflows/openbsd.yml | 2 ++
 3 files changed, 6 insertions(+)

commit 81efe6119f86e3274e512c9eca5ec22b2196c2b3
Author: Yaroslav Halchenko <debian@onerussian.com>
Date:   2024-03-29 14:37:24 -0400

    codespell: Ignore the THANKS file and debbugs.gnu.org URL
    
    This way "codespell -i 0" is silent.
    
    This is the first commit from
    https://github.com/tukaani-project/xz/pull/93
    with trivial edits by Lasse Collin.

 .codespellrc | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 905bfc74fe2670fd9c39014803017ab53d325401
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-30 14:37:11 +0300

    Add .gitattributes to clean up git-archive output

 .gitattributes | 7 +++++++
 1 file changed, 7 insertions(+)

commit 3334c71d3d4294a4f6569df3ba9bcf2443dfa501
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 12:11:09 +0300

    xzdec: Support Landlock ABI version 4
    
    This was added to xz in 02e3505991233901575b7eabc06b2c6c62a96899
    but I forgot to do the same in xzdec.
    
    The Landlock sandbox in xzdec could be stricter as now it's
    active only for the last file being decompressed. In xz,
    read-only sandbox is used for multi-file case. On the other hand,
    xz doesn't go to the strictest mode when processing the last file
    when more than one file was specified; xzdec does.

 src/xzdec/xzdec.c | 18 ++++++++++++++----
 1 file changed, 14 insertions(+), 4 deletions(-)

commit 278563ef8f2b8d98d7f2c85e1a64ec1bc21d26d8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-30 22:22:45 +0300

    liblzma: Fix incorrect function type error from sanitizer
    
    Clang 17 with -fsanitize=address,undefined:
    
        src/liblzma/common/filter_common.c:366:8: runtime error:
            call to function encoder_find through pointer to incorrect
            function type 'const lzma_filter_coder *(*)(unsigned long)'
        src/liblzma/common/filter_encoder.c:187: note:
            encoder_find defined here
    
    Use a wrapper function to get the correct type neatly.
    This reduces the number of casts needed too.
    
    This issue could be a problem with control flow integrity (CFI)
    methods that check the function type on indirect function calls.
    
    Fixes: 3b34851de1eaf358cf9268922fa0eeed8278d680

 src/liblzma/common/filter_decoder.c | 15 ++++++++++++---
 src/liblzma/common/filter_encoder.c | 17 +++++++++++++----
 2 files changed, 25 insertions(+), 7 deletions(-)

commit 77c8f60547decefca8f2d0c905d9c708c38ee8ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-30 21:41:11 +0300

    xz: Avoid arithmetic on a null pointer
    
    It's undefined behavior. The result wasn't ever used as it occurred
    in the last iteration of a loop.
    
    Clang 17 with -fsanitize=address,undefined:
    
        $ src/xz/xz --block-list=123
        src/xz/args.c:164:12: runtime error: applying non-zero offset 1
            to null pointer
    
    Fixes: 88ccf47205d7f3aa314d358c72ef214f10f68b43
    Co-authored-by: Sam James <sam@gentoo.org>

 src/xz/args.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit 64503cc2b76a388ced4ec5f68234a07f0dcddcd5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 20:42:00 +0300

    CMake: Support building liblzma API docs using Doxygen
    
    This is disabled by default to match the default in Autotools.
    Use -DUSE_DOXYGEN=ON to enable Doxygen usage.
    
    This uses the update-doxygen script, thus this is under if(UNIX)
    although Doxygen itself can run on Windows too.

 CMakeLists.txt | 40 +++++++++++++++++++++++++++++++---------
 1 file changed, 31 insertions(+), 9 deletions(-)

commit 0a7f5a80d8532a1d8cfa0a902c9d1ad7651eca37
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-20 23:36:39 +0300

    CMake: List API headers in LIBLZMA_API_HEADERS variable
    
    This way the same list will be usable in more than one location.

 CMakeLists.txt | 21 ++++++++++++---------
 1 file changed, 12 insertions(+), 9 deletions(-)

commit 541406bee3f09e9813103c6406b10fc6ab2e0d30
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 15:16:42 +0300

    PACKAGERS: Document the optional Doxygen usage
    
    Also add a note that packagers should check the licensing
    of the Doxygen output.

 PACKAGERS | 19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

commit e21efdf96f39378fe417479f89e97046680406f5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 17:47:09 +0300

    Build: Add --enable-doxygen to generate and install API docs
    
    It requires Doxygen. This option is disabled by default.

 INSTALL                     |  6 ++++++
 configure.ac                | 10 +++++++++-
 src/liblzma/api/Makefile.am | 19 +++++++++++++++++++
 3 files changed, 34 insertions(+), 1 deletion(-)

commit 0ece09a575d7e542bda8825808ddd6cf7de8cc4b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 15:15:17 +0300

    Doxygen: update-doxygen: Support out-of-tree builds
    
    Also, now $0 is used to refer to the script itself.

 doxygen/update-doxygen | 110 ++++++++++++++++++++++++++++++-------------------
 1 file changed, 68 insertions(+), 42 deletions(-)

commit 2c519f641f266fd897edf680827d9c905f411440
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-28 21:08:00 +0300

    Doxygen: Simplify Doxyfile and add SPDX license identifier
    
    This omits all comments and a few non-default options that weren't
    needed. Now it contains no copyrighted content from Doxygen itself.

 doxygen/Doxyfile | 2698 +-----------------------------------------------------
 1 file changed, 25 insertions(+), 2673 deletions(-)

commit bdba39a57530d11b88440df8024002be3d09e4a1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 15:14:02 +0300

    Doxygen: Don't strip JavaScript anymore
    
    The stripping method worked well with Doxygen 1.8 and 1.9 but
    it doesn't work with Doxygen 1.10 anymore. Since we won't ship
    pre-generated liblzma API docs anymore, the extra bloat and
    extra license info of the JavaScript files won't affect the
    upstream source package anymore.

 doxygen/update-doxygen | 21 ---------------------
 1 file changed, 21 deletions(-)

commit d3a77ebc04bf1db8d52de2d9b0f07877bc4fd139
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 17:26:41 +0300

    Build: Remove old Doxygen rules from top-level Makefile.am

 Makefile.am | 12 ------------
 1 file changed, 12 deletions(-)

commit fd7faa4c338a42a6a40e854b837d285ae2e8c609
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 15:10:06 +0300

    Update COPYING to match the autogen.sh and mydist changes

 COPYING | 11 -----------
 1 file changed, 11 deletions(-)

commit b2bc55d8a0a9f2f59bfd4302067300e650f6baa3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 17:23:43 +0300

    Build: Don't run update-doxygen as part of "make mydist"

 Makefile.am | 1 -
 1 file changed, 1 deletion(-)

commit e9be74f5b129fe8a5388d588e68b1b7f5168a310
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 15:09:48 +0300

    autogen.sh: Don't generated Doxygen docs anymore

 autogen.sh | 18 +++---------------
 1 file changed, 3 insertions(+), 15 deletions(-)

commit 252aa1d67bc015eeba462803ab72edeb7744d864
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 17:41:36 +0300

    windows/build.bash: Omit Doxygen docs from the package
    
    They will be omitted from the source tarball and I don't want
    to make Doxygen a dependency of build.bash.

 windows/build.bash | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 634095364d87444d62d8ec54c134c0cd4705f5d7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 14:14:47 +0300

    README: Don't mention PDF man pages anymore

 README | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit dc684bf76ea23574ee9d88382057381e04e6089a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 14:10:39 +0300

    Build: Omit PDF man pages from the package
    
    pdf-local rule was added to create the PDFs still with "make pdf".
    The install rules are missing but that likely doesn't matter at all.

 Makefile.am | 29 +++++++++++++++++++----------
 1 file changed, 19 insertions(+), 10 deletions(-)

commit e3531ab4125cbd5c01ebd3200791350960547189
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 13:54:39 +0300

    windows/build.bash: Don't copy PDF man pages to the package

 windows/README-Windows.txt | 2 +-
 windows/build.bash         | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit 710a4573ef2cbd19c66318c3b2d1388e418e26c7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-28 01:34:50 +0300

    Tests: test_index: Fix failures when features are disabled
    
    Fixes: cd88423e76d54eb72aea037364f3ebb21f122503

 tests/test_index.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

commit aaff75c3486c4489ce88b0efb36b41cf138af7c3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-20 17:09:11 +0300

    CMake: Keep the build working if the "tests" directory is missing
    
    This moves the tests section as is from CMakeLists.txt into
    tests/tests.cmake. CMakeLists.txt now includes tests/tests.cmake
    if the latter file exists.
    
    Now it's possible to delete the whole "tests" directory and
    building with CMake will still work normally, just without
    the tests. This way the tests are readily available for those
    who want them, and those who won't run the tests anyway have
    a straightforward way to ensure that nothing from the "tests"
    directory can affect the build process.

 CMakeLists.txt    | 76 ++---------------------------------------------
 tests/Makefile.am |  1 +
 tests/tests.cmake | 88 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 92 insertions(+), 73 deletions(-)

commit a5f2aa5618fe9183706c9c514c3067985f6c338b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-20 13:12:50 +0300

    Tests: Remove x86 and SPARC BCJ tests
    
    These are very old but the exact test file isn't easy to reproduce
    as it was compiled from a short C program (bcj_test.c) long ago.
    These tests weren't very good anyway, just a little better than nothing.

 tests/Makefile.am                      |   7 ----
 tests/bcj_test.c                       |  64 ---------------------------------
 tests/compress_prepared_bcj_sparc      | Bin 1240 -> 0 bytes
 tests/compress_prepared_bcj_x86        | Bin 1388 -> 0 bytes
 tests/files/README                     |   8 -----
 tests/files/good-1-sparc-lzma2.xz      | Bin 612 -> 0 bytes
 tests/files/good-1-x86-lzma2.xz        | Bin 716 -> 0 bytes
 tests/test_compress_prepared_bcj_sparc |   4 ---
 tests/test_compress_prepared_bcj_x86   |   4 ---
 9 files changed, 87 deletions(-)

commit d879686469c9c4bf2a7c0bb6420ebe4530fc8f07
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 18:30:40 +0300

    Tests: test_index: Edit a misleading test

 tests/test_index.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit 612005bbdb0dea9dc09e9e2e9cc16a15c1480acd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 16:46:01 +0300

    Tests: test_index: Use minimal values to test integer overflow

 tests/test_index.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 4ad88b2544c2aaf8de8f38af54587098cbe66c1d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 15:13:39 +0300

    Tests: test_index: Test lzma_index_buffer_decode() more

 tests/test_index.c | 29 ++++++++++++++++++++++++++---
 1 file changed, 26 insertions(+), 3 deletions(-)

commit 575b11b0d291e66c5fce31ce7a72f11436d57c83
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 15:08:29 +0300

    Tests: test_index: Test that *i = NULL is done on LZMA_PROG_ERROR
    
    On LZMA_DATA_ERROR from lzma_index_buffer_decode(), *i = NULL was
    already done but this adds a test for that case too.

 tests/test_index.c | 31 +++++++++++++++++++++++++++----
 1 file changed, 27 insertions(+), 4 deletions(-)

commit 2c970debdb285823f01f75e875561d893345ac2b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 15:01:25 +0300

    Tests: test_index: Test lzma_index_buffer_encode() with empty output buf

 tests/test_index.c | 3 +++
 1 file changed, 3 insertions(+)

commit cd88423e76d54eb72aea037364f3ebb21f122503
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 14:59:55 +0300

    Tests: test_index: Replace if-statements with tuktest assertions

 tests/test_index.c | 22 +++++++++-------------
 1 file changed, 9 insertions(+), 13 deletions(-)

commit 7f865577a6224fbbb5f5ca52574b62ea8ac9bf51
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 14:56:16 +0300

    Tests: test_index: Make it clear that my_alloc() has no integer overflows
    
    liblzma guarantees that the product of the allocation size arguments
    will fit in size_t.
    
    Putting the pre-increment in the if-statement was clearly wrong
    although in practice it didn't matter here as the function is
    called only a couple of times.

 tests/test_index.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit 12313a3b6596cdcf012e180597f84d231f8730d3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 14:51:52 +0300

    Tests: test_index: Verify also iter.block.number_in_stream

 tests/test_index.c | 2 ++
 1 file changed, 2 insertions(+)

commit ad2654010d9d641ce1601beeff00630027e6bcd4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 14:51:06 +0300

    Tests: test_index: Check cases that aren't a multiple of 4 bytes

 tests/test_index.c | 33 +++++++++++++++++++++++++--------
 1 file changed, 25 insertions(+), 8 deletions(-)

commit 2524fcf2b68b662035437cee8edbe80067c0c240
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 14:40:25 +0300

    Tests: test_index: Edit comments and white space

 tests/test_index.c | 18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)

commit 71eed2520e2eecae89bade9dceea16e56cfa2ea0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-27 14:33:38 +0300

    liblzma: index_decoder: Fix missing initializations on LZMA_PROG_ERROR
    
    If the arguments to lzma_index_decoder() or lzma_index_buffer_decode()
    were such that LZMA_PROG_ERROR was returned, the lzma_index **i
    argument wasn't touched even though the API docs say that *i = NULL
    is done if an error occurs. This obviously won't be done even now
    if i == NULL but otherwise it is best to do it due to the wording
    in the API docs.
    
    In practice this matters very little: The problem can occur only
    if the functions are called with invalid arguments, that is,
    the calling application must already have a bug.

 src/liblzma/common/index_decoder.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

commit 0478473953f50716a2bc37b619b1c7dc2682b1ad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-26 18:25:18 +0300

    CMake: Bump maximum policy version to 3.29

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a607e2b40d23f7d998dbaba76692aa30b4c3d9d3
Author: Sam James <sam@gentoo.org>
Date:   2024-04-13 22:30:44 +0100

    ci: add NetBSD

 .github/workflows/netbsd.yml | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

commit 72c210336de26fb87a928160d025fa10a638d23b
Author: Sam James <sam@gentoo.org>
Date:   2024-04-13 23:49:26 +0100

    ci: add FreeBSD

 .github/workflows/freebsd.yml | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

commit b526ec2dbfb5889845ea60548c4f5b1f97d84ab2
Author: Sam James <sam@gentoo.org>
Date:   2024-04-13 23:16:08 +0100

    ci: add OpenBSD

 .github/workflows/openbsd.yml | 31 +++++++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)

commit c7ef767c49351743d8d011574abb9e200bf6b24f
Author: Sam James <sam@gentoo.org>
Date:   2024-04-15 05:53:01 +0100

    liblzma: outqueue: add header guard
    
    Reported by github's codeql.

 src/liblzma/common/outqueue.h | 5 +++++
 1 file changed, 5 insertions(+)

commit 55dcae3056d95cb2ddb8b560c12ba7596bc79f2c
Author: Sam James <sam@gentoo.org>
Date:   2024-04-15 05:53:56 +0100

    liblzma: easy_preset: add header guard
    
    Reported by github's codeql.

 src/liblzma/common/easy_preset.h | 5 +++++
 1 file changed, 5 insertions(+)

commit 4ffc60f32397371769b7d6b5e3ed8626292d58df
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-25 14:00:57 +0300

    tuklib_integer: Rename bswapXX to byteswapXX
    
    The __builtin_bswapXX from GCC and Clang are preferred when
    they are available. This can allow compilers to emit the x86 MOVBE
    instruction instead of doing a load + byteswap as two instructions
    (which would happen if the byteswapping is done in inline asm).
    
    bswap16, bswap32, and bswap64 exist in system headers on *BSDs
    and Darwin. #defining bswap16 on NetBSD results in a warning about
    macro redefinition. It's safest to avoid this namespace conflict
    completely.
    
    No OS supported by tuklib_integer.h uses byteswapXX names and
    a web search doesn't immediately find any obvious danger of
    namespace conflicts. So let's try these still-pretty-short names
    for the macros.
    
    Thanks to Sam James for pointing out the compiler warning on
    NetBSD 10.0.

 src/common/tuklib_integer.h        | 47 ++++++++++++++++++++------------------
 src/liblzma/check/crc32_fast.c     |  4 ++--
 src/liblzma/check/crc32_tablegen.c |  2 +-
 src/liblzma/check/crc64_fast.c     |  4 ++--
 src/liblzma/check/crc64_tablegen.c |  2 +-
 5 files changed, 31 insertions(+), 28 deletions(-)

commit 08ab0966a75b501aa7c717622223f0c13a113c75
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-24 01:20:26 +0300

    liblzma: API doc cleanups

 src/liblzma/api/lzma/container.h | 2 +-
 src/liblzma/api/lzma/index.h     | 6 +++---
 src/liblzma/api/lzma/vli.h       | 5 ++---
 3 files changed, 6 insertions(+), 7 deletions(-)

commit 3ac8a9bb4cccbee88350696dc9c645c48d77c989
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-23 16:35:33 +0300

    Tests: test_filter_str: Add a few assertions

 tests/test_filter_str.c | 4 ++++
 1 file changed, 4 insertions(+)

commit 26c69be80523b05c84dea86c47c4ddd9a10945d7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-23 16:35:08 +0300

    Tests: test_filter_str: Move one assertion and add a comment

 tests/test_filter_str.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 4f6af853bc99904efb8b6c28a0af7b81a8476c1b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-23 16:26:06 +0300

    Tests: test_filter_str: Tweak comments and white space

 tests/test_filter_str.c | 3 +++
 1 file changed, 3 insertions(+)

commit c92663aa1bd576e0615498a4189acf0df12e84b9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-23 16:25:22 +0300

    Tests: test_filter_str: Add missing RISC-V case
    
    Fixes: 89ea1a22f4ed3685b053b7260bc5acf6c75d1664

 tests/test_filter_str.c | 3 +++
 1 file changed, 3 insertions(+)

commit b0366df1d7ed26268101f9303a001c91c0806dfc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-22 22:23:32 +0300

    Tests: test_filter_str: Test *error_pos more thoroughly

 tests/test_filter_str.c | 77 ++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 76 insertions(+), 1 deletion(-)

commit 70d12dd069bb9bb0d6bb1c8fafc4e6f77780263d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-22 21:54:39 +0300

    liblzma: lzma_str_to_filters: Set *error_pos on all errors
    
    The API docs clearly say that if error_pos isn't NULL then *error
    is always set on any error. However, it wasn't touched if str == NULL
    or filters == NULL or unsupported flags were specified.
    
    Fixes: cedeeca2ea6ada5b0411b2ae10d7a859e837f203

 src/liblzma/common/string_conversion.c | 6 ++++++
 1 file changed, 6 insertions(+)

commit ed8e552395701fbf046027cebc8be4a6755b263f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-22 20:31:25 +0300

    liblzma: Clean up white space

 src/liblzma/lz/lz_encoder.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 2f06920f20b1ad63b7953dc09569e1d424998849
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-22 18:35:19 +0300

    Tests: test_filter_flags: Edit comments and style

 tests/test_filter_flags.c | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

commit b101e1d1dbc81577c0c9aa0cb89cf2e46a15eb82
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-22 16:39:44 +0300

    Tests: Fix C99/C11 compatibility when features are disabled
    
    The array could become empty and then the initializer would be
    simply {} which is allowed only in GNU-C and C23.

 tests/test_filter_flags.c | 18 ++++++++----------
 1 file changed, 8 insertions(+), 10 deletions(-)

commit f8f3a220ac8afcb8cb2812917d3b77e00c2eab0d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-21 20:32:16 +0300

    DOS: Omit useless defines from config.h

 dos/config.h | 12 ------------
 1 file changed, 12 deletions(-)

commit fc1921b04b8840caaa777c2bd5340d41b259da20
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-21 20:27:50 +0300

    Build: Omit useless checks for fcntl.h, limits.h, and sys/time.h

 configure.ac | 6 ------
 1 file changed, 6 deletions(-)

commit 6aa2a6deeba04808a0fe4461396e7fb70277f3d4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 22:04:21 +0300

    liblzma: Silence a warning from Coverity static analysis
    
    It is logical why it cannot know for sure that the value has
    to be at most 4 if it is less than 16.
    
    The x86 filter is based on a very old LZMA SDK version. Newer
    ones have quite a different implementation for the same filter.
    
    Thanks to Sam James.

 src/liblzma/simple/x86.c | 12 +++++-------
 1 file changed, 5 insertions(+), 7 deletions(-)

commit e89d3e83b4496d0b5410870634970c0aa9721d59
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 23:18:19 +0300

    Update .gitignore

 .gitignore | 21 ++++++++-------------
 1 file changed, 8 insertions(+), 13 deletions(-)

commit 86fc4ee859709da0ff9617a1490f13ddac0a109b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 20:53:24 +0300

    Tests: test_lzip_decoder: Tweak coding style and comments

 tests/test_lzip_decoder.c | 58 +++++++++++++++++++++++------------------------
 1 file changed, 28 insertions(+), 30 deletions(-)

commit 38be573a279bd7b608ee7d8509ec10884e6fb0d5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 20:51:36 +0300

    Tests: test_lzip_decoder: Remove redundant initializations

 tests/test_lzip_decoder.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

commit d7e4bc53eacfab9f3de95d8252bdfdc9419079c9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-19 20:47:24 +0300

    Tests: test_lzip_decoder: Remove unneeded tuktest_malloc() calls

 tests/test_lzip_decoder.c | 12 ++----------
 1 file changed, 2 insertions(+), 10 deletions(-)

commit eeca8f7c5baf1ad69606bb734d5001763466d58f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-15 20:35:07 +0300

    xz: Fix white space error.
    
    Thanks to xx on #tukaani.

 src/xz/args.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 462ca9409940a19f743daee6b3bcc611277d0007
Author: Sam James <sam@gentoo.org>
Date:   2024-04-11 23:01:44 +0100

    xz: add missing noreturn for message_filters_help
    
    Fixes: a165d7df1964121eb9df715e6f836a31c865beef

 src/xz/message.h | 1 +
 1 file changed, 1 insertion(+)

commit 863f13d2828b99b0539ce73f9cf85bde32358034
Author: Sam James <sam@gentoo.org>
Date:   2024-04-11 19:34:04 +0100

    xz: signals: suppress -Wsign-conversion on macOS
    
    On macOS, we get:
    ```
    signals.c: In function 'signals_init':
    signals.c:76:17: error: conversion to 'sigset_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Werror=sign-conversion]
       76 |                 sigaddset(&hooked_signals, sigs[i]);
          |                 ^~~~~~~~~
    signals.c:81:17: error: conversion to 'sigset_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Werror=sign-conversion]
       81 |                 sigaddset(&hooked_signals, message_progress_sigs[i]);
          |                 ^~~~~~~~~
    signals.c:86:9: error: conversion to 'sigset_t' {aka 'unsigned int'} from 'int' may change the sign of the result [-Werror=sign-conversion]
       86 |         sigaddset(&hooked_signals, SIGTSTP);
          |         ^~~~~~~~~
    ```
    
    We use `int` for `hooked_signals` but we can't just cast to whatever
    `sigset_t` is because `sigset_t` is an opaque type. It's an unsigned int
    on macOS. On macOS, `sigaddset` is implemented as a macro.
    
    Just suppress -Wsign-conversion for `signals_init` for macOS given
    there's no real nice way of fixing this.

 src/xz/signals.c | 7 +++++++
 1 file changed, 7 insertions(+)

commit fcbd0d199933a69713cb293cbd7409a757d854cd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-13 22:19:40 +0300

    Tests: test_microlzma: Add a "FIXME?" about LZMA_FINISH handling

 tests/test_microlzma.c | 8 ++++++++
 1 file changed, 8 insertions(+)

commit 0fe2dfa68355d2b165544b2bc8babf77dcc2039e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-13 18:05:31 +0300

    Tests: test_microlzma: Tweak comments, coding style, and minor details
    
    A few lines were reordered, a few ARRAY_SIZE were changed to sizeof,
    and a few uint32_t were changed to size_t. No real functional changes
    were intended.

 tests/test_microlzma.c | 149 +++++++++++++++++++++++++++----------------------
 1 file changed, 83 insertions(+), 66 deletions(-)

commit 97f0ee0f1f903f4e7c4ea23e9b89d687025d2992
Author: Ryan Carsten Schmidt <git@ryandesign.com>
Date:   2024-04-12 19:31:13 -0500

    CI: Use only the active CPUs on macOS
    
    hw.ncpu counts all CPUs including inactive ones. hw.activecpu counts
    only the active CPUs.

 build-aux/ci_build.bash | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 73f629e321b74f68c9954728fa4f19261afccf46
Author: Sam James <sam@gentoo.org>
Date:   2024-04-10 18:33:55 +0100

    ci: rename ci_build.sh -> ci_build.bash
    
    We discussed the name and it's less cognitive load to just call it '.bash'
    so you don't have an immediate question about if bashisms are OK.

 .github/workflows/ci.yml                 | 52 ++++++++++++++++----------------
 .github/workflows/windows-ci.yml         | 20 ++++++------
 build-aux/{ci_build.sh => ci_build.bash} |  0
 3 files changed, 36 insertions(+), 36 deletions(-)

commit 8709407a9ef8e7e8aec117879400e4dd3e227ada
Author: Sam James <sam@gentoo.org>
Date:   2024-04-10 17:42:23 +0100

    ci: build in parallel by default

 build-aux/ci_build.sh | 2 ++
 1 file changed, 2 insertions(+)

commit 65bf7e0a1ca6386f17608e8afb84ac470c18d23f
Author: Sam James <sam@gentoo.org>
Date:   2024-04-10 15:41:08 +0100

    ci: default to -O2
    
    We need this for when we're passing sanitizer flags or -gdwarf-4 for Clang
    with Valgrind. Just always start with -O2 if CFLAGS isn't set in the
    environment and append what was passed on the command line.

 build-aux/ci_build.sh | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit bc899f9e0700ad153bd65f4804c4de7515c8a847
Author: Sam James <sam@gentoo.org>
Date:   2024-04-10 15:17:47 +0100

    ci: make automake's test runner verbose on failures
    
    This is a lot easier to work with than the save-logs thing the action
    tries to do...

 build-aux/ci_build.sh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b5e3470442531717b2457b40ab412740296af1bc
Author: Sam James <sam@gentoo.org>
Date:   2024-04-10 12:38:51 +0100

    ci: make UBSAN abort on errors
    
    Unfortunately, UBSAN doesn't do this by default. See also the change
    I made in Meson for this in October [0].
    
    [0] https://github.com/mesonbuild/meson/commit/7b7d2e060b447de9c2642848847370a58711ac1c

 .github/workflows/ci.yml | 1 +
 1 file changed, 1 insertion(+)

commit 6c095a98fbec70b790253a663173ecdb669108c4
Author: Sam James <sam@gentoo.org>
Date:   2024-04-10 11:43:10 +0100

    ci: test Valgrind
    
    Using `--trace-children=yes` has a trade-off here, as it makes
    `test_scripts.sh` pretty slow when calling various non-xz utilities.
    
    But I also feel like it's not useless to have Valgrind used there and it's
    not easy to exclude Valgrind just for that one test...
    
    I did consider using AX_VALGRIND_CHECK [0][1] but I couldn't get it working
    immediately with some conditionally-built tests and I wondered if it was
    worth spending time on at least while we're debating xz's future build
    system situation.
    
    [0] https://www.gnu.org/software/autoconf-archive/ax_valgrind_check.html
    [1] https://tecnocode.co.uk/2014/12/23/automatically-valgrinding-code-with-ax_valgrind_check/

 .github/workflows/ci.yml | 11 ++++++++++-
 build-aux/ci_build.sh    |  8 +++++---
 2 files changed, 15 insertions(+), 4 deletions(-)

commit 6286c1900c2d2ca33d9b1b397122c7bcdb9a4d59
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-10 23:20:02 +0300

    liblzma: CRC: Simplify table omission macros
    
    A macro is useful to prevent a single #if directive from
    getting too ugly but only one macro is needed for all archs.

 src/liblzma/check/crc32_table.c | 10 ++++------
 src/liblzma/check/crc64_table.c |  4 ++--
 src/liblzma/check/crc_common.h  |  5 +++--
 3 files changed, 9 insertions(+), 10 deletions(-)

commit 45da936c879acf4f053a3055665bf1b10ded4462
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-10 23:09:40 +0300

    liblzma: ARM64 CRC: Fix omission of CRC32 table
    
    The macro name had an odd typo so the table wasn't omitted
    when it should have.
    
    Fixes: 1940f0ec28f08c0ac72c1413d9706fb82eabe6ad

 src/liblzma/check/crc32_table.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 308a9af85400b0e2019f0f012c8354e831d06d65
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-10 22:21:51 +0300

    Build: If ARM64 feature detection func is found, stop looking for others
    
    This can speed up configure a tiny bit.
    
    Fixes: c5f6d79cc9515a7f22d7ea4860c6cc394b295732

 configure.ac | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit fc43cecd32bf9d5f8caa599206b15c9569af1eb6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-10 22:04:27 +0300

    liblzma: ARM64 CRC32: Change style of the macOS code to match FreeBSD
    
    I didn't test this but it shouldn't change any functionality.
    
    Fixes: 761f5b69a4c778c8bcb09279b845b07c28790575

 src/liblzma/check/crc32_arm64.h | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit 1024cd4cd966b998fedec51e385e9ee9a49b3c57
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-10 21:59:27 +0300

    liblzma: ARM64 CRC32: Add error checking to FreeBSD-specific code
    
    Also add parenthesis to the return statement.
    
    I didn't test this.
    
    Fixes: 761f5b69a4c778c8bcb09279b845b07c28790575

 src/liblzma/check/crc32_arm64.h | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 2337f7021c860b026e3e849e60a9ae8d09ec0ea0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-10 21:56:33 +0300

    liblzma: ARM64 CRC32: Use negation instead of subtracting from 8
    
    Subtracting from 0 is negation, this just keeps warnings away.
    
    Fixes: 761f5b69a4c778c8bcb09279b845b07c28790575

 src/liblzma/check/crc32_arm64.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit d8fffd01aa1a3c18e437a222abd34699e23ff5e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-10 21:55:10 +0300

    liblzma: ARM64 CRC32: Tweak coding style and comments

 src/liblzma/check/crc32_arm64.h | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 780d2c236de0e4749655696c2e0c26fb7565afd3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-09 21:55:01 +0300

    Update SECURITY.md.

 .github/SECURITY.md | 25 ++++++++-----------------
 1 file changed, 8 insertions(+), 17 deletions(-)

commit 986865ea2f9d1f8dbef4a130926df106b0f6d41a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-09 17:47:01 +0300

    CI: Remove ifunc support.

 .github/workflows/ci.yml | 13 +++----------
 build-aux/ci_build.sh    |  5 +----
 2 files changed, 4 insertions(+), 14 deletions(-)

commit 689ae2427342a2ea1206eb5ca08301baf410e7e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-09 17:43:16 +0300

    liblzma: Remove ifunc support.
    
    This is *NOT* done for security reasons even though the backdoor
    relied on the ifunc code. Instead, the reason is that in this
    project ifunc provides little benefits but it's quite a bit of
    extra code to support it. The only case where ifunc *might* matter
    for performance is if the CRC functions are used directly by an
    application. In normal compression use it's completely irrelevant.

 CMakeLists.txt                    | 79 ---------------------------------------
 INSTALL                           |  8 ----
 configure.ac                      | 79 ---------------------------------------
 src/liblzma/check/crc32_fast.c    | 48 +++---------------------
 src/liblzma/check/crc64_fast.c    | 21 -----------
 src/liblzma/check/crc_common.h    |  9 +----
 src/liblzma/check/crc_x86_clmul.h | 11 +-----
 7 files changed, 8 insertions(+), 247 deletions(-)

commit 6b4c859059a7eb9b0547590c081668e14ecf8af6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-08 22:04:41 +0300

    tests/files/README: Update the main heading.

 tests/files/README | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 2a851e06b891ce894f918faff32a6cca6fdecee6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-08 22:02:45 +0300

    tests/files/README: Explain how to recreate the ARM64 test files.

 tests/files/README | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

commit 3d09b721b94e18fe1f853a04799697f5de10b291
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-08 21:51:55 +0300

    debug: Add generator for the ARM64 test file data.

 debug/Makefile.am         |   3 +-
 debug/testfilegen-arm64.c | 116 ++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 118 insertions(+), 1 deletion(-)

commit 31ef676567c9d6fcc4ec9fc833c312f7a7c21c48
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-08 21:19:38 +0300

    xz man page: Use .ft CR instead of CW to silence warnings from groff.

 src/xz/xz.1 | 32 ++++++++++++++++----------------
 1 file changed, 16 insertions(+), 16 deletions(-)

commit 780cbf29d5a88db2b546e9b7b019c4c33ca72685
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-08 19:28:35 +0300

    Fix NEWS for 5.6.0 and 5.6.1.

 NEWS | 6 ++++++
 1 file changed, 6 insertions(+)

commit bfd0c7c478e93a1911b845459549ff94587b6ea2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-08 19:22:26 +0300

    Remove the XZ logo.

 COPYING              |   5 -
 COPYING.CC-BY-SA-4.0 | 427 ---------------------------------------------------
 Makefile.am          |   2 -
 README               |   2 -
 doc/xz-logo.png      | Bin 6771 -> 0 bytes
 doxygen/Doxyfile     |   6 +-
 doxygen/footer.html  |  13 --
 7 files changed, 3 insertions(+), 452 deletions(-)

commit 77a294d98a9d2d48f7e4ac273711518bf689f5c4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-08 18:27:39 +0300

    Update maintainer and author info.
    
    The other maintainer suddenly disappeared.

 AUTHORS                |  9 +++++++--
 README                 | 10 +++-------
 THANKS                 |  1 -
 src/liblzma/api/lzma.h |  2 +-
 4 files changed, 11 insertions(+), 11 deletions(-)

commit 8dd03d4484ccf80022722a16d0ed9b37f2b58072
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-08 18:05:32 +0300

    Docs: Update .xz file format specification to 1.2.1.
    
    This only reverts the XZ URL changes.

 doc/xz-file-format.txt | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

commit 17aa2e1a796d3f758802df29afc89dcf335db567
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-08 17:33:56 +0300

    Update website URLs back to tukaani.org.
    
    The XZ projects were moved back to their original URLs.

 .github/SECURITY.md        |  2 +-
 CMakeLists.txt             |  2 +-
 COPYING                    |  3 +--
 README                     |  4 ++--
 configure.ac               |  2 +-
 doc/faq.txt                |  2 +-
 doc/lzma-file-format.txt   | 12 ++++++------
 dos/config.h               |  2 +-
 src/liblzma/api/lzma.h     |  2 +-
 src/xz/xz.1                |  6 +++---
 src/xzdec/xzdec.1          |  4 ++--
 windows/README-Windows.txt |  2 +-
 12 files changed, 21 insertions(+), 22 deletions(-)

commit 2739db981023373a2ddabc7b456c7e658bb4f582
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-08 17:07:08 +0300

    xzdec: Tweak coding style and comments.

 src/xzdec/xzdec.c | 32 +++++++++++++++++++++-----------
 1 file changed, 21 insertions(+), 11 deletions(-)

commit 408b6adb2a07d07c6535f859571cca38837caaf3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-08 15:53:46 +0300

    tests/ossfuzz: Tiny fix to a comment.

 tests/ossfuzz/fuzz_decode_stream.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit db4dd74a344580e0b81436598d9741a3454245b0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-09 18:22:16 +0300

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit e93e13c8b3bec925c56e0c0b675d8000a0f7f754
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-04-08 15:32:58 +0300

    Remove the backdoor found in 5.6.0 and 5.6.1 (CVE-2024-3094).
    
    While the backdoor was inactive (and thus harmless) without inserting
    a small trigger code into the build system when the source package was
    created, it's good to remove this anyway:
    
      - The executable payloads were embedded as binary blobs in
        the test files. This was a blatant violation of the
        Debian Free Software Guidelines.
    
      - On machines that see lots bots poking at the SSH port, the backdoor
        noticeably increased CPU load, resulting in degraded user experience
        and thus overwhelmingly negative user feedback.
    
      - The maintainer who added the backdoor has disappeared.
    
      - Backdoors are bad for security.
    
    This reverts the following without making any other changes:
    
    6e636819 Tests: Update two test files.
    a3a29bbd Tests: Test --single-stream can decompress bad-3-corrupt_lzma2.xz.
    0b4ccc91 Tests: Update RISC-V test files.
    8c9b8b20 liblzma: Fix typos in crc32_fast.c and crc64_fast.c.
    82ecc538 liblzma: Fix false Valgrind error report with GCC.
    cf44e4b7 Tests: Add a few test files.
    3060e107 Tests: Use smaller dictionary size in RISC-V test files.
    e2870db5 Tests: Add two RISC-V Filter test files.
    
    The RISC-V test files also have real content that tests the filter
    but the real content would fit into much smaller files. A generator
    program would need to be available as well.
    
    Thanks to Andres Freund for finding and reporting it and making
    it public quickly so others could act without a delay.
    See: https://www.openwall.com/lists/oss-security/2024/03/29/4

 src/liblzma/check/crc32_fast.c         |   7 +++++--
 src/liblzma/check/crc64_fast.c         |   4 +++-
 src/liblzma/check/crc_common.h         |  25 -------------------------
 tests/files/README                     |  27 ---------------------------
 tests/files/bad-3-corrupt_lzma2.xz     | Bin 512 -> 0 bytes
 tests/files/bad-dict_size.lzma         | Bin 41 -> 0 bytes
 tests/files/good-1-riscv-lzma2-1.xz    | Bin 7424 -> 0 bytes
 tests/files/good-1-riscv-lzma2-2.xz    | Bin 7432 -> 0 bytes
 tests/files/good-2cat.xz               | Bin 136 -> 0 bytes
 tests/files/good-large_compressed.lzma | Bin 35421 -> 0 bytes
 tests/files/good-small_compressed.lzma | Bin 258 -> 0 bytes
 tests/test_files.sh                    |  11 -----------
 12 files changed, 8 insertions(+), 66 deletions(-)

commit f9cf4c05edd14dedfe63833f8ccbe41b55823b00
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-03-30 14:36:28 +0200

    CMake: Fix sabotaged Landlock sandbox check.
    
    It never enabled it.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit af071ef7702debef4f1d324616a0137a5001c14c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-03-26 01:50:02 +0800

    Docs: Simplify SECURITY.md.

 .github/SECURITY.md | 8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

commit 0b99783d63f27606936bb79a16c52d0d70c0b56f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-03-22 17:46:30 +0200

    liblzma: memcmplen.h: Add a comment why subtraction is used.

 src/liblzma/common/memcmplen.h | 13 +++++++++++++
 1 file changed, 13 insertions(+)

commit 8a25ba024d55610c448c6e4f1400a00bae51b493
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-03-15 17:43:39 +0200

    INSTALL: Document arguments of --enable-symbol-versions.

 INSTALL | 43 +++++++++++++++++++++++++++++++++++++++----
 1 file changed, 39 insertions(+), 4 deletions(-)

commit 49324b711f9d42b3543bf2f3ae598eaa03360bd5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-03-15 17:15:50 +0200

    Build: Use only the generic symbol versioning with NVIDIA HPC Compiler.
    
    This does the previous commit with CMake.
    
    AC_EGREP_CPP uses AC_REQUIRE so the outermost if-commands must
    be changed to AS_IF to ensure that things wont break some day.
    See 5a5bd7f871818029d5ccbe189f087f591258c294.

 configure.ac | 18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

commit c273123ed0ebaebf49994057a7fe98aae7f42c40
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-03-15 16:36:35 +0200

    CMake: Use only the generic symbol versioning with NVIDIA HPC Compiler.
    
    It doesn't support the __symver__ attribute or __asm__(".symver ...").
    The generic symbol versioning can still be used since it only needs
    linker support.

 CMakeLists.txt | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit df7f487648d18a3992386a59b8a061edca862d17
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-03-13 21:38:24 +0200

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 3217b82b3ec023bf8338249134a076bea0ea30ec
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-03-13 21:30:18 +0200

    liblzma: Minor comment edits.

 src/liblzma/common/string_conversion.c | 4 ++--
 src/liblzma/delta/delta_decoder.c      | 2 ++
 2 files changed, 4 insertions(+), 2 deletions(-)

commit 096bc0e3f8fb4bfc4d2f3f64a7f219401ffb4c31
Author: Sergey Kosukhin <sergey.kosukhin@mpimet.mpg.de>
Date:   2024-03-13 13:07:13 +0100

    liblzma: Fix building with NVHPC (NVIDIA HPC SDK).
    
    NVHPC compiler has several issues that make it impossible to
    build liblzma:
      - the compiler cannot handle unions that contain pointers that
        are not the first members;
      - the compiler cannot handle the assembler code in range_decoder.h
        (LZMA_RANGE_DECODER_CONFIG has to be set to zero);
      - the compiler fails to produce valid code for delta_decode if the
        vectorization is enabled, which results in failed tests.
    
    This introduces NVHPC-specific workarounds that address the issues.

 src/liblzma/common/string_conversion.c | 6 ++++--
 src/liblzma/delta/delta_decoder.c      | 3 +++
 src/liblzma/rangecoder/range_decoder.h | 1 +
 3 files changed, 8 insertions(+), 2 deletions(-)

commit 2ad7fad67080e88fa7fc191f9d613d8b7add9c62
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-03-13 21:17:10 +0200

    CMake: Disable symbol versioning on non-glibc Linux.
    
    This better matches what configure.ac does. For example, musl has
    only basic symbol versioning support:
    
    https://wiki.musl-libc.org/functional-differences-from-glibc.html#Symbol_versioning
    
    configure.ac tries to enable symbol versioning only with glibc
    so now CMake does the same.

 CMakeLists.txt | 22 ++++++++++++++++++++--
 1 file changed, 20 insertions(+), 2 deletions(-)

commit 82f0c0d39eb2c026b1d96ee706f70ace868d4ed4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-03-13 20:32:46 +0200

    CMake: Make symbol versioning configurable.

 CMakeLists.txt | 62 +++++++++++++++++++++++++++++++++++++++-------------------
 1 file changed, 42 insertions(+), 20 deletions(-)

commit 45d33bfc45e4295b8ad743bc2ae61cc724f98076
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-03-13 19:47:36 +0200

    Build: Style tweaks to configure.ac.
    
    The AC_MSG_ERROR line is overlong anyway as are a few other
    AC_MSG_ERROR lines already.

 configure.ac | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

commit f56ed6fac6619b56b005878d3b5210e2f0d721c0
Author: Sergey Kosukhin <sergey.kosukhin@mpimet.mpg.de>
Date:   2024-03-12 20:03:49 +0100

    Build: Let the users override the symbol versioning variant.
    
    There are cases when the users want to decide themselves whether
    they want to have the generic (even on GNU/Linux) or the linux
    (even if we do not recommend that) symbol versioning variant.
    The former might be needed to circumvent compiler issues (i.e.
    the compiler does not support all features that are required
    for the linux versioning), the latter might help in overriding
    the assumptions made in the configure script.

 configure.ac | 91 +++++++++++++++++++++++++++++++++---------------------------
 1 file changed, 50 insertions(+), 41 deletions(-)

commit a4f2e20d8466369b1bb277c66f75c9e4ba9cc378
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-03-09 11:27:27 +0800

    Add NEWS for 5.6.1

 NEWS | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

commit f01be8ad754a905d8c418601767480ec11621b02
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-03-09 10:43:20 +0800

    Translations: Add missing --riscv option to man page translations.

 po4a/de.po    | 702 +++++++++++++++++++++++++++++-----------------------------
 po4a/fr.po    | 549 ++++++++++++++++++++++-----------------------
 po4a/ko.po    | 702 +++++++++++++++++++++++++++++-----------------------------
 po4a/pt_BR.po | 641 +++++++++++++++++++++++++++--------------------------
 po4a/ro.po    | 702 +++++++++++++++++++++++++++++-----------------------------
 po4a/uk.po    | 702 +++++++++++++++++++++++++++++-----------------------------
 6 files changed, 2024 insertions(+), 1974 deletions(-)

commit 6e636819e8f070330d835fce46289a3ff72a7b89
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-03-09 10:18:29 +0800

    Tests: Update two test files.
    
    The original files were generated with random local to my machine.
    To better reproduce these files in the future, a constant seed was used
    to recreate these files.

 tests/files/bad-3-corrupt_lzma2.xz     | Bin 484 -> 512 bytes
 tests/files/good-large_compressed.lzma | Bin 35430 -> 35421 bytes
 2 files changed, 0 insertions(+), 0 deletions(-)

commit a3a29bbd5d86183fc7eae8f0182dace374e778d8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-03-09 10:08:32 +0800

    Tests: Test --single-stream can decompress bad-3-corrupt_lzma2.xz.
    
    The first stream in this file is valid, so this tests that xz properly
    stops after decompressing it.

 tests/test_files.sh | 11 +++++++++++
 1 file changed, 11 insertions(+)

commit 0b4ccc91454dbcf0bf521b9bd51aa270581ee23c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-03-09 10:05:32 +0800

    Tests: Update RISC-V test files.
    
    This increases code coverage and tests for possible shifting bugs.

 tests/files/good-1-riscv-lzma2-1.xz | Bin 7512 -> 7424 bytes
 tests/files/good-1-riscv-lzma2-2.xz | Bin 7512 -> 7432 bytes
 2 files changed, 0 insertions(+), 0 deletions(-)

commit 8c9b8b2063daa78ead9f648c2ec3c91e8615dffb
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-03-09 09:52:32 +0800

    liblzma: Fix typos in crc32_fast.c and crc64_fast.c.

 src/liblzma/check/crc32_fast.c | 4 ++--
 src/liblzma/check/crc64_fast.c | 3 +--
 2 files changed, 3 insertions(+), 4 deletions(-)

commit b93a8d7631d9517da63f03e0185455024a4609e8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-03-09 09:49:55 +0800

    Tests: Replace HAVE_MICROLZMA usage in CMake and Autotools builds.
    
    This reverts commit adaacafde6661496ca2814b1e94a3ba5186428cb.

 CMakeLists.txt         | 15 ++++++++++-----
 configure.ac           |  9 ++-------
 tests/Makefile.am      |  9 ++++++---
 tests/test_microlzma.c | 12 ++++--------
 4 files changed, 22 insertions(+), 23 deletions(-)

commit 82ecc538193b380a21622aea02b0ba078e7ade92
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-03-09 09:20:57 +0800

    liblzma: Fix false Valgrind error report with GCC.
    
    With GCC and a certain combination of flags, Valgrind will falsely
    trigger an invalid write. This appears to be due to the omission of
    instructions to properly save, set up, and restore the frame pointer.
    
    The IFUNC resolver is a leaf function since it only calls a function
    that is inlined. So sometimes GCC omits the frame pointer instructions
    in the resolver unless this optimization is explictly disabled.
    
    This fixes https://bugzilla.redhat.com/show_bug.cgi?id=2267598.

 src/liblzma/check/crc32_fast.c |  9 +++------
 src/liblzma/check/crc64_fast.c |  7 +++----
 src/liblzma/check/crc_common.h | 25 +++++++++++++++++++++++++
 3 files changed, 31 insertions(+), 10 deletions(-)

commit 3007e74ef250f0ce95d97ffbdf2282284f93764d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-03-05 23:21:26 +0200

    liblzma: Fix a typo in a comment in the RISC-V filter.

 src/liblzma/simple/riscv.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 72d2933bfae514e0dbb123488e9f1eb7cf64175f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-03-05 00:34:46 +0800

    liblzma: Use attribute no_profile_instrument_function with ifunc.
    
    Thanks to Sam James for determining this was the attribute needed to
    workaround the GCC bug and for his version of the patch in Gentoo.

 src/liblzma/check/crc32_fast.c | 5 +++++
 src/liblzma/check/crc64_fast.c | 3 +++
 2 files changed, 8 insertions(+)

commit e5faaebbcf02ea880cfc56edc702d4f7298788ad
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-03-05 00:27:31 +0800

    Build: Require attribute no_profile_instrument_function for ifunc usage.
    
    Using __attribute__((__no_profile_instrument_function__)) on the ifunc
    resolver works around a bug in GCC -fprofile-generate:
    it adds profiling code even to ifunc resolvers which can make
    the ifunc resolver crash at program startup. This attribute
    was not introduced until GCC 7 and Clang 13, so ifunc won't
    be used with prior versions of these compilers.
    
    This bug was brought to our attention by:
    
        https://bugs.gentoo.org/925415
    
    And was reported to upstream GCC by:
    
        https://gcc.gnu.org/bugzilla/show_bug.cgi?id=11411

 CMakeLists.txt | 7 +++++++
 configure.ac   | 7 +++++++
 2 files changed, 14 insertions(+)

commit 7eeadd279a24c26ca7ff1292b7df802b89409eb7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-03-04 19:23:18 +0200

    liblzma: Fix a comment in the RISC-V filter.

 src/liblzma/simple/riscv.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5f3d0595296cc3035eae9e7bb6c3ffb1e1267333
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-29 16:35:52 +0200

    CMake: Warn if translated man pages are missing.

 CMakeLists.txt | 9 +++++++++
 1 file changed, 9 insertions(+)

commit 4cd1042ee752d61370c685d0d8b20c1e935672f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-29 16:35:52 +0200

    CMake: Warn if gettext tools and pre-created .gmo files are missing.
    
    It's only done with CMake >= 3.20 and if library support
    for translation was already found.
    
    Sort of fixes: https://github.com/tukaani-project/xz/issues/82

 CMakeLists.txt | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

commit a94b42362c8e807f92236d6d63373f04991e3a50
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-28 18:26:25 +0200

    xz: Add comments.

 src/xz/coder.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

commit bbf112e32307a75a54a9e170bc392811443d5c87
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-27 23:42:41 +0800

    xz: Change logging level for thread reduction to highest verbosity only.
    
    Now that multi threaded encoding is the default, users do not need to
    see a warning message everytime the number of threads is reduced. On
    some machines, this could happen very often. It is not unreasonable for
    users to need to set double verbose mode to see this kind of
    information.
    
    To see these warning messages -vv or --verbose --verbose must be passed
    to set xz into the highest possible verbosity mode.
    
    These warnings had caused automated testing frameworks to fail when they
    expected no output to stderr.
    
    Thanks to Sebastian Andrzej Siewior for reporting this and for the
    initial version of the patch.

 src/xz/coder.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 649f6447441510d593a88475ad6df4bcdf74ce48
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-26 23:06:13 +0200

    Fix sorting in THANKS.

 THANKS | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 1255b7d849bf53f196a842ef2a508ed0ff577eaa
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-26 23:39:29 +0800

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit eee579fff50099ba163c12305e81a4bd42b7dd53
Author: Chien Wong <m@xv97.com>
Date:   2024-02-25 21:38:13 +0800

    xz: Add missing RISC-V on the filter list in the man page
    
    Signed-off-by: Chien Wong <m@xv97.com>

 src/xz/xz.1 | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 328c52da8a2bbb81307644efdb58db2c422d9ba7
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-26 23:02:06 +0800

    Build: Fix Linux Landlock feature test in Autotools and CMake builds.
    
    The previous Linux Landlock feature test assumed that having the
    linux/landlock.h header file was enough. The new feature tests also
    requires that prctl() and the required Landlock system calls are
    supported.

 CMakeLists.txt    | 25 ++++++++++++++++++++++---
 configure.ac      | 27 ++++++++++++++++++++++++++-
 src/xz/sandbox.c  |  2 +-
 src/xz/sandbox.h  |  2 +-
 src/xzdec/xzdec.c |  8 ++++----
 5 files changed, 54 insertions(+), 10 deletions(-)

commit eb8ad59e9bab32a8d655796afd39597ea6dcc64d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-26 20:06:10 +0800

    Tests: Add test_microlzma to .gitignore and CMakeLists.txt.

 .gitignore     | 1 +
 CMakeLists.txt | 1 +
 2 files changed, 2 insertions(+)

commit 9eed1b9a3ae140e93a82febc05a0181e9a4f5093
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-26 19:56:25 +0800

    Tests: Correct license header in test_microlzma.c.

 tests/test_microlzma.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit 8bf9f72ee1c05b9e205a72807e8a9e304785673d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-25 21:41:55 +0800

    Fix typos in NEWS and CMakeLists.

 CMakeLists.txt | 2 +-
 NEWS           | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit 5d8d915ebe2e345820a0f54d1baf8d7d4824c0c7
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-24 16:30:06 +0800

    Bump version and soname for 5.7.0alpha.
    
    Like 5.5.0alpha, 5.7.0alpha won't be released, it's just to mark that
    the branch is not stable.
    
    Once again there is no API/ABI stability for new features in devel
    versions. The major soname won't be bumped even if API/ABI of new
    features breaks between devel releases.

 src/liblzma/Makefile.am         | 2 +-
 src/liblzma/api/lzma/version.h  | 6 +++---
 src/liblzma/liblzma_generic.map | 2 +-
 src/liblzma/liblzma_linux.map   | 2 +-
 4 files changed, 6 insertions(+), 6 deletions(-)

commit a18fb1edef0d0aac12a09eed05e9c448c777af7b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-24 15:50:36 +0800

    Add NEWS for 5.6.0.

 NEWS | 143 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 143 insertions(+)

commit 24355c5280bc95e3d594432d60bb8432aa6af173
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-22 22:27:01 +0800

    Translations: Remove obsolete and fuzzy matches from some translations.
    
    The French and Brazilian Portuguese man page translations have not been
    updated since the switch from public domain to 0BSD. The old GPLv2
    strings have now been removed from these files.

 po4a/fr.po    | 4702 +++++++++++++++++++++++++++++++++++++----------------
 po4a/pt_BR.po | 4987 ++++++++++++++++++++++++++++++++++++++++-----------------
 2 files changed, 6832 insertions(+), 2857 deletions(-)

commit 02ca4a7d7b703e2ec63e00b70feec825e919dbc1
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-21 00:31:54 +0800

    Translations: Patch man pages to avoid fuzzy matches.
    
    This will be fixed in the next round of translations, but this avoids
    having a fuzzy match or not fixing the English version.

 po4a/de.po | 2 +-
 po4a/ko.po | 2 +-
 po4a/ro.po | 2 +-
 po4a/uk.po | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

commit 898aad9fc711e03452d24d9e2c5b7f77a6f9ce64
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-21 00:30:43 +0800

    xzmore: Fix typo in xzmore.1.
    
    Thanks to Yuri Chornoivan.

 src/scripts/xzmore.1 | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 5631aa206c8d16b4eeab85a46b8b698f4fc4cdba
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-24 12:12:16 +0800

    Translations: Update the Vietnamese translation.

 po/vi.po | 505 ++++++++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 309 insertions(+), 196 deletions(-)

commit a65fd7ce9d6228e87faf61dc56a35984d0088248
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-24 12:06:40 +0800

    Translations: Update the Esperanto translation.

 po/eo.po | 502 ++++++++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 306 insertions(+), 196 deletions(-)

commit cf44e4b7f5dfdbf8c78aef377c10f71e274f63c0
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-23 23:09:59 +0800

    Tests: Add a few test files.

 tests/files/README                     |  19 +++++++++++++++++++
 tests/files/bad-3-corrupt_lzma2.xz     | Bin 0 -> 484 bytes
 tests/files/bad-dict_size.lzma         | Bin 0 -> 41 bytes
 tests/files/good-2cat.xz               | Bin 0 -> 136 bytes
 tests/files/good-large_compressed.lzma | Bin 0 -> 35430 bytes
 tests/files/good-small_compressed.lzma | Bin 0 -> 258 bytes
 6 files changed, 19 insertions(+)

commit 39f4a1a86ad80b2d064b812cee42668e6c8b8c73
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-23 20:58:36 +0800

    Tests: Add MicroLZMA test.

 tests/Makefile.am      |   4 +-
 tests/test_microlzma.c | 548 +++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 551 insertions(+), 1 deletion(-)

commit adaacafde6661496ca2814b1e94a3ba5186428cb
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-23 20:57:59 +0800

    Build: Define HAVE_MICROLZMA when it is configured.

 CMakeLists.txt | 4 ++++
 configure.ac   | 9 +++++++--
 2 files changed, 11 insertions(+), 2 deletions(-)

commit eea78216d27182ca917bf00e02feaab058a4d21e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-23 20:27:15 +0800

    xz: Fix Capsicum sandbox compile error.
    
    user_abort_pipe[] was still being used instead of the parameters.

 src/xz/sandbox.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 32b0a3ce19224f9074d01a4ffbc1655b05fcb82d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-23 16:12:32 +0800

    Build: Fix ARM64 CRC32 instruction feature test.
    
    Old versions of Clang reported the unsupported function attribute and
    __crc32d() function as warnings instead of errors, so the feature test
    passed when it shouldn't have, causing a compile error at build time.
    -Werror was added to this feature test to fix this. The change is not
    needed for CMake because check_c_source_compiles() also performs
    linking and the error is caught then.
    
    Thanks to Sebastian Andrzej Siewior for reporting this.

 configure.ac | 10 ++++++++++
 1 file changed, 10 insertions(+)

commit 4c81c9611f8b2e1ad65eb7fa166afc570c58607e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-22 19:16:35 +0200

    CMake: Add LOCALEDIR to the windres workaround.
    
    LOCALEDIR may contain spaces like in "C:\Program Files".

 CMakeLists.txt | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

commit de4337fd89ca7db5feb97b5c40143404f6e22986
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-22 15:18:25 +0200

    xz: Landlock: Fix error message if input file is a directory.
    
    If xz is given a directory, it should look like this:
    
        $ xz /usr/bin
        xz: /usr/bin: Is a directory, skipping
    
    The Landlock rules didn't allow opening directories for reading:
    
        $ xz /usr/bin
        xz: /usr/bin: Permission denied
    
    The simplest fix was to allow opening directories for reading.
    While it's a bit silly to allow it solely for the error message,
    it shouldn't make the sandbox significantly weaker.
    
    The single-file use case (like when called from GNU tar) is
    still as strict as possible: all Landlock restrictions are
    enabled before (de)compression starts.

 src/xz/sandbox.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

commit 120da10ae139ea52ca4275452adf8eda02d07cc8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-22 14:41:29 +0200

    liblzma: Disable branchless C version in range decoder.
    
    Thanks to Sebastian Andrzej Siewior and Sam James for
    benchmarking on various systems.

 src/liblzma/rangecoder/range_decoder.h | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

commit 00440f52be9ac2c7438c7b0cb1082f12399632c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-21 17:41:32 +0200

    INSTALL: Clarify that --disable-assembler affects only 32-bit x86.

 INSTALL | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

commit 11405be84ea294497e12d03d7219f607063f4a00
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-19 18:41:37 +0200

    Windows: build.bash: Include COPYING.0BSD in the package.

 windows/build.bash | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit c27cf64e3e27f4968431d65be7098a12a3a80d30
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-18 17:59:46 +0200

    Windows: build.bash: include liblzma-crt-mixing.txt in the package.

 windows/build.bash | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 8d38941baed05de4ff7cc775de14833108f62184
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-18 17:17:43 +0200

    Windows: Major update to Windows build instructions.

 INSTALL                                      |  68 ++++-----
 windows/INSTALL-MSVC.txt                     |  23 +--
 windows/INSTALL-MinGW-w64_with_Autotools.txt |  49 +++++++
 windows/INSTALL-MinGW-w64_with_CMake.txt     | 203 +++++++++++++++++++++++++++
 windows/INSTALL-MinGW.txt                    | 138 ------------------
 windows/README-Windows.txt                   |   2 +
 windows/build-with-cmake.bat                 |  35 +++++
 windows/liblzma-crt-mixing.txt               |  70 +++++++++
 8 files changed, 404 insertions(+), 184 deletions(-)

commit 4b5b0d352348ff510ffb50a3b5b71788857d37a1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-18 15:15:04 +0200

    Windows: Update windows/README-Windows.txt.
    
    It's for binary packages built with windows/build.bash.

 windows/README-Windows.txt | 104 ++++++++++++++++++---------------------------
 1 file changed, 41 insertions(+), 63 deletions(-)

commit 1ee716f74085223c8fbcae1d5a384e6bf53c0f6a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-18 15:15:04 +0200

    Windows: Update windows/build.bash.
    
    Support for the old MinGW was dropped. Only MinGW-w64 with GCC
    is supported now.
    
    The script now supports also cross-compilation from GNU/Linux
    (tests are not run). MSYS2 and also the old MSYS 1.0.11 work
    for building on Windows. The i686 and x86_64 toolchains must
    be in PATH to build both 32-bit and 64-bit versions.
    
    Parallel builds are done if "nproc" from GNU coreutils is available.
    
    MinGW-w64 runtime copyright information file was renamed from
    COPYING-Windows.txt to COPYING.MinGW-w64-runtime.txt which
    is the filename used by MinGW-w64 itself. Its existence
    is now mandatory, it's checked at the beginning of the script.
    
    The file TODO is no longer copied to the package.

 windows/build.bash | 191 +++++++++++++++++++++++++++++++----------------------
 1 file changed, 112 insertions(+), 79 deletions(-)

commit 60462e42609a1d961868a1d1ebecc713c6d27e2e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-20 23:32:22 +0800

    Translations: Update the Romanian man page translations.

 po4a/ro.po | 1715 +++++++++++++++++++++++++++++++-----------------------------
 1 file changed, 875 insertions(+), 840 deletions(-)

commit 10d733e5b8929c642e00891cfa9ead9c2cdd2e05
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-20 23:30:25 +0800

    Translations: Update the Korean man page translations.

 po4a/ko.po | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 797a34b72ac6baff237d7a546fa941d8f78f2f62
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-20 21:03:53 +0800

    Translations: Update the Spanish translation.

 po/es.po | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 5c3751d019f023e091df9a653e2bb1f6ea8b0d49
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-20 20:18:07 +0800

    Translations: Update the Romanian translation.

 po/ro.po | 470 ++++++++++++++++++++++++++++++---------------------------------
 1 file changed, 227 insertions(+), 243 deletions(-)

commit e2d31154ecc750935436e8b62c6b073b2cfa84e3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-20 20:15:50 +0800

    Translations: Update the Croatian translation.

 po/hr.po | 648 ++++++++++++++++++++++++++++++++++-----------------------------
 1 file changed, 355 insertions(+), 293 deletions(-)

commit 704500f994d5ac271bfcfd592275c5a7da4dc8d2
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-20 20:05:44 +0800

    Translations: Update the German man page translations.

 po4a/de.po | 1696 +++++++++++++++++++++++++++++++-----------------------------
 1 file changed, 873 insertions(+), 823 deletions(-)

commit 1cfd3dca3fef321b06db73c3c9e13f347c2e2f5f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-20 19:58:25 +0800

    Translations: Update the German translation.

 po/de.po | 427 +++++++++++++++++++++++++++++++++------------------------------
 1 file changed, 225 insertions(+), 202 deletions(-)

commit 28b9b3f16cc7c6e5b42e691994569c17f4561c9a
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-20 19:56:52 +0800

    Translations: Update the Hungarian translation.

 po/hu.po | 556 ++++++++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 338 insertions(+), 218 deletions(-)

commit 00b06cd0af6ad2ee93d3006bf80417db060c2b04
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-19 16:48:05 +0200

    CMake: Fix building of lzmainfo when translations are enabled.

 CMakeLists.txt | 2 ++
 1 file changed, 2 insertions(+)

commit b0d1422b6037bfea6f6723683bd82a8e6d77026c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-19 13:38:42 +0200

    CMake: Don't assume that -fvisibility=hidden is supported outside Windows.
    
    The original code was good enough for supporting GNU/Linux
    and a few others but it wasn't very portable.
    
    CMake doesn't support Solaris Studio's -xldscope=hidden.
    If it ever does, things should still work with this commit
    as Solaris Studio supports not only its own __global but also
    the GNU C __attribute__((visibility("default"))). Support for the
    attribute was added in 2007 to Sun Studio 12 compiler version 5.9.

 CMakeLists.txt | 26 ++++++++++++++++++++++----
 1 file changed, 22 insertions(+), 4 deletions(-)

commit 2ced9d34bef4dce52ecbbf84d0903ab0aae1442c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-19 12:20:59 +0200

    CMake: Revise the component splitting.

 CMakeLists.txt | 57 +++++++++++++++++++++++++++++++--------------------------
 1 file changed, 31 insertions(+), 26 deletions(-)

commit 426bdc709c169d39b31dec410016779de117ef69
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 21:45:07 +0200

    CMake: Update the main comment and document CMAKE_BUILD_TYPE=Release.

 CMakeLists.txt | 79 ++++++++++++++++++++++++++++++++++++++++++++++------------
 1 file changed, 63 insertions(+), 16 deletions(-)

commit 4430e075f7ccfc47972d6ca0aa1c3779fc265e10
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 21:27:48 +0200

    CMake: Use -O2 instead of -O3 in CMAKE_BUILD_TYPE=Release.
    
    -O3 doesn't seem useful for speed but it makes the code bigger.
    CMake makes is difficult for users to simply override the
    optimization level: CFLAGS / CMAKE_C_FLAGS aren't helpful because
    they go before CMAKE_C_FLAGS_RELEASE. Of course, users can override
    CMAKE_C_FLAGS_RELEASE directly but then they have to remember to
    add also -DNDEBUG to disable assertions.
    
    This commit changes -O3 to -O2 in CMAKE_C_FLAGS_RELEASE if and only if
    CMAKE_C_FLAGS_RELEASE cache variable doesn't already exist. So if
    a custom value is passed on the command line (or reconfiguring an
    already-configured build), the cache variable won't be modified.

 CMakeLists.txt | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

commit 025eb6d7879e4c4e8cb29716b371e0f4c1aea660
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-18 14:59:52 +0200

    CMake: Handle symbol versioning on MicroBlaze specially.
    
    This is to match configure.ac.

 CMakeLists.txt | 23 +++++++++++++++++++----
 1 file changed, 19 insertions(+), 4 deletions(-)

commit 2edd1a35b2507d1ce68b52dbaebe23c4850a74ce
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 22:18:12 +0200

    CMake: Keep build working even if lib/*.[ch] are removed.

 CMakeLists.txt | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit d753e2ce4715552884afadc4ed6fbf8ccca6efac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 18:10:40 +0200

    CMake: Install documentation.

 CMakeLists.txt | 32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

commit 7a0405bea9cb0df9318b70f779f82b2c473e98ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 15:35:35 +0200

    CMake: Bump maximum policy version to 3.28.
    
    CMP0154 doesn't affect us since we don't use FILE_SET.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit c2264ffbe3892d28930b89b0123efc369cabc143
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 15:35:35 +0200

    CMake: Build lzmainfo.

 CMakeLists.txt | 54 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 54 insertions(+)

commit 998d0b29536094a89cf385a3b894e157db1ccefe
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 15:35:35 +0200

    CMake: Build lzmadec.

 CMakeLists.txt | 76 ++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 42 insertions(+), 34 deletions(-)

commit 74e8bc7417a0f37ca7ed5ee0127d33c69b3100b9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 15:35:35 +0200

    CMake: Add test_scripts.sh to the tests.
    
    In contrast to Automake, skipping of this test when decoders
    are disabled is handled at CMake side instead of test_scripts.sh
    because CMake-build doesn't create config.h.

 CMakeLists.txt        | 14 ++++++++++++++
 tests/test_scripts.sh | 13 ++++++++-----
 2 files changed, 22 insertions(+), 5 deletions(-)

commit 4808f238a731befcd46c2117c62a1caaf4403989
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 15:35:35 +0200

    CMake: Install scripts.
    
    Compared to the Autotools-based build, this has simpler handling
    for the shell (@POSIX_SHELL@) and extra PATH entry for the scripts
    (configure has --enable-path-for-scripts=PREFIX). The simpler
    metho should be enough for non-ancient systems and Solaris.

 CMakeLists.txt | 83 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 82 insertions(+), 1 deletion(-)

commit 3462362ebd94d835c664e94ad8f414cfe7590ca7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 15:35:35 +0200

    Scripts: Use @PACKAGE_VERSION@ instead of @VERSION@.
    
    PACKAGE_VERSION was already used in liblzma.pc.in.
    This way only one version @foo@ is used.

 src/scripts/xzdiff.in | 2 +-
 src/scripts/xzgrep.in | 2 +-
 src/scripts/xzless.in | 2 +-
 src/scripts/xzmore.in | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

commit 67610c245ba6c68cf65991693bab9312b7dc987b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 15:35:35 +0200

    CMake: Simplify symlink creation and install translated man pages.
    
    It helps that cmake_install.cmake doesn't parallelize installation
    so symlinks can be created so that the target is always known to
    exist (a requirement on Windows in some cases).
    
    This bumps the minimum CMake version from 3.13 to 3.14 to use
    file(CREATE_LINK ...). It could be made to work on 3.13 by
    calling "cmake -E create_symlink" but it's uglier code and
    slower in "make install". 3.14 should be a reasonable version
    to require nowadays, especially since the Autotools build
    is still the primary build system for most OSes.

 CMakeLists.txt | 195 +++++++++++++++++++++++++++++----------------------------
 1 file changed, 98 insertions(+), 97 deletions(-)

commit 50cc1d8a5a8154428bf240c7e4972e32b17d99bf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 15:35:35 +0200

    CMake: Add support for building and installing xz with translations.
    
    If gettext tools are available, the .po files listed in po/LINGUAS
    are converted using msgfmt. This allows building with translations
    directly from xz.git without Autotools.
    
    If gettext tools aren't available, the Autotools-created .gmo files
    in the "po" directory will be used. This allows CMake-based build
    to use translations from Autotools-generated tarball.
    
    If translation support is found (Intl_FOUND) but both the
    gettext tools and the pre-generated .gmo files are missing,
    then "make" will fail.

 CMakeLists.txt | 68 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 66 insertions(+), 2 deletions(-)

commit 746c471643009947f94a3494a1148f74c7381b56
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-19 11:58:33 +0200

    liblzma: Remove commented-out code.

 src/liblzma/rangecoder/range_decoder.h | 3 ---
 1 file changed, 3 deletions(-)

commit 4ce300ce0884c6e552de2af9ae8050b47b01f0e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 23:07:35 +0200

    xz: Delete old commented-out code.

 src/xz/message.c | 19 -------------------
 1 file changed, 19 deletions(-)

commit cae9a5e0bf422e6c5e64180805904f7ed02dc3aa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 23:07:35 +0200

    xz: Use stricter pledge(2) and Landlock sandbox.
    
    This makes these sandboxing methods stricter when no files are
    created or deleted. That is, it's a middle ground between the
    initial sandbox and the strictest single-file-to-stdout sandbox:
    this allows opening files for reading but output has to go to stdout.

 src/xz/main.c    | 46 +++++++++++++++++++++++++++++++++-------------
 src/xz/sandbox.c | 32 ++++++++++++++++++++++++++++++++
 src/xz/sandbox.h |  4 ++++
 3 files changed, 69 insertions(+), 13 deletions(-)

commit 02e3505991233901575b7eabc06b2c6c62a96899
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 23:07:35 +0200

    xz: Support Landlock ABI version 4.
    
    Linux 6.7 added support for ABI version 4 which restricts
    TCP connections which xz won't need and thus those can be
    forbidden now. Since the ABI version is handled at runtime,
    supporting version 4 won't cause any compatibility issues.
    
    Note that new enough kernel headers are required to get
    version 4 support enabled at build time.

 src/xz/sandbox.c | 25 ++++++++++++++++++++-----
 1 file changed, 20 insertions(+), 5 deletions(-)

commit 374868d81d473ab56556a1cfd6b1b36a1fab348b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 23:07:35 +0200

    xz: Move sandboxing code to sandbox.c and improve Landlock sandbox.
    
    Landlock is now always used just like pledge(2) is: first in more
    permissive mode and later (under certain common conditions) in
    a strict mode that doesn't allow opening more files.
    
    I put pledge(2) first in sandbox.c because it's the simplest API
    to use and still somewhat fine-grained for basic applications.
    So it's the simplest thing to understand for anyone reading sandbox.c.

 CMakeLists.txt     |   2 +
 src/xz/Makefile.am |   2 +
 src/xz/file_io.c   | 170 +-----------------------------
 src/xz/file_io.h   |   6 --
 src/xz/main.c      |  50 +++------
 src/xz/private.h   |   6 +-
 src/xz/sandbox.c   | 295 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/xz/sandbox.h   |  39 +++++++
 8 files changed, 357 insertions(+), 213 deletions(-)

commit 7312dfbb02197c7f990c7a3cefd027a9387d1473
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 23:07:35 +0200

    xz: Tweak comments.

 src/xz/main.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit c701a5909ad9882469fbab4fab5d2d5556d3ba78
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 23:07:35 +0200

    xz: Fix message_init() description.
    
    Also explicitly initialize progress_automatic to make it clear
    that it can be read before message_init() sets it. Static variable
    was initialized to false by default already so this is only for
    clarity.

 src/xz/main.c    | 3 ++-
 src/xz/message.c | 2 +-
 src/xz/message.h | 5 ++++-
 3 files changed, 7 insertions(+), 3 deletions(-)

commit 9466306719f3b76e92fac4e55fbfd89ec92295fa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 19:35:47 +0200

    Build: Makefile.am: Sort EXTRA_DIST.
    
    Dirs first, then files in case-sensitive ASCII order.

 Makefile.am | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit f3440e78c9517db75bfa52e1a378fad60b073bbe
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 19:25:05 +0200

    Build: Don't install TODO.

 Makefile.am | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a7a3b62e2ab03c82b2bd5c78da1d1fb8b8490381
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-18 01:09:11 +0800

    Translations: Update the Korean man page translations.

 po4a/ko.po | 1707 +++++++++++++++++++++++++++++++-----------------------------
 1 file changed, 871 insertions(+), 836 deletions(-)

commit 9b315db2d5e74700f3dc0755eb86c27947c0b393
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-18 01:08:32 +0800

    Translations: Update the Korean translation.

 po/ko.po | 423 +++++++++++++++++++++++++++++++++------------------------------
 1 file changed, 223 insertions(+), 200 deletions(-)

commit 56246607dff177b0410d140fcca4a42c865723dc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 16:23:14 +0200

    Build: Install translated lzmainfo man pages.
    
    All other translated man pages were being installed but
    lzmainfo had been forgotten.

 src/lzmainfo/Makefile.am | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

commit f1d6b88aefcced538403c5c2606ba57065b16e70
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 16:01:32 +0200

    liblzma: Avoid implementation-defined behavior in the RISC-V filter.
    
    GCC docs promise that it works and a few other compilers do
    too. Clang/LLVM is documented source code only but unsurprisingly
    it behaves the same as others on x86-64 at least. But the
    certainly-portable way is good enough here so use that.

 src/liblzma/simple/riscv.c | 30 ++++++++++++++++++++++--------
 1 file changed, 22 insertions(+), 8 deletions(-)

commit 843ddc5f617b91ae132d6bab0f2f2d9c9fcd214a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-17 15:48:28 +0200

    liblzma: Wrap a line exceeding 80 chars.

 src/liblzma/rangecoder/range_decoder.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit e9053c907250c70d98b319d95fa54cb94fc76869
Author: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>
Date:   2024-02-16 21:50:15 +0100

    liblzma/rangecoder: Exclude x32 from the x86-64 optimisation.
    
    The x32 port has a x86-64 ABI in term of all registers but uses only
    32bit pointer like x86-32. The assembly optimisation fails to compile on
    x32. Given the state of x32 I suggest to exclude it from the
    optimisation rather than trying to fix it.
    
    Signed-off-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>

 src/liblzma/rangecoder/range_decoder.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 3d198fb13b87f8803442e5799d465f7434a70555
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-17 21:05:07 +0800

    Translations: Update the Spanish translation.

 po/es.po | 427 +++++++++++++++++++++++++++++++++------------------------------
 1 file changed, 226 insertions(+), 201 deletions(-)

commit cf278bfe60a25b54b3786f06503bc61272970820
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-17 20:43:29 +0800

    Translations: Update the Swedish translation.

 po/sv.po | 434 +++++++++++++++++++++++++++++++++------------------------------
 1 file changed, 230 insertions(+), 204 deletions(-)

commit b0f1a41be50560cc6cb528e8e96b02b2067c52c2
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-17 20:41:38 +0800

    Translations: Update the Polish translation.

 po/pl.po | 424 +++++++++++++++++++++++++++++++++------------------------------
 1 file changed, 224 insertions(+), 200 deletions(-)

commit d74ed48b30c631b6a4c7e7858b06828293bf8520
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-17 20:41:02 +0800

    Translations: Update the Ukrainian translation.

 po/uk.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 711e22d5c5f3bac39ac904efb3ede874a66e2045
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-16 17:53:34 +0200

    Translations: Use the same sentence in xz.pot-header that the TP uses.

 po/xz.pot-header | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit fb5f6aaf18584672d0fee5dbe41fd30fc6bf5422
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-16 22:53:46 +0800

    Fix typos discovered by codespell.

 AUTHORS                                | 2 +-
 NEWS                                   | 2 +-
 src/liblzma/rangecoder/range_decoder.h | 4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

commit c64723bbb094e29b4edd98f6fcce866e1b569b42
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-16 22:52:41 +0800

    Translations: Update the Ukrainian man page translations.

 po4a/uk.po | 1710 +++++++++++++++++++++++++++++++-----------------------------
 1 file changed, 873 insertions(+), 837 deletions(-)

commit 2895195ed0f68b245c7bd568c126ba6e685fa1d6
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-16 22:51:04 +0800

    Translations: Update the Ukrainian translation.

 po/uk.po | 466 ++++++++++++++++++++++++++++++---------------------------------
 1 file changed, 225 insertions(+), 241 deletions(-)

commit 4c20781f4c8f04879b64d631a4f44b4909147bde
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-15 22:32:52 +0200

    Translations: Omit the generic copyright line from man page headers.

 po4a/update-po | 1 +
 1 file changed, 1 insertion(+)

commit 4323bc3e0c1e1d2037d5e670a3bf6633e8a3031e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-15 22:26:43 +0800

    Update m4/.gitignore.

 m4/.gitignore | 1 +
 1 file changed, 1 insertion(+)

commit 5394a1665b7a108a54cb8b4ef3ebe59d3dbcca3a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 21:11:49 +0200

    Tests: tuktest.h: Treat Clang separately from GCC.
    
    Don't assume that Clang defines __GNUC__ as the extensions
    are available in clang-cl as well (and possibly in some other
    Clang variants?).

 tests/tuktest.h | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit cce7330b9f23485a0879422e0c3395a7065439ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 21:11:03 +0200

    Tests: tuktest.h: Add a missing word to a comment.

 tests/tuktest.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5dd8fc9452a3373cedc27379067ce638f992c741
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 21:10:10 +0200

    Tests: tuktest.h: Fix the comment about STest.

 tests/tuktest.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 6f1790254a03c5edf0f2976f773220f070450acd
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-15 01:53:40 +0800

    Bump version for 5.5.2beta.

 src/liblzma/api/lzma/version.h  | 4 ++--
 src/liblzma/liblzma_generic.map | 2 +-
 src/liblzma/liblzma_linux.map   | 2 +-
 3 files changed, 4 insertions(+), 4 deletions(-)

commit 924fdeedf48113fb1e0646d86bd89a356d21a055
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 19:46:11 +0200

    liblzma: Fix validate_map.sh.
    
    Adding the SPDX license identifier changed the line numbers.

 src/liblzma/validate_map.sh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 22140a2df6161b0110e6b4afa5ea0a07c5b60b01
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 19:38:34 +0200

    Build: Start the generated ChangeLog from around 5.4.0 instead of 5.2.0.

 Makefile.am | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 0b8cefa136c21d403a01b78517f4decb50172bdb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 19:27:46 +0200

    Fixed NEWS for 5.5.2beta.

 NEWS | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit a4557bad96361d93ea171ed859ac5a696fca824f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 19:21:45 +0200

    liblzma: Silence warnings in --enable-small build.

 src/liblzma/lzma/lzma_decoder.c        | 2 ++
 src/liblzma/rangecoder/range_decoder.h | 1 +
 2 files changed, 3 insertions(+)

commit 38edf473236d00b3e100dc4c4f0bf43a4993fed2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 19:15:58 +0200

    Build: Install COPYING.0BSD as part of docs.

 Makefile.am | 1 +
 1 file changed, 1 insertion(+)

commit b74e10bd839bcdc239afb5300ffaee195f34c217
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 19:14:05 +0200

    Docs: List COPYING.0BSD in README.

 README | 1 +
 1 file changed, 1 insertion(+)

commit dfdb60ffe933a1f1497d300dbb4513ed17ec6f0e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 19:11:48 +0200

    Docs: Include doc/examples/11_file_info.c in tarballs.
    
    It was added in 2017 in c2e29f06a7d1e3ba242ac2fafc69f5d6e92f62cd
    but it never got into any release tarballs because it was
    forgotten to be added to Makefile.am.

 Makefile.am | 1 +
 1 file changed, 1 insertion(+)

commit 160b6862646d95dfdbd73ab7f1031ede0f54992d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 19:05:58 +0200

    liblzma: Silence a warning.

 src/liblzma/rangecoder/range_decoder.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit eeedd4d0925ea417add04ceb42a6c0829244b50c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 18:32:27 +0200

    Add NEWS for 5.5.2beta.

 NEWS | 60 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 60 insertions(+)

commit 8af7db854f903068d72a9a0d21103cb0c5027fa8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-13 14:32:47 +0200

    xz: Mention lzmainfo if trying to use 'lzma --list'.
    
    This kind of fixes the problem reported here:
    https://bugs.launchpad.net/ubuntu/+source/xz-utils/+bug/1291020

 src/xz/list.c | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

commit 0668907ff736e4cd16738c10d39a2bc9e851aefb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-14 14:58:36 +0200

    liblzma: Add comments.

 src/liblzma/lzma/lzma_decoder.c        |  9 +++++++++
 src/liblzma/rangecoder/range_decoder.h | 11 +++++++++--
 2 files changed, 18 insertions(+), 2 deletions(-)

commit 109f1913d4824c8214d5bbd38ebebf62c37572da
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-13 17:00:17 +0200

    Scripts: Add lz4 support to xzgrep and xzdiff.

 src/scripts/xzdiff.1  |  8 +++++---
 src/scripts/xzdiff.in | 14 +++++++++-----
 src/scripts/xzgrep.1  |  6 ++++--
 src/scripts/xzgrep.in |  1 +
 4 files changed, 19 insertions(+), 10 deletions(-)

commit de55485cb23af56c5adbe3239b935c957ff8ac4f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-13 14:05:13 +0200

    liblzma: Choose the range decoder variants using a bitmask macro.

 src/liblzma/rangecoder/range_decoder.h | 64 ++++++++++++++++++++++++++++------
 1 file changed, 53 insertions(+), 11 deletions(-)

commit 0709c2b2d7c1d8f437b003f691880fd7810e5be5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-13 11:38:10 +0200

    xz: Fix outdated threading related info on the man page.

 src/xz/xz.1 | 22 ++++++++++++++--------
 1 file changed, 14 insertions(+), 8 deletions(-)

commit 3182a330c1512cc1f5c87b5c5a272578e60a5158
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    liblzma: Range decoder: Add x86-64 inline assembly.
    
    It's compatible with GCC and Clang.

 src/liblzma/rangecoder/range_decoder.h | 491 +++++++++++++++++++++++++++++++++
 1 file changed, 491 insertions(+)

commit cba2edc991dffba7cd4891dbc1bd26cb950cf053
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    liblzma: Range decoder: Add branchless C code.
    
    It's used only for basic bittrees and fixed-size reverse bittree
    because those showed a clear benefit on x86-64 with GCC and Clang.
    The other methods were more mixed and thus are commented out but
    they should be tested on other archs.

 src/liblzma/rangecoder/range_decoder.h | 76 ++++++++++++++++++++++++++++++++++
 1 file changed, 76 insertions(+)

commit e290a72d6dee71faf3a90c9678b2f730083666a7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    liblzma: Clarify a comment.

 src/liblzma/lzma/lzma_decoder.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit 5e04706b91ca90d6befd4da24a588a55e631d4a9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    liblzma: LZMA decoder: Optimize loop comparison.
    
    But now it needs one more local variable.

 src/liblzma/lzma/lzma_decoder.c        |  5 ++---
 src/liblzma/rangecoder/range_decoder.h | 10 +++++++++-
 2 files changed, 11 insertions(+), 4 deletions(-)

commit 88276f9f2cb4871c7eb86952d93d07c1cf6caa66
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    liblzma: Optimize literal_subcoder() macro slightly.

 src/liblzma/lzma/lzma_common.h                 | 22 ++++++++++++----------
 src/liblzma/lzma/lzma_decoder.c                | 12 ++++++------
 src/liblzma/lzma/lzma_encoder.c                |  6 +++---
 src/liblzma/lzma/lzma_encoder_optimum_normal.c |  2 +-
 src/liblzma/lzma/lzma_encoder_private.h        |  4 ++--
 5 files changed, 24 insertions(+), 22 deletions(-)

commit 5938f6de4d8ec9656776cd69e78ddfd6c3ad84e5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    liblzma: LZ decoder: Add unlikely().

 src/liblzma/lz/lz_decoder.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 9c252e3ed086c6b72590b2531586c42596d4a9d9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    liblzma: LZ decoder: Remove a useless unlikely().

 src/liblzma/lz/lz_decoder.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f3872a59475456c5d365cad9f1c5be514cfa54b5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    liblzma: Optimize LZ decoder slightly.
    
    Now extra buffer space is reserved so that repeating bytes for
    any single match will never need to copy from two places (both
    the beginning and the end of the buffer). This simplifies
    dict_repeat() and helps a little with speed.
    
    This seems to reduce .lzma decompression time about 2 %, so
    with .xz and CRC it could be slightly less. The small things
    add up still.

 src/liblzma/lz/lz_decoder.c     |  43 ++++++++++++-----
 src/liblzma/lz/lz_decoder.h     | 101 +++++++++++++++++++++-------------------
 src/liblzma/lzma/lzma_decoder.c |   4 +-
 3 files changed, 88 insertions(+), 60 deletions(-)

commit eb518446e578acf079abae5f1ce28db7b6e59bc1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    liblzma: LZMA decoder: Get rid of next_state[].
    
    It's not completely obvious if this is better in the decoder.
    It should be good if compiler can avoid creating a branch
    (like using CMOV on x86).
    
    This also makes lzma_encoder.c use the new macros.

 src/liblzma/lzma/lzma_common.h  | 14 ++++++++++++++
 src/liblzma/lzma/lzma_decoder.c | 30 ++++++++----------------------
 src/liblzma/lzma/lzma_encoder.c |  4 ++--
 3 files changed, 24 insertions(+), 24 deletions(-)

commit e0c0ee475c0800c08291ae45e0d66aa00d5ce604
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    liblzma: LZMA decoder improvements.
    
    This adds macros for bittree decoding which prepares the code
    for alternative C versions and inline assembly.

 src/liblzma/lzma/lzma_decoder.c        | 264 ++++++++++-----------------------
 src/liblzma/rangecoder/range_common.h  |   4 +
 src/liblzma/rangecoder/range_decoder.h | 142 ++++++++++++++++--
 3 files changed, 210 insertions(+), 200 deletions(-)

commit de5c5e417645ad8906ef914bc059d08c1462fc29
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-12 17:09:10 +0200

    liblzma: Creates Non-resumable and Resumable modes for lzma_decoder.
    
    The new decoder resumes the first decoder loop in the Resumable mode.
    Then, the code executes in Non-resumable mode until it detects that it
    cannot guarantee to have enough input/output to decode another symbol.
    
    The Resumable mode is how the decoder has always worked. Before decoding
    every input bit, it checks if there is enough space and will save its
    location to be resumed later. When the decoder has more input/output,
    it jumps back to the correct sequence in the Resumable mode code.
    
    When the input/output buffers are large, the Resumable mode is much
    slower than the Non-resumable because it has more branches and is harder
    for the compiler to optimize since it is in a large switch block.
    
    Early benchmarking shows significant time improvement (8-10% on gcc and
    clang x86) by using the Non-resumable code as much as possible.

 src/liblzma/lz/lz_decoder.h     |  14 +-
 src/liblzma/lzma/lzma_decoder.c | 720 ++++++++++++++++++++++++++++------------
 2 files changed, 521 insertions(+), 213 deletions(-)

commit e446ab7a18abfde18f8d1cf02a914df72b1370e3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-12 17:09:10 +0200

    liblzma: Creates separate "safe" range decoder mode.
    
    The new "safe" range decoder mode is the same as old range decoder, but
    now the default behavior of the range decoder will not check if there is
    enough input or output to complete the operation. When the buffers are
    close to fully consumed, the "safe" operations must be used instead. This
    will improve speed because it will reduce the number of branches needed
    for most of the range decoder operations.

 src/liblzma/lzma/lzma_decoder.c        | 108 ++++++++-------------------------
 src/liblzma/rangecoder/range_decoder.h |  77 +++++++++++++++++------
 2 files changed, 82 insertions(+), 103 deletions(-)

commit 7f6d9ca329ff3e01d4b0be7366eb4f5c93da41b9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    doxygen/footer.html: Add missing closing tags and don't open a new tab.
    
    The footer template from Doxygen has the closing </body> </html>
    as Doxygen doesn't add them otherwise.
    
    target="_blank" was omitted as it's not useful here but
    it can be slightly annoying as one cannot just go back
    in the browser history.
    
    Since the footer links to the license file in the same
    directory and not to CC website, the rel attributes
    can be omitted.

 doxygen/footer.html | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 26d1527d34d52b0f5d632d4fb636fb33d0867e92
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-13 13:19:10 +0200

    Tweak the expressions in AUTHORS.

 AUTHORS | 31 +++++++++++++++++++++++--------
 1 file changed, 23 insertions(+), 8 deletions(-)

commit d231d56580175fa040fdd3c6207a58243ce6217b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-13 13:07:33 +0200

    Translations: Add the man page translators into man page header comment.
    
    It looked odd to only have the original English authors listed
    in the header comments of the translated files.

 po4a/.gitignore |  1 +
 po4a/po4a.conf  | 14 +++++++-------
 po4a/update-po  | 18 ++++++++++++++++++
 3 files changed, 26 insertions(+), 7 deletions(-)

commit 6d35fcb936474fca1acaebfd9502c097b6fde88e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    Translations: Translate also messages of lzmainfo.
    
    lzmainfo has had translation support since 2009 at least but
    it was never added to po/POTFILES.in so the messages weren't
    translated. It's a very rarely needed tool so it's not too bad.
    
    This also adds src/xz/mytime.c to po/POTFILES.in although there
    are no translatable strings. It's simpler this way so that it
    won't be forgotten if strings were ever added to that file.

 po/POTFILES.in | 2 ++
 1 file changed, 2 insertions(+)

commit a9f369dd54b05f9ac4e00ead9d765d04fc259868
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    Translations: Add custom .pot header with SPDX license identifier.
    
    The same is used for both po/xz.pot and po4a/xz-man.pot.

 Makefile.am      | 1 +
 po/xz.pot-header | 7 +++++++
 po4a/update-po   | 8 ++++++++
 3 files changed, 16 insertions(+)

commit 469cd6653bb96e83c5cf1031c204d34566b15f44
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    Translations: po4a/update-po: Add copyright notice to xz-man.pot.
    
    All man pages are under 0BSD now so this is simple now.

 po4a/update-po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 28ce45e38fbed4b5f54f2013e38dab47d22bf699
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    Update COPYING about the man pages of the scripts.

 COPYING | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit e48287bf51afd5184ea74de1dcade9e153f873f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    xzdiff, xzgrep, and xzmore: Rewrite the man pages.
    
    The main reason is a kind of silly one:
    
    xz-man.pot contains strings from all man pages in XZ Utils.
    The man pages of xzdiff, xzgrep, and xzmore were under GPLv2
    and the rest under 0BSD. Thus xz-man.pot contained strings
    under two licences. po4a creates the translated man pages
    from the combined 0BSD+GPLv2 xz-man.pot.
    
    I haven't liked this mixing in xz-man.pot but the
    Translation Project requires that all man pages must be
    in the same .pot file. So a separate xz-man-gpl.pot
    wasn't an option.
    
    Since these man pages are short, rewriting them was quick enough.
    Now xz-man.pot is entirely under 0BSD and marking the per-file
    licenses is simpler.
    
    As a bonus, some wording hopefully is now slightly better
    although it's perhaps a matter of taste.
    
    NOTE: In xzgrep.1, the EXIT STATUS section was written by me
    in the commit d796b6d7fdb8b7238b277056cf9146cce25db604 so that's
    why that section could be taken as is from the old xzgrep.1.

 src/scripts/xzdiff.1 |  94 ++++++++++++++++++++++++-----------------
 src/scripts/xzgrep.1 | 116 ++++++++++++++++++++++++++++++++-------------------
 src/scripts/xzmore.1 |  79 ++++++++++++++++++++---------------
 3 files changed, 173 insertions(+), 116 deletions(-)

commit 3e551b111b8ae8150f1a1040364dbafc034f22be
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    xzless: Update man page slightly.
    
    The xz tool can decompress three file formats and xzless
    has always supported uncompressed files too.

 src/scripts/xzless.1 | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 40f36da2262d13d6e1ba8449caa855512ae626d7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    Translations: Change po/Makevars to add a copyright notice to po/xz.pot.

 po/Makevars | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 24192854e2ea5c06997431a98bda3c36c5da1497
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    Translations: Update po/Makevars to use the template from gettext 0.22.4.
    
    Also add SPDX license identifier now that there is a known license.

 po/Makevars | 51 ++++++++++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 46 insertions(+), 5 deletions(-)

commit b94154957370116480b43bcabca25fc52deb9853
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    liblzma: Include the SPDX license identifier 0BSD to generated files.
    
    Perhaps the generated files aren't even copyrightable but
    using the same license for them as for the rest of the liblzma
    keeps things more consistent for tools that look for license info.

 src/liblzma/check/crc32_table_be.h      |  4 +++-
 src/liblzma/check/crc32_table_le.h      |  4 +++-
 src/liblzma/check/crc32_tablegen.c      | 16 ++++++++++------
 src/liblzma/check/crc64_table_be.h      |  4 +++-
 src/liblzma/check/crc64_table_le.h      |  4 +++-
 src/liblzma/check/crc64_tablegen.c      |  8 +++++---
 src/liblzma/lz/lz_encoder_hash_table.h  |  4 +++-
 src/liblzma/lzma/fastpos_table.c        |  4 +++-
 src/liblzma/lzma/fastpos_tablegen.c     | 12 +++++++-----
 src/liblzma/rangecoder/price_table.c    |  4 +++-
 src/liblzma/rangecoder/price_tablegen.c | 12 +++++++-----
 11 files changed, 50 insertions(+), 26 deletions(-)

commit 8e4ec794836bc1701d8c9bd5e347b8ce8cc5bbb4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    liblzma: Fix compilation of price_tablegen.c.
    
    It is built and run only manually so this didn't matter
    unless one wanted to regenerate the price_table.c.

 src/liblzma/rangecoder/price_tablegen.c | 5 +++++
 src/liblzma/rangecoder/range_common.h   | 5 ++++-
 2 files changed, 9 insertions(+), 1 deletion(-)

commit e99bff3ffbcdf2634fd5bd13887627ec7dbfecaf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    Add SPDX license identifiers to GPL, LGPL, and FSFULLR files.

 extra/scanlzma/scanlzma.c | 2 ++
 lib/Makefile.am           | 2 ++
 lib/getopt-cdefs.h        | 2 ++
 lib/getopt-core.h         | 2 ++
 lib/getopt-ext.h          | 2 ++
 lib/getopt-pfx-core.h     | 2 ++
 lib/getopt-pfx-ext.h      | 2 ++
 lib/getopt.c              | 2 ++
 lib/getopt.in.h           | 2 ++
 lib/getopt1.c             | 2 ++
 lib/getopt_int.h          | 2 ++
 m4/ax_pthread.m4          | 2 ++
 m4/getopt.m4              | 2 ++
 m4/posix-shell.m4         | 2 ++
 m4/visibility.m4          | 2 ++
 src/scripts/xzdiff.1      | 3 +--
 src/scripts/xzdiff.in     | 1 +
 src/scripts/xzgrep.1      | 3 +--
 src/scripts/xzgrep.in     | 1 +
 src/scripts/xzless.in     | 1 +
 src/scripts/xzmore.1      | 3 +--
 src/scripts/xzmore.in     | 1 +
 22 files changed, 37 insertions(+), 6 deletions(-)

commit 22af94128b89a131f5e58ae69bee5e50227c15da
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    Add SPDX license identifier into 0BSD source code files.

 .github/workflows/ci.yml                       | 2 ++
 .github/workflows/windows-ci.yml               | 2 ++
 CMakeLists.txt                                 | 2 ++
 Makefile.am                                    | 3 +--
 autogen.sh                                     | 1 +
 build-aux/ci_build.sh                          | 3 ++-
 build-aux/manconv.sh                           | 3 ++-
 build-aux/version.sh                           | 3 ++-
 cmake/remove-ordinals.cmake                    | 2 ++
 cmake/tuklib_common.cmake                      | 4 ++++
 cmake/tuklib_cpucores.cmake                    | 4 ++++
 cmake/tuklib_integer.cmake                     | 4 ++++
 cmake/tuklib_large_file_support.cmake          | 4 ++++
 cmake/tuklib_mbstr.cmake                       | 4 ++++
 cmake/tuklib_physmem.cmake                     | 4 ++++
 cmake/tuklib_progname.cmake                    | 4 ++++
 configure.ac                                   | 4 +++-
 debug/Makefile.am                              | 3 +--
 debug/crc32.c                                  | 2 ++
 debug/full_flush.c                             | 2 ++
 debug/hex2bin.c                                | 2 ++
 debug/known_sizes.c                            | 2 ++
 debug/memusage.c                               | 2 ++
 debug/repeat.c                                 | 2 ++
 debug/sync_flush.c                             | 2 ++
 debug/translation.bash                         | 1 +
 doc/examples/01_compress_easy.c                | 2 ++
 doc/examples/02_decompress.c                   | 2 ++
 doc/examples/03_compress_custom.c              | 2 ++
 doc/examples/04_compress_easy_mt.c             | 2 ++
 doc/examples/11_file_info.c                    | 2 ++
 doc/examples/Makefile                          | 3 +--
 dos/Makefile                                   | 2 ++
 dos/config.h                                   | 2 ++
 doxygen/update-doxygen                         | 3 ++-
 extra/7z2lzma/7z2lzma.bash                     | 3 ++-
 m4/tuklib_common.m4                            | 8 ++++++--
 m4/tuklib_cpucores.m4                          | 8 ++++++--
 m4/tuklib_integer.m4                           | 8 ++++++--
 m4/tuklib_mbstr.m4                             | 8 ++++++--
 m4/tuklib_physmem.m4                           | 8 ++++++--
 m4/tuklib_progname.m4                          | 8 ++++++--
 po/POTFILES.in                                 | 2 ++
 po4a/po4a.conf                                 | 2 ++
 po4a/update-po                                 | 3 ++-
 src/Makefile.am                                | 3 +--
 src/common/common_w32res.rc                    | 2 ++
 src/common/mythread.h                          | 2 ++
 src/common/sysdefs.h                           | 2 ++
 src/common/tuklib_common.h                     | 2 ++
 src/common/tuklib_config.h                     | 2 ++
 src/common/tuklib_cpucores.c                   | 2 ++
 src/common/tuklib_cpucores.h                   | 2 ++
 src/common/tuklib_exit.c                       | 2 ++
 src/common/tuklib_exit.h                       | 2 ++
 src/common/tuklib_gettext.h                    | 2 ++
 src/common/tuklib_integer.h                    | 2 ++
 src/common/tuklib_mbstr.h                      | 2 ++
 src/common/tuklib_mbstr_fw.c                   | 2 ++
 src/common/tuklib_mbstr_width.c                | 2 ++
 src/common/tuklib_open_stdxxx.c                | 2 ++
 src/common/tuklib_open_stdxxx.h                | 2 ++
 src/common/tuklib_physmem.c                    | 2 ++
 src/common/tuklib_physmem.h                    | 2 ++
 src/common/tuklib_progname.c                   | 2 ++
 src/common/tuklib_progname.h                   | 2 ++
 src/liblzma/Makefile.am                        | 3 +--
 src/liblzma/api/Makefile.am                    | 3 +--
 src/liblzma/api/lzma.h                         | 2 ++
 src/liblzma/api/lzma/base.h                    | 2 ++
 src/liblzma/api/lzma/bcj.h                     | 2 ++
 src/liblzma/api/lzma/block.h                   | 2 ++
 src/liblzma/api/lzma/check.h                   | 2 ++
 src/liblzma/api/lzma/container.h               | 2 ++
 src/liblzma/api/lzma/delta.h                   | 2 ++
 src/liblzma/api/lzma/filter.h                  | 2 ++
 src/liblzma/api/lzma/hardware.h                | 2 ++
 src/liblzma/api/lzma/index.h                   | 2 ++
 src/liblzma/api/lzma/index_hash.h              | 2 ++
 src/liblzma/api/lzma/lzma12.h                  | 2 ++
 src/liblzma/api/lzma/stream_flags.h            | 2 ++
 src/liblzma/api/lzma/version.h                 | 2 ++
 src/liblzma/api/lzma/vli.h                     | 2 ++
 src/liblzma/check/Makefile.inc                 | 4 ++--
 src/liblzma/check/check.c                      | 2 ++
 src/liblzma/check/check.h                      | 2 ++
 src/liblzma/check/crc32_arm64.h                | 2 ++
 src/liblzma/check/crc32_fast.c                 | 2 ++
 src/liblzma/check/crc32_small.c                | 2 ++
 src/liblzma/check/crc32_table.c                | 2 ++
 src/liblzma/check/crc32_tablegen.c             | 2 ++
 src/liblzma/check/crc32_x86.S                  | 2 ++
 src/liblzma/check/crc64_fast.c                 | 2 ++
 src/liblzma/check/crc64_small.c                | 2 ++
 src/liblzma/check/crc64_table.c                | 2 ++
 src/liblzma/check/crc64_tablegen.c             | 2 ++
 src/liblzma/check/crc64_x86.S                  | 2 ++
 src/liblzma/check/crc_common.h                 | 2 ++
 src/liblzma/check/crc_x86_clmul.h              | 2 ++
 src/liblzma/check/sha256.c                     | 2 ++
 src/liblzma/common/Makefile.inc                | 3 +--
 src/liblzma/common/alone_decoder.c             | 2 ++
 src/liblzma/common/alone_decoder.h             | 2 ++
 src/liblzma/common/alone_encoder.c             | 2 ++
 src/liblzma/common/auto_decoder.c              | 2 ++
 src/liblzma/common/block_buffer_decoder.c      | 2 ++
 src/liblzma/common/block_buffer_encoder.c      | 2 ++
 src/liblzma/common/block_buffer_encoder.h      | 2 ++
 src/liblzma/common/block_decoder.c             | 2 ++
 src/liblzma/common/block_decoder.h             | 2 ++
 src/liblzma/common/block_encoder.c             | 2 ++
 src/liblzma/common/block_encoder.h             | 2 ++
 src/liblzma/common/block_header_decoder.c      | 2 ++
 src/liblzma/common/block_header_encoder.c      | 2 ++
 src/liblzma/common/block_util.c                | 2 ++
 src/liblzma/common/common.c                    | 2 ++
 src/liblzma/common/common.h                    | 2 ++
 src/liblzma/common/easy_buffer_encoder.c       | 2 ++
 src/liblzma/common/easy_decoder_memusage.c     | 2 ++
 src/liblzma/common/easy_encoder.c              | 2 ++
 src/liblzma/common/easy_encoder_memusage.c     | 2 ++
 src/liblzma/common/easy_preset.c               | 2 ++
 src/liblzma/common/easy_preset.h               | 2 ++
 src/liblzma/common/file_info.c                 | 2 ++
 src/liblzma/common/filter_buffer_decoder.c     | 2 ++
 src/liblzma/common/filter_buffer_encoder.c     | 2 ++
 src/liblzma/common/filter_common.c             | 2 ++
 src/liblzma/common/filter_common.h             | 2 ++
 src/liblzma/common/filter_decoder.c            | 2 ++
 src/liblzma/common/filter_decoder.h            | 2 ++
 src/liblzma/common/filter_encoder.c            | 2 ++
 src/liblzma/common/filter_encoder.h            | 2 ++
 src/liblzma/common/filter_flags_decoder.c      | 2 ++
 src/liblzma/common/filter_flags_encoder.c      | 2 ++
 src/liblzma/common/hardware_cputhreads.c       | 2 ++
 src/liblzma/common/hardware_physmem.c          | 2 ++
 src/liblzma/common/index.c                     | 2 ++
 src/liblzma/common/index.h                     | 2 ++
 src/liblzma/common/index_decoder.c             | 2 ++
 src/liblzma/common/index_decoder.h             | 2 ++
 src/liblzma/common/index_encoder.c             | 2 ++
 src/liblzma/common/index_encoder.h             | 2 ++
 src/liblzma/common/index_hash.c                | 2 ++
 src/liblzma/common/lzip_decoder.c              | 2 ++
 src/liblzma/common/lzip_decoder.h              | 2 ++
 src/liblzma/common/memcmplen.h                 | 2 ++
 src/liblzma/common/microlzma_decoder.c         | 2 ++
 src/liblzma/common/microlzma_encoder.c         | 2 ++
 src/liblzma/common/outqueue.c                  | 2 ++
 src/liblzma/common/outqueue.h                  | 2 ++
 src/liblzma/common/stream_buffer_decoder.c     | 2 ++
 src/liblzma/common/stream_buffer_encoder.c     | 2 ++
 src/liblzma/common/stream_decoder.c            | 2 ++
 src/liblzma/common/stream_decoder.h            | 2 ++
 src/liblzma/common/stream_decoder_mt.c         | 2 ++
 src/liblzma/common/stream_encoder.c            | 2 ++
 src/liblzma/common/stream_encoder_mt.c         | 2 ++
 src/liblzma/common/stream_flags_common.c       | 2 ++
 src/liblzma/common/stream_flags_common.h       | 2 ++
 src/liblzma/common/stream_flags_decoder.c      | 2 ++
 src/liblzma/common/stream_flags_encoder.c      | 2 ++
 src/liblzma/common/string_conversion.c         | 2 ++
 src/liblzma/common/vli_decoder.c               | 2 ++
 src/liblzma/common/vli_encoder.c               | 2 ++
 src/liblzma/common/vli_size.c                  | 2 ++
 src/liblzma/delta/Makefile.inc                 | 3 +--
 src/liblzma/delta/delta_common.c               | 2 ++
 src/liblzma/delta/delta_common.h               | 2 ++
 src/liblzma/delta/delta_decoder.c              | 2 ++
 src/liblzma/delta/delta_decoder.h              | 2 ++
 src/liblzma/delta/delta_encoder.c              | 2 ++
 src/liblzma/delta/delta_encoder.h              | 2 ++
 src/liblzma/delta/delta_private.h              | 2 ++
 src/liblzma/liblzma.pc.in                      | 3 +--
 src/liblzma/liblzma_generic.map                | 2 ++
 src/liblzma/liblzma_linux.map                  | 2 ++
 src/liblzma/liblzma_w32res.rc                  | 2 ++
 src/liblzma/lz/Makefile.inc                    | 3 +--
 src/liblzma/lz/lz_decoder.c                    | 2 ++
 src/liblzma/lz/lz_decoder.h                    | 2 ++
 src/liblzma/lz/lz_encoder.c                    | 2 ++
 src/liblzma/lz/lz_encoder.h                    | 2 ++
 src/liblzma/lz/lz_encoder_hash.h               | 2 ++
 src/liblzma/lz/lz_encoder_mf.c                 | 2 ++
 src/liblzma/lzma/Makefile.inc                  | 3 +--
 src/liblzma/lzma/fastpos.h                     | 2 ++
 src/liblzma/lzma/fastpos_tablegen.c            | 2 ++
 src/liblzma/lzma/lzma2_decoder.c               | 2 ++
 src/liblzma/lzma/lzma2_decoder.h               | 2 ++
 src/liblzma/lzma/lzma2_encoder.c               | 2 ++
 src/liblzma/lzma/lzma2_encoder.h               | 2 ++
 src/liblzma/lzma/lzma_common.h                 | 2 ++
 src/liblzma/lzma/lzma_decoder.c                | 2 ++
 src/liblzma/lzma/lzma_decoder.h                | 2 ++
 src/liblzma/lzma/lzma_encoder.c                | 2 ++
 src/liblzma/lzma/lzma_encoder.h                | 2 ++
 src/liblzma/lzma/lzma_encoder_optimum_fast.c   | 2 ++
 src/liblzma/lzma/lzma_encoder_optimum_normal.c | 2 ++
 src/liblzma/lzma/lzma_encoder_presets.c        | 2 ++
 src/liblzma/lzma/lzma_encoder_private.h        | 2 ++
 src/liblzma/rangecoder/Makefile.inc            | 3 +--
 src/liblzma/rangecoder/price.h                 | 2 ++
 src/liblzma/rangecoder/price_tablegen.c        | 2 ++
 src/liblzma/rangecoder/range_common.h          | 2 ++
 src/liblzma/rangecoder/range_decoder.h         | 2 ++
 src/liblzma/rangecoder/range_encoder.h         | 2 ++
 src/liblzma/simple/Makefile.inc                | 3 +--
 src/liblzma/simple/arm.c                       | 2 ++
 src/liblzma/simple/arm64.c                     | 2 ++
 src/liblzma/simple/armthumb.c                  | 2 ++
 src/liblzma/simple/ia64.c                      | 2 ++
 src/liblzma/simple/powerpc.c                   | 2 ++
 src/liblzma/simple/riscv.c                     | 2 ++
 src/liblzma/simple/simple_coder.c              | 2 ++
 src/liblzma/simple/simple_coder.h              | 2 ++
 src/liblzma/simple/simple_decoder.c            | 2 ++
 src/liblzma/simple/simple_decoder.h            | 2 ++
 src/liblzma/simple/simple_encoder.c            | 2 ++
 src/liblzma/simple/simple_encoder.h            | 2 ++
 src/liblzma/simple/simple_private.h            | 2 ++
 src/liblzma/simple/sparc.c                     | 2 ++
 src/liblzma/simple/x86.c                       | 2 ++
 src/liblzma/validate_map.sh                    | 1 +
 src/lzmainfo/Makefile.am                       | 3 +--
 src/lzmainfo/lzmainfo.c                        | 2 ++
 src/lzmainfo/lzmainfo_w32res.rc                | 2 ++
 src/scripts/Makefile.am                        | 3 +--
 src/xz/Makefile.am                             | 3 +--
 src/xz/args.c                                  | 2 ++
 src/xz/args.h                                  | 2 ++
 src/xz/coder.c                                 | 2 ++
 src/xz/coder.h                                 | 2 ++
 src/xz/file_io.c                               | 2 ++
 src/xz/file_io.h                               | 2 ++
 src/xz/hardware.c                              | 2 ++
 src/xz/hardware.h                              | 2 ++
 src/xz/list.c                                  | 2 ++
 src/xz/list.h                                  | 2 ++
 src/xz/main.c                                  | 2 ++
 src/xz/main.h                                  | 2 ++
 src/xz/message.c                               | 2 ++
 src/xz/message.h                               | 2 ++
 src/xz/mytime.c                                | 2 ++
 src/xz/mytime.h                                | 2 ++
 src/xz/options.c                               | 2 ++
 src/xz/options.h                               | 2 ++
 src/xz/private.h                               | 2 ++
 src/xz/signals.c                               | 2 ++
 src/xz/signals.h                               | 2 ++
 src/xz/suffix.c                                | 2 ++
 src/xz/suffix.h                                | 2 ++
 src/xz/util.c                                  | 2 ++
 src/xz/util.h                                  | 2 ++
 src/xz/xz_w32res.rc                            | 2 ++
 src/xzdec/Makefile.am                          | 3 +--
 src/xzdec/lzmadec_w32res.rc                    | 2 ++
 src/xzdec/xzdec.c                              | 2 ++
 src/xzdec/xzdec_w32res.rc                      | 2 ++
 tests/Makefile.am                              | 3 +--
 tests/bcj_test.c                               | 2 ++
 tests/code_coverage.sh                         | 1 +
 tests/create_compress_files.c                  | 2 ++
 tests/ossfuzz/fuzz_common.h                    | 2 ++
 tests/ossfuzz/fuzz_decode_alone.c              | 2 ++
 tests/ossfuzz/fuzz_decode_stream.c             | 2 ++
 tests/ossfuzz/fuzz_encode_stream.c             | 2 ++
 tests/test_bcj_exact_size.c                    | 2 ++
 tests/test_block_header.c                      | 2 ++
 tests/test_check.c                             | 2 ++
 tests/test_compress.sh                         | 1 +
 tests/test_compress_generated_abc              | 1 +
 tests/test_compress_generated_random           | 1 +
 tests/test_compress_generated_text             | 1 +
 tests/test_compress_prepared_bcj_sparc         | 1 +
 tests/test_compress_prepared_bcj_x86           | 1 +
 tests/test_files.sh                            | 1 +
 tests/test_filter_flags.c                      | 2 ++
 tests/test_filter_str.c                        | 2 ++
 tests/test_hardware.c                          | 2 ++
 tests/test_index.c                             | 2 ++
 tests/test_index_hash.c                        | 2 ++
 tests/test_lzip_decoder.c                      | 2 ++
 tests/test_memlimit.c                          | 2 ++
 tests/test_scripts.sh                          | 1 +
 tests/test_stream_flags.c                      | 2 ++
 tests/test_suffix.sh                           | 1 +
 tests/test_vli.c                               | 2 ++
 tests/tests.h                                  | 2 ++
 tests/tuktest.h                                | 2 ++
 windows/build.bash                             | 3 ++-
 290 files changed, 588 insertions(+), 58 deletions(-)

commit 23de53421ea258cde6a3c33a038b1e9d08f771d1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 23:25:54 +0200

    liblzma: Sync the AUTHORS fix about SHA-256 to lzma.h.

 src/liblzma/api/lzma.h | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

commit 689e0228baeb95232430e90d628379db89583d71
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-12 17:09:10 +0200

    Change most public domain parts to 0BSD.
    
    Translations and doc/xz-file-format.txt and doc/lzma-file-format.txt
    were not touched.
    
    COPYING.0BSD was added.

 .github/workflows/ci.yml                       |   3 -
 .github/workflows/windows-ci.yml               |   3 -
 CMakeLists.txt                                 |   3 -
 COPYING                                        | 112 ++++++++++++++-----------
 COPYING.0BSD                                   |  11 +++
 Makefile.am                                    |   3 -
 PACKAGERS                                      |  11 +--
 autogen.sh                                     |   3 -
 build-aux/ci_build.sh                          |   3 -
 build-aux/manconv.sh                           |   3 -
 build-aux/version.sh                           |   3 -
 cmake/remove-ordinals.cmake                    |   3 -
 cmake/tuklib_common.cmake                      |   3 -
 cmake/tuklib_cpucores.cmake                    |   3 -
 cmake/tuklib_integer.cmake                     |   3 -
 cmake/tuklib_large_file_support.cmake          |   3 -
 cmake/tuklib_mbstr.cmake                       |   3 -
 cmake/tuklib_physmem.cmake                     |   3 -
 cmake/tuklib_progname.cmake                    |   3 -
 configure.ac                                   |   3 -
 debug/Makefile.am                              |   3 -
 debug/crc32.c                                  |   3 -
 debug/full_flush.c                             |   3 -
 debug/hex2bin.c                                |   3 -
 debug/known_sizes.c                            |   3 -
 debug/memusage.c                               |   3 -
 debug/repeat.c                                 |   3 -
 debug/sync_flush.c                             |   3 -
 debug/translation.bash                         |   3 -
 doc/examples/01_compress_easy.c                |   3 -
 doc/examples/02_decompress.c                   |   3 -
 doc/examples/03_compress_custom.c              |   3 -
 doc/examples/04_compress_easy_mt.c             |   3 -
 doc/examples/11_file_info.c                    |   3 -
 doc/examples/Makefile                          |   3 -
 dos/Makefile                                   |   3 -
 doxygen/update-doxygen                         |   3 -
 extra/7z2lzma/7z2lzma.bash                     |   3 -
 m4/tuklib_common.m4                            |   3 -
 m4/tuklib_cpucores.m4                          |   3 -
 m4/tuklib_integer.m4                           |   3 -
 m4/tuklib_mbstr.m4                             |   3 -
 m4/tuklib_physmem.m4                           |   3 -
 m4/tuklib_progname.m4                          |   3 -
 po4a/update-po                                 |   3 -
 src/Makefile.am                                |   3 -
 src/common/common_w32res.rc                    |   3 -
 src/common/mythread.h                          |   3 -
 src/common/sysdefs.h                           |   3 -
 src/common/tuklib_common.h                     |   3 -
 src/common/tuklib_cpucores.c                   |   3 -
 src/common/tuklib_cpucores.h                   |   3 -
 src/common/tuklib_exit.c                       |   3 -
 src/common/tuklib_exit.h                       |   3 -
 src/common/tuklib_gettext.h                    |   3 -
 src/common/tuklib_integer.h                    |   3 -
 src/common/tuklib_mbstr.h                      |   3 -
 src/common/tuklib_mbstr_fw.c                   |   3 -
 src/common/tuklib_mbstr_width.c                |   3 -
 src/common/tuklib_open_stdxxx.c                |   3 -
 src/common/tuklib_open_stdxxx.h                |   3 -
 src/common/tuklib_physmem.c                    |   3 -
 src/common/tuklib_physmem.h                    |   3 -
 src/common/tuklib_progname.c                   |   3 -
 src/common/tuklib_progname.h                   |   3 -
 src/liblzma/Makefile.am                        |   3 -
 src/liblzma/api/Makefile.am                    |   3 -
 src/liblzma/api/lzma.h                         |  13 ++-
 src/liblzma/api/lzma/base.h                    |   3 -
 src/liblzma/api/lzma/bcj.h                     |   3 -
 src/liblzma/api/lzma/block.h                   |   3 -
 src/liblzma/api/lzma/check.h                   |   3 -
 src/liblzma/api/lzma/container.h               |   3 -
 src/liblzma/api/lzma/delta.h                   |   3 -
 src/liblzma/api/lzma/filter.h                  |   3 -
 src/liblzma/api/lzma/hardware.h                |   3 -
 src/liblzma/api/lzma/index.h                   |   3 -
 src/liblzma/api/lzma/index_hash.h              |   3 -
 src/liblzma/api/lzma/lzma12.h                  |   3 -
 src/liblzma/api/lzma/stream_flags.h            |   3 -
 src/liblzma/api/lzma/version.h                 |   3 -
 src/liblzma/api/lzma/vli.h                     |   3 -
 src/liblzma/check/Makefile.inc                 |   3 -
 src/liblzma/check/check.c                      |   3 -
 src/liblzma/check/check.h                      |   3 -
 src/liblzma/check/crc32_arm64.h                |   3 -
 src/liblzma/check/crc32_fast.c                 |   3 -
 src/liblzma/check/crc32_small.c                |   3 -
 src/liblzma/check/crc32_table.c                |   3 -
 src/liblzma/check/crc32_tablegen.c             |   3 -
 src/liblzma/check/crc32_x86.S                  |   3 -
 src/liblzma/check/crc64_fast.c                 |   3 -
 src/liblzma/check/crc64_small.c                |   3 -
 src/liblzma/check/crc64_table.c                |   3 -
 src/liblzma/check/crc64_tablegen.c             |   3 -
 src/liblzma/check/crc64_x86.S                  |   3 -
 src/liblzma/check/crc_common.h                 |   3 -
 src/liblzma/check/crc_x86_clmul.h              |   3 -
 src/liblzma/check/sha256.c                     |   3 -
 src/liblzma/common/Makefile.inc                |   3 -
 src/liblzma/common/alone_decoder.c             |   3 -
 src/liblzma/common/alone_decoder.h             |   3 -
 src/liblzma/common/alone_encoder.c             |   3 -
 src/liblzma/common/auto_decoder.c              |   3 -
 src/liblzma/common/block_buffer_decoder.c      |   3 -
 src/liblzma/common/block_buffer_encoder.c      |   3 -
 src/liblzma/common/block_buffer_encoder.h      |   3 -
 src/liblzma/common/block_decoder.c             |   3 -
 src/liblzma/common/block_decoder.h             |   3 -
 src/liblzma/common/block_encoder.c             |   3 -
 src/liblzma/common/block_encoder.h             |   3 -
 src/liblzma/common/block_header_decoder.c      |   3 -
 src/liblzma/common/block_header_encoder.c      |   3 -
 src/liblzma/common/block_util.c                |   3 -
 src/liblzma/common/common.c                    |   3 -
 src/liblzma/common/common.h                    |   3 -
 src/liblzma/common/easy_buffer_encoder.c       |   3 -
 src/liblzma/common/easy_decoder_memusage.c     |   3 -
 src/liblzma/common/easy_encoder.c              |   3 -
 src/liblzma/common/easy_encoder_memusage.c     |   3 -
 src/liblzma/common/easy_preset.c               |   3 -
 src/liblzma/common/easy_preset.h               |   3 -
 src/liblzma/common/file_info.c                 |   3 -
 src/liblzma/common/filter_buffer_decoder.c     |   3 -
 src/liblzma/common/filter_buffer_encoder.c     |   3 -
 src/liblzma/common/filter_common.c             |   3 -
 src/liblzma/common/filter_common.h             |   3 -
 src/liblzma/common/filter_decoder.c            |   3 -
 src/liblzma/common/filter_decoder.h            |   3 -
 src/liblzma/common/filter_encoder.c            |   3 -
 src/liblzma/common/filter_encoder.h            |   3 -
 src/liblzma/common/filter_flags_decoder.c      |   3 -
 src/liblzma/common/filter_flags_encoder.c      |   3 -
 src/liblzma/common/hardware_cputhreads.c       |   3 -
 src/liblzma/common/hardware_physmem.c          |   3 -
 src/liblzma/common/index.c                     |   3 -
 src/liblzma/common/index.h                     |   3 -
 src/liblzma/common/index_decoder.c             |   3 -
 src/liblzma/common/index_decoder.h             |   3 -
 src/liblzma/common/index_encoder.c             |   3 -
 src/liblzma/common/index_encoder.h             |   3 -
 src/liblzma/common/index_hash.c                |   3 -
 src/liblzma/common/lzip_decoder.c              |   3 -
 src/liblzma/common/lzip_decoder.h              |   3 -
 src/liblzma/common/memcmplen.h                 |   3 -
 src/liblzma/common/microlzma_decoder.c         |   3 -
 src/liblzma/common/microlzma_encoder.c         |   3 -
 src/liblzma/common/outqueue.c                  |   3 -
 src/liblzma/common/outqueue.h                  |   3 -
 src/liblzma/common/stream_buffer_decoder.c     |   3 -
 src/liblzma/common/stream_buffer_encoder.c     |   3 -
 src/liblzma/common/stream_decoder.c            |   3 -
 src/liblzma/common/stream_decoder.h            |   3 -
 src/liblzma/common/stream_decoder_mt.c         |   3 -
 src/liblzma/common/stream_encoder.c            |   3 -
 src/liblzma/common/stream_encoder_mt.c         |   3 -
 src/liblzma/common/stream_flags_common.c       |   3 -
 src/liblzma/common/stream_flags_common.h       |   3 -
 src/liblzma/common/stream_flags_decoder.c      |   3 -
 src/liblzma/common/stream_flags_encoder.c      |   3 -
 src/liblzma/common/string_conversion.c         |   3 -
 src/liblzma/common/vli_decoder.c               |   3 -
 src/liblzma/common/vli_encoder.c               |   3 -
 src/liblzma/common/vli_size.c                  |   3 -
 src/liblzma/delta/Makefile.inc                 |   3 -
 src/liblzma/delta/delta_common.c               |   3 -
 src/liblzma/delta/delta_common.h               |   3 -
 src/liblzma/delta/delta_decoder.c              |   3 -
 src/liblzma/delta/delta_decoder.h              |   3 -
 src/liblzma/delta/delta_encoder.c              |   3 -
 src/liblzma/delta/delta_encoder.h              |   3 -
 src/liblzma/delta/delta_private.h              |   3 -
 src/liblzma/liblzma.pc.in                      |   3 -
 src/liblzma/liblzma_w32res.rc                  |   3 -
 src/liblzma/lz/Makefile.inc                    |   3 -
 src/liblzma/lz/lz_decoder.c                    |   3 -
 src/liblzma/lz/lz_decoder.h                    |   3 -
 src/liblzma/lz/lz_encoder.c                    |   3 -
 src/liblzma/lz/lz_encoder.h                    |   3 -
 src/liblzma/lz/lz_encoder_hash.h               |   3 -
 src/liblzma/lz/lz_encoder_mf.c                 |   3 -
 src/liblzma/lzma/Makefile.inc                  |   3 -
 src/liblzma/lzma/fastpos.h                     |   3 -
 src/liblzma/lzma/fastpos_tablegen.c            |   3 -
 src/liblzma/lzma/lzma2_decoder.c               |   3 -
 src/liblzma/lzma/lzma2_decoder.h               |   3 -
 src/liblzma/lzma/lzma2_encoder.c               |   3 -
 src/liblzma/lzma/lzma2_encoder.h               |   3 -
 src/liblzma/lzma/lzma_common.h                 |   3 -
 src/liblzma/lzma/lzma_decoder.c                |   3 -
 src/liblzma/lzma/lzma_decoder.h                |   3 -
 src/liblzma/lzma/lzma_encoder.c                |   3 -
 src/liblzma/lzma/lzma_encoder.h                |   3 -
 src/liblzma/lzma/lzma_encoder_optimum_fast.c   |   3 -
 src/liblzma/lzma/lzma_encoder_optimum_normal.c |   3 -
 src/liblzma/lzma/lzma_encoder_presets.c        |   3 -
 src/liblzma/lzma/lzma_encoder_private.h        |   3 -
 src/liblzma/rangecoder/Makefile.inc            |   3 -
 src/liblzma/rangecoder/price.h                 |   3 -
 src/liblzma/rangecoder/price_tablegen.c        |   3 -
 src/liblzma/rangecoder/range_common.h          |   3 -
 src/liblzma/rangecoder/range_decoder.h         |   3 -
 src/liblzma/rangecoder/range_encoder.h         |   3 -
 src/liblzma/simple/Makefile.inc                |   3 -
 src/liblzma/simple/arm.c                       |   3 -
 src/liblzma/simple/arm64.c                     |   3 -
 src/liblzma/simple/armthumb.c                  |   3 -
 src/liblzma/simple/ia64.c                      |   3 -
 src/liblzma/simple/powerpc.c                   |   3 -
 src/liblzma/simple/riscv.c                     |   3 -
 src/liblzma/simple/simple_coder.c              |   3 -
 src/liblzma/simple/simple_coder.h              |   3 -
 src/liblzma/simple/simple_decoder.c            |   3 -
 src/liblzma/simple/simple_decoder.h            |   3 -
 src/liblzma/simple/simple_encoder.c            |   3 -
 src/liblzma/simple/simple_encoder.h            |   3 -
 src/liblzma/simple/simple_private.h            |   3 -
 src/liblzma/simple/sparc.c                     |   3 -
 src/liblzma/simple/x86.c                       |   3 -
 src/liblzma/validate_map.sh                    |   3 -
 src/lzmainfo/Makefile.am                       |   3 -
 src/lzmainfo/lzmainfo.1                        |   4 +-
 src/lzmainfo/lzmainfo.c                        |   3 -
 src/lzmainfo/lzmainfo_w32res.rc                |   3 -
 src/scripts/Makefile.am                        |   3 -
 src/scripts/xzless.1                           |   4 +-
 src/xz/Makefile.am                             |   3 -
 src/xz/args.c                                  |   3 -
 src/xz/args.h                                  |   3 -
 src/xz/coder.c                                 |   3 -
 src/xz/coder.h                                 |   3 -
 src/xz/file_io.c                               |   3 -
 src/xz/file_io.h                               |   3 -
 src/xz/hardware.c                              |   3 -
 src/xz/hardware.h                              |   3 -
 src/xz/list.c                                  |   3 -
 src/xz/list.h                                  |   3 -
 src/xz/main.c                                  |   3 -
 src/xz/main.h                                  |   3 -
 src/xz/message.c                               |   3 -
 src/xz/message.h                               |   3 -
 src/xz/mytime.c                                |   3 -
 src/xz/mytime.h                                |   3 -
 src/xz/options.c                               |   3 -
 src/xz/options.h                               |   3 -
 src/xz/private.h                               |   3 -
 src/xz/signals.c                               |   3 -
 src/xz/signals.h                               |   3 -
 src/xz/suffix.c                                |   3 -
 src/xz/suffix.h                                |   3 -
 src/xz/util.c                                  |   3 -
 src/xz/util.h                                  |   3 -
 src/xz/xz.1                                    |   4 +-
 src/xz/xz_w32res.rc                            |   3 -
 src/xzdec/Makefile.am                          |   3 -
 src/xzdec/lzmadec_w32res.rc                    |   3 -
 src/xzdec/xzdec.1                              |   4 +-
 src/xzdec/xzdec.c                              |   3 -
 src/xzdec/xzdec_w32res.rc                      |   3 -
 tests/Makefile.am                              |   3 -
 tests/bcj_test.c                               |   3 -
 tests/code_coverage.sh                         |   3 -
 tests/create_compress_files.c                  |   3 -
 tests/files/README                             |   3 +-
 tests/ossfuzz/fuzz_common.h                    |   3 -
 tests/ossfuzz/fuzz_decode_alone.c              |   3 -
 tests/ossfuzz/fuzz_decode_stream.c             |   3 -
 tests/ossfuzz/fuzz_encode_stream.c             |   3 -
 tests/test_bcj_exact_size.c                    |   3 -
 tests/test_block_header.c                      |   3 -
 tests/test_check.c                             |   3 -
 tests/test_compress.sh                         |   3 -
 tests/test_files.sh                            |   3 -
 tests/test_filter_flags.c                      |   3 -
 tests/test_filter_str.c                        |   3 -
 tests/test_hardware.c                          |   3 -
 tests/test_index.c                             |   3 -
 tests/test_index_hash.c                        |   3 -
 tests/test_lzip_decoder.c                      |   3 -
 tests/test_memlimit.c                          |   3 -
 tests/test_scripts.sh                          |   3 -
 tests/test_stream_flags.c                      |   3 -
 tests/test_suffix.sh                           |   3 -
 tests/test_vli.c                               |   3 -
 tests/tests.h                                  |   3 -
 tests/tuktest.h                                |   3 -
 windows/README-Windows.txt                     |  11 +--
 windows/build.bash                             |   3 -
 288 files changed, 100 insertions(+), 911 deletions(-)

commit 76946dc4336c831fe2cc26696a035d807dd3cf13
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-09 17:20:31 +0200

    Fix SHA-256 authors.
    
    The initial commit 5d018dc03549c1ee4958364712fb0c94e1bf2741
    in 2007 had a comment in sha256.c that the code is based on
    Crypto++ Library 5.5.1. In 2009 the Authors list in sha256.c
    and the AUTHORS file was updated with information that the
    code had come from Crypto++ but via 7-Zip. I know I had viewed
    7-Zip's SHA-256 code but back then the C code has been identical
    enough with Crypto++, so I don't why I thought the author info
    would need that extra step via 7-Zip for this single file.
    
    Another error is that I had mixed sha.* and shacal2.* files
    when checking for author info in Crypto++. The shacal2.* files
    aren't related to liblzma's sha256.c and thus Kevin Springle's
    code in Crypto++ isn't either.

 AUTHORS                    |  6 ++----
 src/liblzma/check/sha256.c | 14 ++++----------
 2 files changed, 6 insertions(+), 14 deletions(-)

commit 21d9cbae9eecca28ce373d3d9464defd2cf5d851
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-09 17:20:31 +0200

    Remove macosx/build.sh.
    
    It was last updated in 2013.

 Makefile.am     |   1 -
 macosx/build.sh | 113 --------------------------------------------------------
 2 files changed, 114 deletions(-)

commit eac2c3c67f9113a225fb6667df862edd30366931
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-09 17:20:31 +0200

    Doc: Remove doc/examples_old.
    
    It was good to keep these around in parallel with the newer examples
    but I think it's OK to remove the old ones at this point.

 Makefile.am                       |   5 --
 doc/examples_old/xz_pipe_comp.c   | 127 --------------------------------------
 doc/examples_old/xz_pipe_decomp.c | 123 ------------------------------------
 3 files changed, 255 deletions(-)

commit 89ea1a22f4ed3685b053b7260bc5acf6c75d1664
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-13 22:38:58 +0800

    Tests: Add RISC-V filter support in a few places.

 tests/test_filter_flags.c | 6 ++++++
 tests/test_filter_str.c   | 6 ++++++
 2 files changed, 12 insertions(+)

commit 45663443eb2b377e6171529380fee312f1adcdf4
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-13 22:37:07 +0800

    liblzma: Fix build error if only RISC-V BCJ filter is enabled.
    
    If any other BCJ filter was enabled for encoding or decoding, then this
    was not a problem.

 src/liblzma/common/string_conversion.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 2f15597d677bc35743c777d4cf3bfa698b478681
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-13 22:56:24 +0800

    Translations: Update the Korean translation.

 po/ko.po | 526 ++++++++++++++++++++++++++++++++++-----------------------------
 1 file changed, 284 insertions(+), 242 deletions(-)

commit df873143ad1615c6d6aaa1bf8808b1676091dfe3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-13 01:55:53 +0800

    Translations: Update the Korean man page translations.

 po4a/ko.po | 1375 ++++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 770 insertions(+), 605 deletions(-)

commit b3f415eddb150341865a1af47959c3baba076b33
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-13 01:53:33 +0800

    Translations: Update the Chinese (simplified) translation.

 po/zh_CN.po | 424 ++++++++++++++++++++++++++++++++++++++----------------------
 1 file changed, 268 insertions(+), 156 deletions(-)

commit 9860d418d296eb3c721e5384fb367c0499b579c8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-09 23:21:01 +0200

    xzless: Use ||- in LESSOPEN with with "less" 451 and newer.

 src/scripts/xzless.in | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit fd0692b0525e6c26b496492be9e2c865cab734f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-02-09 23:00:05 +0200

    xzless: Use --show-preproc-errors with "less" 632 and newer.
    
    This makes "less" show a warning if a decompression error occurred.

 src/scripts/xzless.in | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

commit adb073da76a920b5a81e6b32254f4ddb054dc57a
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-09 23:59:54 +0800

    liblzma: Fix typo discovered by codespell.

 src/liblzma/check/crc32_arm64.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 55d9fc883d221cbace951a370f1fb144698f8c2e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-09 20:01:06 +0800

    Translations: Update the Swedish translation.

 po/sv.po | 420 ++++++++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 254 insertions(+), 166 deletions(-)

commit 55ba4a1ea321499c805eedfa811ffde690bae311
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-08 20:09:04 +0800

    Translations: Update the Spanish translation.

 po/es.po | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

commit 7f2293cd804a89d3c3b2d3ed573560ca9e1520ae
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-07 21:34:35 +0800

    Translations: Update the Spanish translation.

 po/es.po | 419 ++++++++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 253 insertions(+), 166 deletions(-)

commit f4af2036bc625739d6d33d9e1fede583a25c3828
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-07 21:28:32 +0800

    Translations: Update the Polish translation.

 po/pl.po | 411 ++++++++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 249 insertions(+), 162 deletions(-)

commit e5e93bb816043c559cddf03a3b7ba13bec353ee4
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-07 19:40:12 +0800

    Translations: Update the German translation.

 po/de.po | 396 ++++++++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 242 insertions(+), 154 deletions(-)

commit 28f18ff8e26902762fb007c13be235b4ac1ac071
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-07 19:27:25 +0800

    Translations: Update the German man page translations.

 po4a/de.po | 1353 +++++++++++++++++++++++++++++++++---------------------------
 1 file changed, 752 insertions(+), 601 deletions(-)

commit cabfbc7947da05aa5dfe39bec9759e076f940e3c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-06 23:44:06 +0800

    Translations: Update the Romanian translation.

 po/ro.po | 416 ++++++++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 252 insertions(+), 164 deletions(-)

commit bf20c94f5d748cea2147779f4fa7e2fd2eb8555e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-06 23:45:02 +0800

    Translations: Update the Romanian man page translations.

 po4a/ro.po | 1759 +++++++++++++++++++++++++++++++++---------------------------
 1 file changed, 966 insertions(+), 793 deletions(-)

commit 7c25ec9feb0241e4affb7432681cc4f5696f3a96
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-07 20:56:57 +0800

    Translations: Update the Ukrainian translation.

 po/uk.po | 397 ++++++++++++++++++++++++++++++++++++++-------------------------
 1 file changed, 242 insertions(+), 155 deletions(-)

commit b3523250e9eef10b017473754c1e1c9e31f10374
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-06 23:30:03 +0800

    Translations: Update the Ukrainian man page translations.

 po4a/uk.po | 1363 ++++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 764 insertions(+), 599 deletions(-)

commit a5c177f514f4c90e0d2f6045636fca6c2e80a20d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-02 01:39:28 +0800

    Update AUTHORS.

 AUTHORS | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 7f68a68c19d0ae57bd0e802be0ea8f974e41299f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-02 01:38:51 +0800

    liblzma: Update Authors list in crc32_arm64.h.

 src/liblzma/check/crc32_arm64.h | 1 +
 1 file changed, 1 insertion(+)

commit 97f9ba50b84e67b3dcb5b17dd5d3e1d14f9ad1d0
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-01 16:07:03 +0800

    liblzma: Check HAVE_USABLE_CLMUL before omitting CRC32 table.
    
    This was split from the prior commit so it could be easily applied to
    the 5.4 branch.
    
    Closes: https://github.com/tukaani-project/xz/pull/77

 src/liblzma/check/crc32_table.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit ca9015f4dead2c97b48f5a6933631b0a448b65b9
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-02-01 16:06:29 +0800

    liblzma: Check HAVE_USABLE_CLMUL before omitting CRC64 table.
    
    If liblzma is configured with --disable-clmul-crc
    CFLAGS="-msse4.1 -mpclmul", then it will fail to compile because the
    generic version must be used but the CRC tables were not included.

 src/liblzma/check/crc64_table.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 2f1552a91c825e87013925e1a67a0930e7aef592
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-23 18:02:13 +0800

    liblzma: Only use ifunc in crcXX_fast.c if its needed.
    
    The code was using HAVE_FUNC_ATTRIBUTE_IFUNC instead of CRC_USE_IFUNC.
    With ARM64, ifunc is incompatible because it requires non-inline
    function calls for runtime detection.

 src/liblzma/check/crc32_fast.c | 6 +++---
 src/liblzma/check/crc64_fast.c | 6 +++---
 2 files changed, 6 insertions(+), 6 deletions(-)

commit 30a25f3742287697bc57a1bef86c19ecf5129322
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 22:08:45 +0800

    Docs: Add --disable-arm64-crc32 description to INSTALL.

 INSTALL | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

commit 1940f0ec28f08c0ac72c1413d9706fb82eabe6ad
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 21:36:09 +0800

    liblzma: Omit CRC tables when not needed with ARM64 optimizations.
    
    This is similar to the existing x86-64 CLMUL conditions to omit the
    tables. They were slightly refactored to improve readability.

 src/liblzma/check/crc32_table.c | 18 +++++++++++++++---
 src/liblzma/check/crc64_table.c |  7 ++++++-
 src/liblzma/check/crc_common.h  |  5 ++++-
 3 files changed, 25 insertions(+), 5 deletions(-)

commit 761f5b69a4c778c8bcb09279b845b07c28790575
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 20:54:56 +0800

    liblzma: Rename crc32_aarch64.h to crc32_arm64.h.
    
    Even though the proper name for the architecture is aarch64, this
    project uses ARM64 throughout. So the rename is for consistency.
    
    Additionally, crc32_arm64.h was slightly refactored for the following
    changes:
    
       * Added MSVC, FreeBSD, and macOS support in
         is_arch_extension_supported().
    
       * crc32_arch_optimized() now checks the size when aligning the
         buffer.
    
       * crc32_arch_optimized() loop conditions were slightly modified to
         avoid both decrementing the size and incrementing the buffer
         pointer.
    
       * Use the intrinsic wrappers defined in <arm_acle.h> because GCC and
         Clang name them differently.
    
       * Minor spacing and comment changes.

 CMakeLists.txt                    |   2 +-
 src/liblzma/check/Makefile.inc    |   2 +-
 src/liblzma/check/crc32_aarch64.h | 109 ----------------------------------
 src/liblzma/check/crc32_arm64.h   | 119 ++++++++++++++++++++++++++++++++++++++
 src/liblzma/check/crc32_fast.c    |   3 +-
 src/liblzma/check/crc64_fast.c    |   3 -
 6 files changed, 122 insertions(+), 116 deletions(-)

commit 455a08609caa3223066a717fb01bfa42c5dba47d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 20:49:30 +0800

    liblzma: Refactor crc_common.h.
    
    The CRC_GENERIC is now split into CRC32_GENERIC and CRC64_GENERIC, since
    the ARM64 optimizations will be different between CRC32 and CRC64.
    
    For the same reason, CRC_ARCH_OPTIMIZED is split into
    CRC32_ARCH_OPTIMIZED and CRC64_ARCH_OPTIMIZED.
    
    ifunc will only be used with x86-64 CLMUL because the runtime detection
    methods needed with ARM64 are not compatible with ifunc.

 src/liblzma/check/crc32_fast.c |   8 +--
 src/liblzma/check/crc64_fast.c |   8 +--
 src/liblzma/check/crc_common.h | 108 ++++++++++++++++++++++++++++-------------
 3 files changed, 82 insertions(+), 42 deletions(-)

commit 61908e816049af7a9f43ea804a57ee8570e2e644
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 00:42:28 +0800

    CMake: Add support for ARM64 CRC32 instruction detection.

 CMakeLists.txt | 50 ++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 50 insertions(+)

commit c5f6d79cc9515a7f22d7ea4860c6cc394b295732
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 00:36:47 +0800

    Build: Add support for ARM64 CRC32 instruction detection.
    
    This adds --enable-arm64-crc32/--disable-arm64-crc32 (enabled by
    default) for using the ARM64 CRC32 instruction. This can be disabled if
    one knows the binary will never need to run on an ARM64 machine
    with this instruction extension.

 configure.ac | 52 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 52 insertions(+)

commit 849d0f282a6a890c5cf5a0e0f02980b12d9ebb0f
Author: Chenxi Mao <chenxi.mao2013@gmail.com>
Date:   2024-01-09 17:23:11 +0800

    Speed up CRC32 calculation on ARM64
    
    The CRC32 instructions in ARM64 can calculate the CRC32 result
    for 8 bytes in a single operation, making the use of ARM64
    instructions much faster compared to the general CRC32 algorithm.
    
    Optimized CRC32 will be enabled if ARM64 has CRC extension
    running on Linux.
    
    Signed-off-by: Chenxi Mao <chenxi.mao2013@gmail.com>

 CMakeLists.txt                    |   1 +
 src/liblzma/check/Makefile.inc    |   3 +-
 src/liblzma/check/crc32_aarch64.h | 109 ++++++++++++++++++++++++++++++++++++++
 src/liblzma/check/crc32_fast.c    |   5 +-
 src/liblzma/check/crc64_fast.c    |   5 +-
 src/liblzma/check/crc_common.h    |  16 +++---
 6 files changed, 130 insertions(+), 9 deletions(-)

commit b43c3e48bf6097095eef36d44cdbec811074940a
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-26 19:05:51 +0800

    Bump version number for 5.5.1alpha.

 src/liblzma/api/lzma/version.h  | 2 +-
 src/liblzma/liblzma_generic.map | 2 +-
 src/liblzma/liblzma_linux.map   | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

commit c7a7ae1500ea90bd3c2d54533e4f433933eb598f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-26 19:00:52 +0800

    Add NEWS for 5.5.1alpha

 NEWS | 80 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 80 insertions(+)

commit 0ef8192e8d5af4e6200d5d4aee22d1f177f7a2df
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-26 18:54:24 +0800

    Add NEWS for 5.4.6.

 NEWS | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

commit 93de7e751d17731315a899264f2a7239d7d2d316
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-01-24 20:00:57 +0200

    Move doc/logo/xz-logo.png to "doc" and Doxygen footer to "doxygen".
    
    The footer isn't a complete HTML file so having it in the doxygen
    directory is a tiny bit clearer.

 Makefile.am                                    |   2 +-
 doc/{logo => }/xz-logo.png                     | Bin
 doxygen/Doxyfile                               |   4 ++--
 doc/logo/copyright.html => doxygen/footer.html |   0
 4 files changed, 3 insertions(+), 3 deletions(-)

commit 00fa01698df51c58ae2acf8c7fa4e1fb159f75a9
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-09 17:05:01 +0800

    README: Add COPYING.CC-BY-SA-4.0 entry to section 1.1.
    
    The Overall documentation section (1.1) table spacing had to be adjusted
    since the filename was very long.

 README | 38 ++++++++++++++++++++------------------
 1 file changed, 20 insertions(+), 18 deletions(-)

commit e280470040b27c5e58d78b25b9e2bb71fc6c3882
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-09 16:56:16 +0800

    Build: Add the logo and license to the release.

 Makefile.am | 2 ++
 1 file changed, 2 insertions(+)

commit b1ee6cf259bb49ce91abe9f622294524e37edf4c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-09 16:44:42 +0800

    COPYING: Add the license for the XZ logo.

 COPYING              |   5 +
 COPYING.CC-BY-SA-4.0 | 427 +++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 432 insertions(+)

commit 31293ae7074802cc7286089a89c7b552d930c97f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-09 16:40:56 +0800

    Doxygen: Added the XZ logo and copyright information.
    
    The PROJECT_LOGO field is now used to include the XZ logo. The footer
    of each page now lists the copyright information instead of the default
    footer. The license is also copied to statisfy the copyright and so the
    link in the documentation can be local.

 doc/logo/copyright.html |  11 +++++++++++
 doc/logo/xz-logo.png    | Bin 0 -> 6771 bytes
 doxygen/Doxyfile        |   6 +++---
 3 files changed, 14 insertions(+), 3 deletions(-)

commit 6daa4d0ea46a8441f21f609149f3633158bf4704
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-01-23 18:29:28 +0200

    xz: Use threaded mode by defaut (as if --threads=0 was used).
    
    This hopefully does more good than bad:
    
      + It's faster by default.
    
      + Only the threaded compressor creates files that
        can be decompressed in threaded mode.
    
      - Compression ratio is worse, usually not too much though.
        When it matters, -T1 must be used.
    
      - Memory usage increases.
    
      - Scripts that assume single-threaded mode but don't use -T1 will
        possibly use too much resources, for example, if they run
        multiple xz processes in parallel to compress multiple files.
    
      - Output from single-threaded and multi-threaded compressors
        differ but such changes could happen for other reasons too
        (they just haven't happened since 5.0.0).

 src/xz/hardware.c | 6 +++++-
 src/xz/message.c  | 4 ++--
 src/xz/xz.1       | 9 +++++++++
 3 files changed, 16 insertions(+), 3 deletions(-)

commit a2dd2dc8e5307a7280bb99868bc478560facba2c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-23 23:52:49 +0800

    CI: Use RISC-V filter when building with BCJ support.

 build-aux/ci_build.sh | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 3060e1070b2421b26c0e17794c1307ec5622f11d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-23 23:52:14 +0800

    Tests: Use smaller dictionary size in RISC-V test files.

 tests/files/good-1-riscv-lzma2-1.xz | Bin 7512 -> 7512 bytes
 tests/files/good-1-riscv-lzma2-2.xz | Bin 7516 -> 7512 bytes
 2 files changed, 0 insertions(+), 0 deletions(-)

commit 44ff2fa5c94dc345c4dd69195a19fc5238df60b3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-23 23:50:57 +0800

    Tests: Skip RISC-V test files if decoder was not built.

 tests/test_files.sh | 5 +++++
 1 file changed, 5 insertions(+)

commit 6133a3f30049d3beaf7d22535b1e5d38e109be4e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-01-23 16:11:54 +0200

    xz: Man page: Add more examples of LZMA2 options with BCJ filters.

 src/xz/xz.1 | 38 +++++++++++++++++++++++++++++++-------
 1 file changed, 31 insertions(+), 7 deletions(-)

commit 50255feeaabcc7e7db22b858a6bd64a9b5b4f16d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-01-23 00:09:48 +0200

    liblzma: RISC-V filter: Use byte-by-byte access.
    
    Not all RISC-V processors support fast unaligned access so
    it's better to read only one byte in the main loop. This can
    be faster even on x86-64 when compared to reading 32 bits at
    a time as half the time the address is only 16-bit aligned.
    
    The downside is larger code size on archs that do support
    fast unaligned access.

 src/liblzma/simple/riscv.c | 114 +++++++++++++++++++++++++++++++++------------
 1 file changed, 84 insertions(+), 30 deletions(-)

commit db5eb5f563e8baa8d912ecf576f53391ff861596
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 23:33:39 +0800

    xz: Update xz -lvv for RISC-V filter.
    
    Version 5.6.0 will be shown, even though upcoming alphas and betas
    will be able to support this filter. 5.6.0 looks nicer in the output and
    people shouldn't be encouraged to use an unstable version in production
    in any way.

 src/xz/list.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

commit e2870db5be1503e6a489fc3d47daf950d6f62723
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 23:33:39 +0800

    Tests: Add two RISC-V Filter test files.
    
    These test files achieve 100% code coverage in
    src/liblzma/simple/riscv.c. They contain all of the instructions that
    should be filtered and a few cases that should not.

 tests/files/README                  |   8 ++++++++
 tests/files/good-1-riscv-lzma2-1.xz | Bin 0 -> 7512 bytes
 tests/files/good-1-riscv-lzma2-2.xz | Bin 0 -> 7516 bytes
 3 files changed, 8 insertions(+)

commit b26a89869315ece2f6d9d10d32d45f672550f245
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 23:33:39 +0800

    xz: Update message in --long-help for RISC-V Filter.

 src/xz/message.c | 1 +
 1 file changed, 1 insertion(+)

commit 283f778908873eca61388029fc418fa800c9d7d7
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 23:33:39 +0800

    xz: Update the man page for the RISC-V Filter.
    
    A special note was added to suggest using four-byte alignment when the
    compressed instruction extension is not present in a RISC-V binary.

 src/xz/xz.1 | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit ac3691ccca051d67f60b4a3b05b88e511d0b1b28
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 23:33:39 +0800

    Tests: Add RISC-V Filter test in test_compress.sh.

 tests/test_compress.sh | 1 +
 1 file changed, 1 insertion(+)

commit 2959dbc7358efcf421ce51bc9cd7eae8fdd8fec4
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 23:33:39 +0800

    liblzma: Update string_conversion.c to support RISC-V Filter.

 src/liblzma/common/string_conversion.c | 5 +++++
 1 file changed, 5 insertions(+)

commit 34372a5adbe5a7f6bf29498410ba3a463a720966
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 23:33:39 +0800

    CMake: Support RISC-V BCJ Filter for encoding and decoding.

 CMakeLists.txt | 1 +
 1 file changed, 1 insertion(+)

commit 440a2eccb082dc13400c09e22308a58fef85146c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-22 23:33:39 +0800

    liblzma: Add RISC-V BCJ filter.
    
    The new Filter ID is 0x0B.
    
    Thanks to Chien Wong <m@xv97.com> for the initial version of the Filter,
    the xz CLI updates, and the Autotools build system modifications.
    
    Thanks to Igor Pavlov for his many contributions to the design of
    the filter.

 configure.ac                        |   4 +-
 src/liblzma/api/lzma/bcj.h          |   5 +
 src/liblzma/common/filter_common.c  |   9 +
 src/liblzma/common/filter_decoder.c |   8 +
 src/liblzma/common/filter_encoder.c |  10 +
 src/liblzma/simple/Makefile.inc     |   4 +
 src/liblzma/simple/riscv.c          | 688 ++++++++++++++++++++++++++++++++++++
 src/liblzma/simple/simple_coder.h   |   9 +
 src/xz/args.c                       |   7 +
 9 files changed, 742 insertions(+), 2 deletions(-)

commit 5540f4329bbdb4deb4850d4af48b18ad074bba19
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-19 23:08:14 +0800

    Docs: Update .xz file format specification to 1.2.0.
    
    The new RISC-V filter was added to the specification, in addition to
    updating the specification URL.

 doc/xz-file-format.txt | 29 +++++++++++++++++------------
 1 file changed, 17 insertions(+), 12 deletions(-)

commit 22d86192f8cf00902a1f90ee2a83ca600794459b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-19 23:08:14 +0800

    xz: Update website URLs in the man pages.

 src/xz/xz.1       | 6 +++---
 src/xzdec/xzdec.1 | 4 ++--
 2 files changed, 5 insertions(+), 5 deletions(-)

commit 6b63c4c6139fa1bb21b570521d3d2b4a608bc34d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-19 23:08:14 +0800

    liblzma: Update website URL.

 dos/config.h           | 2 +-
 src/liblzma/api/lzma.h | 6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

commit fce4758018f3a3589236f3fe7999fd9dd08c77e9
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-19 23:08:14 +0800

    Docs: Update website URLs.

 .github/SECURITY.md        |  2 +-
 COPYING                    |  3 ++-
 README                     |  4 ++--
 doc/faq.txt                |  2 +-
 doc/lzma-file-format.txt   | 18 +++++++++---------
 windows/README-Windows.txt |  3 ++-
 6 files changed, 17 insertions(+), 15 deletions(-)

commit c26812c5b2c8a2a47f43214afe6b0b840c73e4f5
Author: Jia Tan <jiat0218@gmail.com>
Date:   2024-01-19 23:08:14 +0800

    Build: Update website URL.

 CMakeLists.txt | 2 +-
 configure.ac   | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit fbb3ce541ef79cad1710e88a27a5babb5f6f8e5b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-01-11 15:01:50 +0200

    liblzma: CRC: Add a comment to crc_x86_clmul.h about BUILDING_ macros.

 src/liblzma/check/crc_x86_clmul.h | 6 ++++++
 1 file changed, 6 insertions(+)

commit 4f518c1b6b7b7ce5dcefea81acd44d7a086a8882
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-01-11 15:22:36 +0200

    liblzma: CRC: Remove crc_always_inline, use lzma_always_inline instead.
    
    Now crc_simd_body() in crc_x86_clmul.h is only called once
    in a translation unit, we no longer need to be so cautious
    about ensuring the always-inline behavior.

 src/liblzma/check/crc_common.h    | 20 --------------------
 src/liblzma/check/crc_x86_clmul.h |  2 +-
 2 files changed, 1 insertion(+), 21 deletions(-)

commit 35c03ec6bf66f1b159964c9721a2dce0e2859b20
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-01-11 14:39:46 +0200

    liblzma: CRC: Update CLMUL comments to more generic wording.

 src/liblzma/check/crc32_fast.c | 16 ++++++++--------
 src/liblzma/check/crc64_fast.c | 10 +++++-----
 2 files changed, 13 insertions(+), 13 deletions(-)

commit 66f080e8016129576536482ac377e2ecac7a2b90
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-01-10 18:23:31 +0200

    liblzma: Rename arch-specific CRC functions and macros.
    
    CRC_CLMUL was split to CRC_ARCH_OPTIMIZED and CRC_X86_CLMUL.
    CRC_ARCH_OPTIMIZED is defined when an arch-optimized version is used.
    Currently the x86 CLMUL implementations are the only arch-optimized
    versions, and these also use the CRC_x86_CLMUL macro to tell when
    crc_x86_clmul.h needs to be included.
    
    is_clmul_supported() was renamed to is_arch_extension_supported().
    crc32_clmul() and crc64_clmul() were renamed to
    crc32_arch_optimized() and crc64_arch_optimized().
    This way the names make sense with arch-specific non-CLMUL
    implementations as well.

 src/liblzma/check/crc32_fast.c    | 13 +++++++------
 src/liblzma/check/crc64_fast.c    | 13 +++++++------
 src/liblzma/check/crc_common.h    |  9 ++++++---
 src/liblzma/check/crc_x86_clmul.h | 21 +++++++++++----------
 4 files changed, 31 insertions(+), 25 deletions(-)

commit 3dbed75b0b9c7087c76fe687acb5cf582cd57b99
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2024-01-10 18:19:21 +0200

    liblzma: Fix a comment in crc_common.h.

 src/liblzma/check/crc_common.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 419f55f9dfc2df8792902b8953d50690121afeea
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-20 23:35:10 +0300

    liblzma: Avoid extern lzma_crc32_clmul() and lzma_crc64_clmul().
    
    A CLMUL-only build will have the crcxx_clmul() inlined into
    lzma_crcxx(). Previously a jump to the extern lzma_crcxx_clmul()
    was needed. Notes about shared liblzma on ELF platforms:
    
      - On platforms that support ifunc and -fvisibility=hidden, this
        was silly because CLMUL-only build would have that single extra
        jump instruction of extra overhead.
    
      - On platforms that support neither -fvisibility=hidden nor linker
        version script (liblzma*.map), jumping to lzma_crcxx_clmul()
        would go via PLT so a few more instructions of overhead (still
        not a big issue but silly nevertheless).
    
    There was a downside with static liblzma too: if an application only
    needs lzma_crc64(), static linking would make the linker include the
    CLMUL code for both CRC32 and CRC64 from crc_x86_clmul.o even though
    the CRC32 code wouldn't be needed, thus increasing code size of the
    executable (assuming that -ffunction-sections isn't used).
    
    Also, now compilers are likely to inline crc_simd_body()
    even if they don't support the always_inline attribute
    (or MSVC's __forceinline). Quite possibly all compilers
    that build the code do support such an attribute. But now
    it likely isn't a problem even if the attribute wasn't supported.
    
    Now all x86-specific stuff is in crc_x86_clmul.h. If other archs
    The other archs can then have their own headers with their own
    is_clmul_supported() and crcxx_clmul().
    
    Another bonus is that the build system doesn't need to care if
    crc_clmul.c is needed.
    
    is_clmul_supported() stays as inline function as it's not needed
    when doing a CLMUL-only build (avoids a warning about unused function).

 CMakeLists.txt                                     |  7 +-
 configure.ac                                       |  1 -
 src/liblzma/check/Makefile.inc                     |  6 +-
 src/liblzma/check/crc32_fast.c                     |  9 ++-
 src/liblzma/check/crc64_fast.c                     |  9 ++-
 src/liblzma/check/crc_common.h                     | 64 ----------------
 src/liblzma/check/{crc_clmul.c => crc_x86_clmul.h} | 86 ++++++++++++++++++----
 7 files changed, 91 insertions(+), 91 deletions(-)

commit e3833e297dfb5021a197bda34ba2a795e30aaf8a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-21 00:06:52 +0300

    liblzma: crc_clmul.c: Add crc_attr_target macro.
    
    This reduces the number of the complex #if directives.

 src/liblzma/check/crc_clmul.c | 30 ++++++++++++++++--------------
 1 file changed, 16 insertions(+), 14 deletions(-)

commit d164ac0e62904126f7920c25f9a2875c8cd28b97
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-20 22:49:48 +0300

    liblzma: Simplify existing cases with lzma_attr_no_sanitize_address.

 src/liblzma/check/crc_clmul.c | 12 +++---------
 1 file changed, 3 insertions(+), 9 deletions(-)

commit 9523c1300d22fa715765c181cf991d14d6112fb1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-20 21:53:35 +0300

    liblzma: #define crc_attr_no_sanitize_address in crc_common.h.

 src/liblzma/check/crc_common.h | 10 ++++++++++
 1 file changed, 10 insertions(+)

commit 93d144f0930821590524247bd174afd38003d7f0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-20 23:25:14 +0300

    liblzma: CRC: Add empty lines.
    
    And remove one too.

 src/liblzma/check/crc32_fast.c | 2 ++
 src/liblzma/check/crc64_fast.c | 3 +++
 src/liblzma/check/crc_clmul.c  | 1 -
 3 files changed, 5 insertions(+), 1 deletion(-)

commit 0c7e854ffd27f1cec2e9b0e61601d6f90bfa10ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-20 23:19:33 +0300

    liblzma: crc_clmul.c: Tidy up the location of MSVC pragma.
    
    It makes no difference in practice.

 src/liblzma/check/crc_clmul.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 15cf3f04f270d707a5c91cc0208b23b6db42b774
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-12-20 21:16:24 +0200

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit cd64dd70d5665b6048829c45772d08606f44672e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-12-20 21:15:16 +0200

    liblzma: Use 8-byte method in memcmplen.h on ARM64.
    
    It requires fast unaligned access to 64-bit integers
    and a fast instruction to count leading zeros in
    a 64-bit integer (__builtin_ctzll()). This perhaps
    should be enabled on some other archs too.
    
    Thanks to Chenxi Mao for the original patch:
    https://github.com/tukaani-project/xz/pull/75 (the first commit)
    According to the numbers there, this may improve encoding
    speed by about 3-5 %.
    
    This enables the 8-byte method on MSVC ARM64 too which
    should work but wasn't tested.

 src/liblzma/common/memcmplen.h | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

commit 12c90c00f05e19da3c0c91d8cd8e0d0d45965606
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-12-20 21:01:06 +0200

    liblzma: Check also for __clang__ in memcmplen.h.
    
    This change hopefully makes no practical difference as Clang
    likely was detected via __GNUC__ or _MSC_VER already.

 src/liblzma/common/memcmplen.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 133c5851eb917c6d99d0b623c1689c8518e65f38
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-21 21:39:08 +0800

    Translations: Update the French translation.

 po/fr.po | 632 +++++++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 370 insertions(+), 262 deletions(-)

commit 710cbc186cad0ac601c38bd6bf31167648a5581e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-21 16:39:53 +0800

    xz: Add a comment to Capsicum sandbox setup.
    
    This comment is repeated in xzdec.c to help remind us why all the
    capabilities are removed from stdin in certain situations.

 src/xz/file_io.c | 1 +
 1 file changed, 1 insertion(+)

commit 4e1c695676bafbaecc9fb307f6ee94138ae72c12
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-20 22:19:19 +0800

    Docs: Update --enable-sandbox option in INSTALL.
    
    xzdec now also uses the sandbox when its configured.

 INSTALL | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

commit ebddf20214143a8e002ab897e95e880bb4c5ac44
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-20 22:39:13 +0800

    CMake: Move sandbox detection outside of xz section.
    
    The sandbox is now enabled for xzdec as well, so it no longer belongs
    in just the xz section. xz and xzdec are always built, except for older
    MSVC versions, so there isn't a need to conditionally show the sandbox
    configuration. CMake will do a little unecessary work on older MSVC
    versions that can't build xz or xzdec, but this is a very small
    downside.

 CMakeLists.txt | 178 +++++++++++++++++++++++++++++++--------------------------
 1 file changed, 98 insertions(+), 80 deletions(-)

commit 5feb09266fd2928ec0a4dcb98c1dc7f053111316
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-20 22:43:44 +0800

    Build: Allow sandbox to be configured for just xzdec.
    
    If xz is disabled, then xzdec can still use the sandbox.

 configure.ac | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit d74fb5f060b76db709b50f5fd37490394e52f975
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-19 21:18:28 +0800

    xzdec: Add sandbox support for Pledge, Capsicum, and Landlock.
    
    A very strict sandbox is used when the last file is decompressed. The
    likely most common use case of xzdec is to decompress a single file.
    The Pledge sandbox is applied to the entire process with slightly more
    relaxed promises, until the last file is processed.
    
    Thanks to Christian Weisgerber for the initial patch adding Pledge
    sandboxing.

 src/xzdec/xzdec.c | 146 +++++++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 139 insertions(+), 7 deletions(-)

commit b34b6a9912d6165e34ba0db151b7f9941d2e06d5
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-20 21:31:34 +0800

    liblzma: Initialize lzma_lz_encoder pointers with NULL.
    
    This fixes the recent change to lzma_lz_encoder that used memzero
    instead of the NULL constant. On some compilers the NULL constant
    (always 0) may not equal the NULL pointer (this only needs to guarentee
    to not point to valid memory address).
    
    Later code compares the pointers to the NULL pointer so we must
    initialize them with the NULL pointer instead of 0 to guarentee
    code correctness.

 src/liblzma/lz/lz_encoder.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 183a62f0b540ff4d23cc19b2b6bc2525f0bd64df
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-16 20:51:38 +0800

    liblzma: Set all values in lzma_lz_encoder to NULL after allocation.
    
    The first member of lzma_lz_encoder doesn't necessarily need to be set
    to NULL since it will always be set before anything tries to use it.
    However the function pointer members must be set to NULL since other
    functions rely on this NULL value to determine if this behavior is
    supported or not.
    
    This fixes a somewhat serious bug, where the options_update() and
    set_out_limit() function pointers are not set to NULL. This seems to
    have been forgotten since these function pointers were added many years
    after the original two (code() and end()).
    
    The problem is that by not setting this to NULL we are relying on the
    memory allocation to zero things out if lzma_filters_update() is called
    on a LZMA1 encoder. The function pointer for set_out_limit() is less
    serious because there is not an API function that could call this in an
    incorrect way. set_out_limit() is only called by the MicroLZMA encoder,
    which must use LZMA1 where set_out_limit() is always set. Its currently
    not possible to call set_out_limit() on an LZMA2 encoder at this time.
    
    So calling lzma_filters_update() on an LZMA1 encoder had undefined
    behavior since its possible that memory could be manipulated so the
    options_update member pointed to a different instruction sequence.
    
    This is unlikely to be a bug in an existing application since it relies
    on calling lzma_filters_update() on an LZMA1 encoder in the first place.
    For instance, it does not affect xz because lzma_filters_update() can
    only be used when encoding to the .xz format.
    
    This is fixed by using memzero() to set all members of lzma_lz_encoder
    to NULL after it is allocated. This ensures this mistake will not occur
    here in the future if any additional function pointers are added.

 src/liblzma/lz/lz_encoder.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit 1a1bb381db7a20cf86cb45a350e5cca35224d017
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-16 20:30:55 +0800

    liblzma: Tweak a comment.

 src/liblzma/lz/lz_encoder.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 55810780e04f759747b02683fb8020b8cd022a85
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-16 20:28:21 +0800

    liblzma: Make parameter names in function definition match declaration.
    
    lzma_raw_encoder() and lzma_raw_encoder_init() used "options" as the
    parameter name instead of "filters" (used by the declaration). "filters"
    is more clear since the parameter represents the list of filters passed
    to the raw encoder, each of which contains filter options.

 src/liblzma/common/filter_encoder.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 5dad6f628af742bab826819760deb677597445f7
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-16 20:18:47 +0800

    liblzma: Improve lzma encoder init function consistency.
    
    lzma_encoder_init() did not check for NULL options, but
    lzma2_encoder_init() did. This is more of a code style improvement than
    anything else to help make lzma_encoder_init() and lzma2_encoder_init()
    more similar.

 src/liblzma/lzma/lzma_encoder.c | 3 +++
 1 file changed, 3 insertions(+)

commit e1b1a9d6370b788bd6078952c6c201e12bc27cbf
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-16 11:20:20 +0800

    Docs: Update repository URL in Changelog.

 ChangeLog | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f9b82bc64a9405e486575c65c1729229eb0a8198
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-15 16:56:31 +0800

    CI: Update Upload Artifact Action.

 .github/workflows/ci.yml         | 2 +-
 .github/workflows/windows-ci.yml | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit d0b24efe6cdc47db5b0fdf6306f70a2e0e63e49e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-07 21:48:07 +0800

    Tests: Silence -Wsign-conversion warning on GCC version < 10.
    
    Since GCC version 10, GCC no longer complains about simple implicit
    integer conversions with Arithmetic operators.
    
    For instance:
    
        uint8_t a = 5;
        uint32_t b = a + 5;
    
    Give a warning on GCC 9 and earlier but this:
    
        uint8_t a = 5;
        uint32_t b = (a + 5) * 2;
    
    Gives a warning with GCC 10+.

 tests/test_block_header.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 4a972a8ee3ed88ac14067c1d2f15b78988e5dae8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-06 18:39:03 +0800

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit ee2f48350099201694a7586e41d7aa2f09fc74da
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-12-06 18:30:25 +0800

    Tests: Minor cleanups to OSS-Fuzz files.
    
    Most of these fixes are small typos and tweaks. A few were caused by bad
    advice from me. Here is the summary of what is changed:
    
    - Author line edits
    
    - Small comment changes/additions
    
    - Using the return value in the error messages in the fuzz targets'
      coder initialization code
    
    - Removed fuzz_encode_stream.options. This set a max length, which may
      prevent some worthwhile code paths from being properly exercised.
    
    - Removed the max_len option from fuzz_decode_stream.options for the
      same reason as fuzz_encode_stream. The alone decoder fuzz target still
      has this restriction.
    
    - Altered the dictionary contents for fuzz_lzma.dict. Instead of keeping
      the properties static and varying the dictionary size, the properties
      are varied and the dictionary size is kept small. The dictionary size
      doesn't have much impact on the code paths but the properties do.
    
    Closes: https://github.com/tukaani-project/xz/pull/73

 tests/ossfuzz/Makefile                          |  3 ++
 tests/ossfuzz/config/fuzz_decode_stream.options |  1 -
 tests/ossfuzz/config/fuzz_lzma.dict             | 34 +++++++++++-----------
 tests/ossfuzz/fuzz_common.h                     | 16 +++++------
 tests/ossfuzz/fuzz_decode_alone.c               | 15 +++++-----
 tests/ossfuzz/fuzz_decode_stream.c              | 15 +++++-----
 tests/ossfuzz/fuzz_encode_stream.c              | 38 +++++++++++++++----------
 7 files changed, 66 insertions(+), 56 deletions(-)

commit 483bb90eec7c83e1c2bcd06287714afd62d8c17d
Author: Maksym Vatsyk <maksym.vatsyk@leviathansecurity.com>
Date:   2023-12-05 16:31:09 +0100

    Tests: Add fuzz_encode_stream ossfuzz target.
    
    This fuzz target handles .xz stream encoding. The first byte of input
    is used to dynamically set the preset level in order to increase the
    fuzz coverage of complex critical code paths.

 tests/ossfuzz/config/fuzz_encode_stream.options |  2 +
 tests/ossfuzz/fuzz_encode_stream.c              | 79 +++++++++++++++++++++++++
 2 files changed, 81 insertions(+)

commit 7ca8c9869df82756c3128c4fcf1058da4d18aa48
Author: Maksym Vatsyk <maksym.vatsyk@leviathansecurity.com>
Date:   2023-12-04 17:23:24 +0100

    Tests: Add fuzz_decode_alone OSS-Fuzz target
    
    This fuzz target that handles LZMA alone decoding. A new fuzz
    dictionary .dict was also created with common LZMA header values to
    help speed up the discovery of valid headers.

 tests/ossfuzz/config/fuzz_decode_alone.options |  3 ++
 tests/ossfuzz/config/fuzz_lzma.dict            | 22 ++++++++++++++
 tests/ossfuzz/fuzz_decode_alone.c              | 41 ++++++++++++++++++++++++++
 3 files changed, 66 insertions(+)

commit 37581a77ad5a49615325b1d1925fdc402b1e1d5a
Author: Maksym Vatsyk <maksym.vatsyk@leviathansecurity.com>
Date:   2023-12-04 17:21:29 +0100

    Tests: Update OSS-Fuzz Makefile.
    
    All .c files can be built as separate fuzz targets. This simplifies
    the Makefile by allowing us to use wildcards instead of having a
    Makefile target for each fuzz target.

 tests/ossfuzz/Makefile | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

commit 28ce6a1c2a74866c51f7996a6869679c236d3c94
Author: Maksym Vatsyk <maksym.vatsyk@leviathansecurity.com>
Date:   2023-12-04 17:20:08 +0100

    Tests: Move common OSS-Fuzz target code to .h file.

 tests/ossfuzz/fuzz_common.h        | 56 ++++++++++++++++++++++++++++++++++++
 tests/ossfuzz/fuzz_decode_stream.c | 59 ++++++++++----------------------------
 2 files changed, 71 insertions(+), 44 deletions(-)

commit bf0521ea1591c25b9d510c1b8be86073e9d847c6
Author: Maksym Vatsyk <maksym.vatsyk@leviathansecurity.com>
Date:   2023-12-04 17:18:20 +0100

    Tests: Rename OSS-Fuzz files.

 tests/ossfuzz/config/fuzz.options                | 2 --
 tests/ossfuzz/config/fuzz_decode_stream.options  | 3 +++
 tests/ossfuzz/config/{fuzz.dict => fuzz_xz.dict} | 0
 tests/ossfuzz/{fuzz.c => fuzz_decode_stream.c}   | 0
 4 files changed, 3 insertions(+), 2 deletions(-)

commit 685094b8e1c1aa1bf934de0366ca42ef599d25f7
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-30 23:10:43 +0800

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 3b3023e00b0071e10f589bbc3674e0ec432b8add
Author: Kian-Meng Ang <kianmeng@cpan.org>
Date:   2023-11-30 23:01:19 +0800

    Tests: Fix typos

 tests/test_index.c        | 2 +-
 tests/test_lzip_decoder.c | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 424d46ead8cbc0da57f406b76926ec4ed47437f5
Author: Kian-Meng Ang <kianmeng@cpan.org>
Date:   2023-11-30 22:59:47 +0800

    xz: Fix typo

 src/xz/file_io.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 35558adf9c45e5597f2c8dbd969885dd484038d2
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-30 20:41:00 +0800

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit fd170e8557727bed6bec0518c16415064d972e4e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-22 21:20:12 +0800

    CI: Test musl libc builds on Ubuntu runner.

 .github/workflows/ci.yml | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

commit db2b4aa068a492c0013279a4ed43803e8ff9bb3e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-22 21:12:15 +0800

    CI: Allow ci_build.sh to set a different C compiler.

 build-aux/ci_build.sh | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

commit ff7badef53c2cd698d4b72b945f34dfd0835e13c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-24 21:19:12 +0800

    CMake: Use consistent indentation with check_c_source_compiles().

 CMakeLists.txt | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit d4af167570f2c14b002ee18a39d5b1e7e5a892b1
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-22 20:33:36 +0800

    CMake: Change __attribute__((__ifunc__())) detection.
    
    This renames ALLOW_ATTR_IFUNC to USE_ATTR_IFUNC and applies the ifunc
    detection changes that were made to the Autotools build.
    
    Fixes: https://github.com/tukaani-project/xz/issues/70

 CMakeLists.txt | 53 +++++++++++++++++++++++++++++++++++++++++++++--------
 1 file changed, 45 insertions(+), 8 deletions(-)

commit 20ecee40a0053fd16371ef0628046bf45e548d72
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-24 20:19:11 +0800

    Docs: Update INSTALL for --enable_ifunc change.

 INSTALL | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit ffb456593d695d70052a2f71c7a2e6269217d194
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-21 20:56:55 +0800

    Build: Change --enable-ifunc handling.
    
    Some compilers support __attribute__((__ifunc__())) even though the
    dynamic linker does not. The compiler is able to create the binary
    but it will fail on startup. So it is not enough to just test if
    the attribute is supported.
    
    The default value for enable_ifunc is now auto, which will attempt
    to compile a program using __attribute__((__ifunc__())). There are
    additional checks in this program if glibc is being used or if it
    is running on FreeBSD.
    
    Setting --enable-ifunc will skip this test and always enable
    __attribute__((__ifunc__())), even if is not supported.

 configure.ac | 61 +++++++++++++++++++++++++++++++++++++++++++-----------------
 1 file changed, 44 insertions(+), 17 deletions(-)

commit 12b89bcc9915090eb42ae638e565af44b6832a23
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-11-23 17:39:10 +0200

    xz: Tweak a comment.

 src/xz/util.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 2ab2e4b5a542eab93902985ce4e642719a8b7a4e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-23 22:13:39 +0800

    xz: Use is_tty() in message.c.

 src/xz/message.c | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

commit 584e3a258f32d579b1d07f99b4dc6e856c10ac7e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-23 22:04:35 +0800

    xz: Create separate is_tty() function.
    
    The new is_tty() will report if a file descriptor is a terminal or not.
    On POSIX systems, it is a wrapper around isatty(). However, the native
    Windows implementation of isatty() will return true for all character
    devices, not just terminals. So is_tty() has a special case for Windows
    so it can use alternative Windows API functions to determine if a file
    descriptor is a terminal.
    
    This fixes a bug with MSVC and MinGW-w64 builds that refused to read from
    or write to non-terminal character devices because xz thought it was a
    terminal. For instance:
    
        xz foo -c > /dev/null
    
    would fail because /dev/null was assumed to be a terminal.

 src/xz/util.c | 30 +++++++++++++++++++++++-------
 src/xz/util.h | 14 ++++++++++++++
 2 files changed, 37 insertions(+), 7 deletions(-)

commit 6b05f827f50e686537e9a23c49c5aa4c0aa6b23d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-22 20:39:41 +0800

    tuklib_integer: Fix typo discovered by codespell.
    
    Based on internet dictionary searches, 'choise' is an outdated spelling
    of 'choice'.

 src/common/tuklib_integer.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 659aca0d695807c0762d4101765189e4e33d1e2c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-11-17 19:35:19 +0200

    xz: Move the check for --suffix with --format=raw a few lines earlier.
    
    Now it reads from argv[] instead of args->arg_names.

 src/xz/args.c | 44 ++++++++++++++++++++++----------------------
 1 file changed, 22 insertions(+), 22 deletions(-)

commit ca278eb2b7f5a4940f5ab18955297b398d423824
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-17 20:35:11 +0800

    Tests: Create test_suffix.sh.
    
    This tests some complicated interactions with the --suffix= option.
    The suffix option must be used with --format=raw, but can optionally
    be used to override the default .xz suffix.
    
    This test also verifies some recent bugs have been correctly solved
    and to hopefully avoid further regressions in the future.

 tests/Makefile.am    |   2 +
 tests/test_suffix.sh | 189 +++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 191 insertions(+)

commit 2a732aba22da1b0d4a1241cb32280ed010ba03ce
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-17 20:19:26 +0800

    xz: Fix a bug with --files and --files0 in raw mode without a suffix.
    
    The following command caused a segmentation fault:
    
        xz -Fraw --lzma1 --files=foo
    
    when foo was a valid file. The usage of --files or --files0 was not
    being checked when compressing or decompressing in raw mode without a
    suffix. The suffix checking code was meant to validate that all files
    to be processed are "-" (if not writing to standard out), meaning the
    data is only coming from standard in. In this case, there were no file
    names to check since --files and --files0 store their file name in a
    different place.
    
    Later code assumed the suffix was set and caused a segmentation fault.
    Now, the above command results in an error.

 src/xz/args.c | 5 +++++
 1 file changed, 5 insertions(+)

commit 299920bab9ae258a247366339264e8aefca9e3ce
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-17 20:04:58 +0800

    Tests: Fix typo in a comment.

 tests/test_files.sh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f481523baac946fa3bc13d79186ffaf0c0b818a7
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-15 23:40:13 +0800

    xz: Refactor suffix test with raw format.
    
    The previous version set opt_stdout, but this caused an issue with
    copying an input file to standard out when decompressing an unknown file
    type. The following needs to result in an error:
    
        echo foo | xz -df
    
    since -c, --stdout is not used. This fixes the previous error by not
    setting opt_stdout.

 src/xz/args.c | 38 +++++++++++++-------------------------
 1 file changed, 13 insertions(+), 25 deletions(-)

commit 837ea40b1c9d4998cac4500b55171bf33e0c31a6
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-14 20:27:46 +0800

    xz: Move suffix check after stdout mode is detected.
    
    This fixes a bug introduced in cc5aa9ab138beeecaee5a1e81197591893ee9ca0
    when the suffix check was initially moved. This caused a situation that
    previously worked:
    
        echo foo | xz -Fraw --lzma1 | wc -c
    
    to fail because the old code knew that this would write to standard out
    so a suffix was not needed.

 src/xz/args.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit d4f4a4d040ef47a5e82dffd0f067e92716606ddf
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-14 20:27:04 +0800

    xz: Detect when all data will be written to standard out earlier.
    
    If the -c, --stdout argument is not used, then we can still detect when
    the data will be written to standard out if all of the provided
    filenames are "-" (denoting standard in) or if no filenames are
    provided.

 src/xz/args.c | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

commit 2ade7246e7ba729a91460d2fab0f4c7b89d3998b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-09 01:21:53 +0800

    liblzma: Add missing comments to lz_encoder.h.

 src/liblzma/lz/lz_encoder.h | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 5fe1450603dc625340b8b7866fb4a83ff748ad06
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-11-01 20:18:30 +0800

    Add NEWS for 5.4.5.

 NEWS | 74 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 74 insertions(+)

commit 46007049cd42e606543dbe650feb17bdf4469c29
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-31 21:41:09 +0200

    liblzma: Fix compilation of fastpos_tablegen.c.
    
    The macro lzma_attr_visibility_hidden has to be defined to make
    fastpos.h usable. The visibility attribute is irrelevant to
    fastpos_tablegen.c so simply #define the macro to an empty value.
    
    fastpos_tablegen.c is never built by the included build systems
    and so the problem wasn't noticed earlier. It's just a standalone
    program for generating fastpos_table.c.
    
    Fixes: https://github.com/tukaani-project/xz/pull/69
    Thanks to GitHub user Jamaika1.

 src/liblzma/lzma/fastpos_tablegen.c | 2 ++
 1 file changed, 2 insertions(+)

commit 148e20607e95781558bdfc823ecba07b7af4b590
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-31 21:51:40 +0800

    Build: Fix text wrapping in an output message.

 configure.ac | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

commit 8c36ab79cbf23104ce7a3d533d5ac98cd492e57c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-30 18:09:53 +0200

    liblzma: Add a note why crc_always_inline exists for now.
    
    Solaris Studio is a possible example (not tested) which
    supports the always_inline attribute but might not get
    detected by the common.h #ifdefs.

 src/liblzma/check/crc_common.h | 5 +++++
 1 file changed, 5 insertions(+)

commit e7a86b94cd247435ac96bc79ba528b690b9ca388
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-22 17:59:11 +0300

    liblzma: Use lzma_always_inline in memcmplen.h.

 src/liblzma/common/memcmplen.h | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit dcfe5632992fb7f06f921da13fcdd84f83d0d285
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-30 17:43:03 +0200

    liblzma: #define lzma_always_inline in common.h.

 src/liblzma/common/common.h | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

commit 41113fe30a47f6fd3e30cb4494dd538e86212edf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-22 17:15:32 +0300

    liblzma: Use lzma_attr_visibility_hidden on private extern declarations.
    
    These variables are internal to liblzma and not exposed in the API.

 src/liblzma/check/check.h                | 7 +++++++
 src/liblzma/common/stream_flags_common.h | 3 +++
 src/liblzma/lz/lz_encoder_hash.h         | 1 +
 src/liblzma/lzma/fastpos.h               | 1 +
 src/liblzma/rangecoder/price.h           | 1 +
 5 files changed, 13 insertions(+)

commit a2f5ca706acc6f7715b8d260a8c6ed50d7717478
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-22 17:08:39 +0300

    liblzma: #define lzma_attr_visibility_hidden in common.h.
    
    In ELF shared libs:
    
    -fvisibility=hidden affects definitions of symbols but not
    declarations.[*] This doesn't affect direct calls to functions
    inside liblzma as a linker can replace a call to lzma_foo@plt
    with a call directly to lzma_foo when -fvisibility=hidden is used.
    
    [*] It has to be like this because otherwise every installed
        header file would need to explictly set the symbol visibility
        to default.
    
    When accessing extern variables that aren't defined in the
    same translation unit, compiler assumes that the variable has
    the default visibility and thus indirection is needed. Unlike
    function calls, linker cannot optimize this.
    
    Using __attribute__((__visibility__("hidden"))) with the extern
    variable declarations tells the compiler that indirection isn't
    needed because the definition is in the same shared library.
    
    About 15+ years ago, someone told me that it would be good if
    the CRC tables would be defined in the same translation unit
    as the C code of the CRC functions. While I understood that it
    could help a tiny amount, I didn't want to change the code because
    a separate translation unit for the CRC tables was needed for the
    x86 assembly code anyway. But when visibility attributes are
    supported, simply marking the extern declaration with the
    hidden attribute will get identical result. When there are only
    a few affected variables, this is trivial to do. I wish I had
    understood this back then already.

 src/liblzma/common/common.h | 11 +++++++++++
 1 file changed, 11 insertions(+)

commit 2c7ee92e44e1e66f0a427555233eb22c78f6c4f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-30 22:54:28 +0300

    liblzma: Refer to MinGW-w64 instead of MinGW in the API headers.
    
    MinGW (formely a MinGW.org Project, later the MinGW.OSDN Project
    at <https://osdn.net/projects/mingw/>) has GCC 9.2.0 as the
    most recent GCC package (released 2021-02-02). The project might
    still be alive but majority of people have switched to MinGW-w64.
    Thus it seems clearer to refer to MinGW-w64 in our API headers too.
    Building with MinGW is likely to still work but I haven't tested it
    in the recent years.

 src/liblzma/api/lzma.h         | 4 ++--
 src/liblzma/api/lzma/version.h | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 597f49b61475438a43a417236989b2acc968a686
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-27 00:58:17 +0300

    CMake: Use -D_FILE_OFFSET_BITS=64 if (and only if) needed.
    
    A CMake option LARGE_FILE_SUPPORT is created if and only if
    -D_FILE_OFFSET_BITS=64 affects sizeof(off_t).
    
    This is needed on many 32-bit platforms and even with 64-bit builds
    with MinGW-w64 to get support for files larger than 2 GiB.

 CMakeLists.txt                        |  7 ++++-
 cmake/tuklib_large_file_support.cmake | 52 +++++++++++++++++++++++++++++++++++
 2 files changed, 58 insertions(+), 1 deletion(-)

commit 1bc548b8210366e44ba35b0b11577a8e328c1228
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-30 02:14:25 +0300

    CMake: Generate and install liblzma.pc if not using MSVC.
    
    Autotools based build uses -pthread and thus adds it to Libs.private
    in liblzma.pc. CMake doesn't use -pthread at all if pthread functions
    are available in libc so Libs.private doesn't get -pthread either.

 CMakeLists.txt | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

commit 2add71966f891d315105d6245f724ed4f43a4eff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-30 01:13:13 +0300

    CMake: Rearrange the PACKAGE_ variables.
    
    The windres workaround now replaces spaces with \x20 so
    the package name isn't repeated.
    
    These changes will help with creation of liblzma.pc.

 CMakeLists.txt | 26 +++++++++++++++-----------
 1 file changed, 15 insertions(+), 11 deletions(-)

commit a7d1b2825c49dc83f1910eeb8ba0f1dfbd886d91
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-29 20:46:11 +0300

    liblzma: Add Cflags.private to liblzma.pc.in for MSYS2.
    
    It properly adds -DLZMA_API_STATIC when compiling code that
    will be linked against static liblzma. Having it there on
    systems other than Windows does no harm.
    
    See: https://www.msys2.org/docs/pkgconfig/

 src/liblzma/liblzma.pc.in | 1 +
 1 file changed, 1 insertion(+)

commit 80e0750e3996c1c659e972ce9cf789ca2e99f702
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-27 22:46:20 +0300

    CMake: Create liblzma.def when building liblzma.dll with MinGW-w64.

 CMakeLists.txt              | 20 ++++++++++++++++++++
 cmake/remove-ordinals.cmake | 26 ++++++++++++++++++++++++++
 2 files changed, 46 insertions(+)

commit 08d12595f486890cf601b87f36ee0ddbce57728e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-26 21:44:42 +0300

    CMake: Change one CMAKE_CURRENT_SOURCE_DIR to CMAKE_CURRENT_LIST_DIR.
    
    In this case they have identical values.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e67aaf698de75c73443a5ec786781cbf2034461d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-01 19:10:57 +0300

    CMake/Windows: Fix the import library filename.
    
    Both PREFIX and IMPORT_PERFIX have to be set to "" to get
    liblzma.dll and liblzma.dll.a.

 CMakeLists.txt | 1 +
 1 file changed, 1 insertion(+)

commit 88588b1246d8c26ffbc138b3e5c413c5f14c3179
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-25 19:13:25 +0300

    Build: Detect -fsanitize= in CFLAGS and incompatible build options.
    
    Now configure will fail if -fsanitize= is found in CFLAGS
    and sanitizer-incompatible ifunc or Landlock sandboxing
    would be used. These are incompatible with one or more sanitizers.
    It's simpler to reject all -fsanitize= uses instead of trying to
    pass those that might not cause problems.
    
    CMake-based build was updated similarly. It lets the configuration
    finish (SEND_ERROR instead of FATAL_ERROR) so that both error
    messages can be seen at once.

 CMakeLists.txt | 29 +++++++++++++++++++++++++++++
 configure.ac   | 37 +++++++++++++++++++++++++++++++++----
 2 files changed, 62 insertions(+), 4 deletions(-)

commit 5e3d890f8862a7d4fbef5e38e11b6c9fbd98f468
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-24 00:50:08 +0800

    CI: Disable sandboxing in fsanitize=address,undefined job.
    
    The sandboxing on Linux now supports Landlock, which restricts all
    supported filesystem actions after xz opens the files it needs. The
    sandbox is only enabled when one file is input and we are writing to
    standard out. With fsanitize=address,undefined, the instrumentation
    needs to read additional files after the sandbox is in place. This
    forces all xz based test to fail, so the sandbox must instead be
    disabled.

 .github/workflows/ci.yml | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit b1408987ea832e2760e478ae960a636df17a1363
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-24 00:15:39 +0800

    CI: Allow disabling the sandbox in ci_build.sh.

 build-aux/ci_build.sh | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit 91c435cf1c7a1e893706d4d716dfd361621ed824
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-11 19:47:44 +0300

    CMake: Don't shadow the cache entry ENABLE_THREADS with a normal variable.
    
    Using set(ENABLE_THREADS "posix") is confusing because it sets
    a new normal variable and leaves the cache entry with the same
    name unchanged. The intent wasn't to change the cache entry so
    this switches to a different variable name.

 CMakeLists.txt | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

commit fa1609eb9393ecd30decfed4891c907829f06710
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-09 22:28:49 +0300

    Docs: Update INSTALL about sandboxing support.

 INSTALL | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit 8276c7f41c671eee4aa3239490658b23dcfd3021
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-09 22:07:52 +0300

    xz: Support basic sandboxing with Linux Landlock (ABI versions 1-3).
    
    It is enabled only when decompressing one file to stdout,
    similar to how Capsicum is used.
    
    Landlock was added in Linux 5.13.

 CMakeLists.txt   | 12 +++++++++++-
 configure.ac     | 11 ++++++++---
 src/xz/file_io.c | 58 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/xz/main.c    | 19 +++++++++++++++++++
 src/xz/private.h |  3 ++-
 5 files changed, 98 insertions(+), 5 deletions(-)

commit 3a1e9fd031b9320d769d63b503ef4e82e1b6ea8c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-09 21:12:31 +0300

    CMake: Edit threading related messages.
    
    It's mostly to change from "thread method" to "threading method".

 CMakeLists.txt | 19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

commit bf011352528ae3539ea7b780b45b96736ee57a99
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-09 20:59:24 +0300

    CMake: Use FATAL_ERROR if user-supplied options aren't understood.
    
    This way typos are caught quickly and compounding error messages
    are avoided (a single typo could cause more than one error).
    
    This keeps using SEND_ERROR when the system is lacking a feature
    (like threading library or sandboxing method). This way the whole
    configuration log will be generated in case someone wishes to
    report a problem upstream.

 CMakeLists.txt | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

commit 3f53870c249945d657ca3d75e0993e6267d71f75
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-09 18:37:32 +0300

    CMake: Add sandboxing support.

 CMakeLists.txt | 50 +++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 49 insertions(+), 1 deletion(-)

commit 2e2cd11535ad77364cf021297e0b3f162fa3a3d0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-09 18:13:08 +0300

    Simplify detection of Capsicum support.
    
    This removes support for FreeBSD 10.0 and 10.1 which used
    <sys/capability.h> instead of <sys/capsicum.h>. Support for
    FreeBSD 10.1 ended on 2016-12-31. So now FreeBSD >= 10.2 is
    required to enable Capsicum support.
    
    This also removes support for Capsicum on Linux (libcaprights)
    which seems to have been unmaintained since 2017 and Linux 4.11:
    https://github.com/google/capsicum-linux

 configure.ac            |  4 +--
 m4/ax_check_capsicum.m4 | 85 -------------------------------------------------
 src/xz/Makefile.am      |  2 +-
 src/xz/file_io.c        | 14 +++-----
 src/xz/private.h        |  2 +-
 5 files changed, 9 insertions(+), 98 deletions(-)

commit c57858b60e186d020b2dbaf7aabd9b32c71da824
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-25 01:46:36 +0300

    xz/Windows: Allow clock_gettime with POSIX threads.
    
    If winpthreads are used for threading, it's OK to use clock_gettime()
    from winpthreads too.

 src/xz/mytime.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit dd32f628bb5541ef4e8ce66966ef456a1934084c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-25 01:39:26 +0300

    mythread.h: Make MYTHREAD_POSIX compatible with MinGW-w64's winpthreads.
    
    This might be almost useless but it doesn't need much extra code either.

 src/common/mythread.h | 23 ++++++++++++++++++++++-
 1 file changed, 22 insertions(+), 1 deletion(-)

commit 680e52cdd086e92691d8a0bca2c98815565f60ca
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-23 03:06:36 +0300

    CMake: Check for clock_gettime() even on Windows.
    
    This mirrors configure.ac although currently MinGW-w64 builds
    don't use clock_gettime() even if it is found.

 CMakeLists.txt | 44 +++++++++++++++++++++-----------------------
 1 file changed, 21 insertions(+), 23 deletions(-)

commit 1c1a8c3ee4dad0064dbe63b8dbc4ac4bc679f419
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-23 03:23:32 +0300

    Build: Check for clock_gettime() even if not using POSIX threads.
    
    See the new comment in the code.
    
    This also makes the check for clock_gettime() run with MinGW-w64
    with which we don't want to use clock_gettime(). The previous
    commit already took care of this situation.

 configure.ac | 31 ++++++++++++++++++-------------
 1 file changed, 18 insertions(+), 13 deletions(-)

commit 46fd991cd2808ef62554853864c946232e7547f0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-24 22:58:53 +0300

    xz/Windows: Ensure that clock_gettime() isn't used with MinGW-w64.
    
    This commit alone doesn't change anything in the real-world:
    
      - configure.ac currently checks for clock_gettime() only
        when using pthreads.
    
      - CMakeLists.txt doesn't check for clock_gettime() on Windows.
    
    So clock_gettime() wasn't used with MinGW-w64 before either.
    
    clock_gettime() provides monotonic time and it's better than
    gettimeofday() in this sense. But clock_gettime() is defined
    in winpthreads, and liblzma or xz needs nothing else from
    winpthreads. By avoiding clock_gettime(), we avoid the dependency on
    libwinpthread-1.dll or the need to link against the static version.
    
    As a bonus, GetTickCount64() and MinGW-w64's gettimeofday() can be
    faster than clock_gettime(CLOCK_MONOTONIC, &tv). The resolution
    is more than good enough for the progress indicator in xz.

 src/xz/mytime.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

commit cdb4d91f2464b50c985ef7b9517314ea237ddda7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-24 00:21:22 +0300

    xz/Windows: Use GetTickCount64() with MinGW-w64 if using Vista threads.

 src/xz/mytime.c | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

commit 988e09f27b9b04a43d45d10f92782e0092ee27a9
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-20 19:17:46 +0800

    liblzma: Move is_clmul_supported() back to crc_common.h.
    
    This partially reverts creating crc_clmul.c
    (8c0f9376f58c0696d5d6719705164d35542dd891) where is_clmul_supported()
    was moved, extern'ed, and renamed to lzma_is_clmul_supported(). This
    caused a problem when the function call to lzma_is_clmul_supported()
    results in a call through the PLT. ifunc resolvers run very early in
    the dynamic loading sequence, so the PLT may not be setup properly at
    this point. Whether the PLT is used or not for
    lzma_is_clmul_supported() depened upon the compiler-toolchain used and
    flags.
    
    In liblzma compiled with GCC, for instance, GCC will go through the PLT
    for function calls internal to liblzma if the version scripts and
    symbol visibility hiding are not used. If lazy-binding is disabled,
    then it would have made any program linked with liblzma fail during
    dynamic loading in the ifunc resolver.

 src/liblzma/check/crc32_fast.c |  2 +-
 src/liblzma/check/crc64_fast.c |  2 +-
 src/liblzma/check/crc_clmul.c  | 45 ------------------------------------
 src/liblzma/check/crc_common.h | 52 +++++++++++++++++++++++++++++++++++++++---
 4 files changed, 51 insertions(+), 50 deletions(-)

commit 105c7ca90d4152942e0798580a37f736d02faa22
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-19 16:23:32 +0800

    Build: Remove check for COND_CHECK_CRC32 in check/Makefile.inc.
    
    Currently crc32 is always enabled, so COND_CHECK_CRC32 must always be
    set. Because of this, it makes the recent change to conditionally
    compile check/crc_clmul.c appear wrong since that file has CLMUL
    implementations for both CRC32 and CRC64.

 src/liblzma/check/Makefile.inc | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 139757170468f0f1fafdf0a8ffa74363d1ea1d0c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-19 16:09:01 +0800

    CMake: Add ALLOW_CLMUL_CRC option to enable/disable CLMUL.
    
    The option is enabled by default, but will only be visible to a user
    listing cache variables or using a CMake GUI application if the
    immintrin.h header file is found.
    
    This mirrors our Autotools build --disable-clmul-crc functionality.

 CMakeLists.txt | 44 +++++++++++++++++++++++++-------------------
 1 file changed, 25 insertions(+), 19 deletions(-)

commit c60b25569d414bb73b705977a4dd342f8f9f1965
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-19 00:22:50 +0800

    liblzma: Fix -fsanitize=address failure with crc_clmul functions.
    
    After forcing crc_simd_body() to always be inlined it caused
    -fsanitize=address to fail for lzma_crc32_clmul() and
    lzma_crc64_clmul(). The __no_sanitize_address__ attribute was added
    to lzma_crc32_clmul() and lzma_crc64_clmul(), but not removed from
    crc_simd_body(). ASAN and inline functions behavior has changed over
    the years for GCC specifically, so while strictly required we will
    keep __attribute__((__no_sanitize_address__)) on crc_simd_body() in
    case this becomes a requirement in the future.
    
    Older GCC versions refuse to inline a function with ASAN if the
    caller and callee do not agree on sanitization flags
    (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=89124#c3). If the
    function was forced to be inlined, it will not compile if the callee
    function has __no_sanitize_address__ but the caller doesn't.

 src/liblzma/check/crc_clmul.c | 6 ++++++
 1 file changed, 6 insertions(+)

commit 9a78971261bc67622cbd7dae02f6966968ac1393
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-14 20:16:13 +0300

    tuklib_integer: Update the CMake test for fast unaligned access.

 cmake/tuklib_integer.cmake | 69 ++++++++++++++++++++++++++++++++++++----------
 1 file changed, 54 insertions(+), 15 deletions(-)

commit 2f81ac852bc5aafc91c8e2adc66b5114761703c4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-23 23:28:48 +0300

    Build: Enabled unaligned access by default on PowerPC64LE and some RISC-V.
    
    PowerPC64LE wasn't tested but it seems like a safe change.
    POWER8 supports unaligned access in little endian mode. Testing
    on godbolt.org shows that GCC uses unaligned access by default.
    
    The RISC-V macro __riscv_misaligned_fast is very new and not
    in any stable compiler release yet.
    
    Documentation in INSTALL was updated to match.
    
    Documentation about an autodetection bug when using ARM64 GCC
    with -mstrict-align was added to INSTALL.
    
    CMake files weren't updated yet.

 INSTALL              | 39 +++++++++++++++++++++++++++++++++++++--
 m4/tuklib_integer.m4 | 34 +++++++++++++++++++++++++++-------
 2 files changed, 64 insertions(+), 9 deletions(-)

commit c8f715f1bca4c30db814fcf1fd2fe88b8992ede2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-14 17:56:59 +0300

    tuklib_integer: Revise unaligned reads and writes on strict-align archs.
    
    In XZ Utils context this doesn't matter much because
    unaligned reads and writes aren't used in hot code
    when TUKLIB_FAST_UNALIGNED_ACCESS isn't #defined.

 src/common/tuklib_integer.h | 256 ++++++++++++++++++++++++++++++++------------
 1 file changed, 189 insertions(+), 67 deletions(-)

commit 6828242735cbf61b93d140383336e1e51a006f2d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-23 02:21:49 +0300

    tuklib_integer: Add missing write64be and write64le fallback functions.

 src/common/tuklib_integer.h | 34 ++++++++++++++++++++++++++++++++++
 1 file changed, 34 insertions(+)

commit 1c8884f0af28b3a4690bb573cdf3240a8ec73416
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-18 19:57:10 +0800

    liblzma: Set the MSVC optimization fix to only cover lzma_crc64_clmul().
    
    After testing a 32-bit Release build on MSVC, only lzma_crc64_clmul()
    has the bug. crc_simd_body() and lzma_crc32_clmul() do not need the
    optimizations disabled.

 src/liblzma/check/crc_clmul.c | 30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

commit 5ce0f7a48bdf5c3b45430850a4487307afac6143
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-18 14:30:00 +0300

    liblzma: CRC_USE_GENERIC_FOR_SMALL_INPUTS cannot be used with ifunc.

 src/liblzma/check/crc_common.h | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 27735380491bb5ce0d0f41d5244d89c1d0825f6b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-17 21:53:11 +0300

    liblzma: Include common.h in crc_common.h.
    
    crc_common.h depends on common.h. The headers include common.h except
    when there is a reason to not do so.

 src/liblzma/check/crc_clmul.c  | 1 -
 src/liblzma/check/crc_common.h | 3 +++
 2 files changed, 3 insertions(+), 1 deletion(-)

commit e13b7947b92355c334edd594295d3a2c99c4bca1
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-18 01:23:26 +0800

    liblzma: Add include guards to crc_common.h.

 src/liblzma/check/crc_common.h | 5 +++++
 1 file changed, 5 insertions(+)

commit 40abd88afcc61a8157fcd12d78d491caeb8e12be
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-18 22:50:25 +0800

    liblzma: Add the crc_always_inline macro to crc_simd_body().
    
    Forcing this to be inline has a significant speed improvement at the
    cost of a few repeated instructions. The compilers tested on did not
    inline this function since it is large and is used twice in the same
    translation unit.

 src/liblzma/check/crc_clmul.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a5966c276bd6fa975f0389f8a8dc61393de750b0
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-18 22:48:19 +0800

    liblzma: Create crc_always_inline macro.
    
    This macro must be used instead of the inline keyword. On MSVC, it is
    a replacement for __forceinline which is an MSVC specific keyword that
    should not be used with inline (it will issue a warning if it is).
    
    It does not use a build system check to determine if
    __attribute__((__always_inline__)) since all compilers that can use
    CLMUL extensions (except the special case for MSVC) should support this
    attribute. If this assumption is incorrect then it will result in a bug
    report instead of silently producing slow code.

 src/liblzma/check/crc_common.h | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

commit 96b663f67c0e738a99ba8f35d9f4ced9add74544
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-14 13:23:23 +0800

    liblzma: Refactor CRC comments.
    
    A detailed description of the three dispatch methods was added. Also,
    duplicated comments now only appear in crc32_fast.c or were removed from
    both crc32_fast.c and crc64_fast.c if they appeared in crc_clmul.c.

 src/liblzma/check/crc32_fast.c | 64 +++++++++++++++++++++++++++++-------------
 src/liblzma/check/crc64_fast.c | 61 ++++++----------------------------------
 2 files changed, 53 insertions(+), 72 deletions(-)

commit 8c0f9376f58c0696d5d6719705164d35542dd891
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-14 12:17:57 +0800

    liblzma: Create crc_clmul.c.
    
    Both crc32_clmul() and crc64_clmul() are now exported from
    crc32_clmul.c as lzma_crc32_clmul() and lzma_crc64_clmul(). This
    ensures that is_clmul_supported() (now lzma_is_clmul_supported()) is
    not duplicated between crc32_fast.c and crc64_fast.c.
    
    Also, it encapsulates the complexity of the CLMUL implementations into a
    single file and reduces the complexity of crc32_fast.c and crc64_fast.c.
    Before, CLMUL code was present in crc32_fast.c, crc64_fast.c, and
    crc_common.h.
    
    During the conversion, various cleanups were applied to code (thanks to
    Lasse Collin) including:
    
    - Require using semicolons with MASK_/L/H/LH macros.
    - Variable typing and const handling improvements.
    - Improvements to comments.
    - Fixes to the pragmas used.
    - Removed unneeded variables.
    - Whitespace improvements.
    - Fixed CRC_USE_GENERIC_FOR_SMALL_INPUTS handling.
    - Silenced warnings and removed the need for some #pragmas

 CMakeLists.txt                 |   6 +-
 configure.ac                   |   6 +-
 src/liblzma/check/Makefile.inc |   3 +
 src/liblzma/check/crc32_fast.c | 120 +-----------
 src/liblzma/check/crc64_fast.c | 128 +------------
 src/liblzma/check/crc_clmul.c  | 414 +++++++++++++++++++++++++++++++++++++++++
 src/liblzma/check/crc_common.h | 190 +------------------
 7 files changed, 444 insertions(+), 423 deletions(-)

commit a3ebc2c516b09616638060806c841bd4bcf7bce3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-14 10:23:03 +0800

    liblzma: Define CRC_USE_IFUNC in crc_common.h.
    
    When ifunc is supported, we can define a simpler macro instead of
    repeating the more complex check in both crc32_fast.c and crc64_fast.c.

 src/liblzma/check/crc32_fast.c | 3 +--
 src/liblzma/check/crc64_fast.c | 3 +--
 src/liblzma/check/crc_common.h | 5 +++++
 3 files changed, 7 insertions(+), 4 deletions(-)

commit f1cd9d7194f005cd66ec03c6635ceae75f90ef17
Author: Hans Jansen <hansjansen162@outlook.com>
Date:   2023-10-12 19:37:01 +0200

    liblzma: Added crc32_clmul to crc32_fast.c.

 src/liblzma/check/crc32_fast.c  | 247 ++++++++++++++++++++++++++++++++++++++--
 src/liblzma/check/crc32_table.c |  19 +++-
 2 files changed, 255 insertions(+), 11 deletions(-)

commit 93e6fb08b22c7c13be2dd1e7274fe78413436254
Author: Hans Jansen <hansjansen162@outlook.com>
Date:   2023-10-12 19:23:40 +0200

    liblzma: Moved CLMUL CRC logic to crc_common.h.
    
    crc64_fast.c was updated to use the code from crc_common.h instead.

 src/liblzma/check/crc64_fast.c | 257 ++---------------------------------------
 src/liblzma/check/crc_common.h | 230 +++++++++++++++++++++++++++++++++++-
 2 files changed, 240 insertions(+), 247 deletions(-)

commit 233885a437f8b55a5c8442984ebc0aaa579e92de
Author: Hans Jansen <hansjansen162@outlook.com>
Date:   2023-10-12 19:07:50 +0200

    liblzma: Rename crc_macros.h to crc_common.h.

 CMakeLists.txt                                   | 2 +-
 src/liblzma/check/Makefile.inc                   | 2 +-
 src/liblzma/check/crc32_fast.c                   | 2 +-
 src/liblzma/check/crc64_fast.c                   | 2 +-
 src/liblzma/check/{crc_macros.h => crc_common.h} | 2 +-
 5 files changed, 5 insertions(+), 5 deletions(-)

commit 37947d4a7565b87e4cec8b89229d35b0a3f8d2cd
Author: Gabriela Gutierrez <gabigutierrez@google.com>
Date:   2023-09-26 15:55:13 +0000

    CI: Bump and ref actions by commit SHA in windows-ci.yml
    
    Referencing actions by commit SHA in GitHub workflows guarantees you are using an immutable version. Actions referenced by tags and branches are more vulnerable to attacks, such as the tag being moved to a malicious commit or a malicious commit being pushed to the branch.
    
    It's important to make sure the SHA's are from the original repositories and not forks.
    
    For reference:
    
    https://github.com/msys2/setup-msys2/releases/tag/v2.20.1
    https://github.com/msys2/setup-msys2/commit/27b3aa77f672cb6b3054121cfd80c3d22ceebb1d
    
    https://github.com/actions/checkout/releases/tag/v4.1.0
    https://github.com/actions/checkout/commit/8ade135a41bc03ea155e62e844d188df1ea18608
    
    https://github.com/actions/upload-artifact/releases/tag/v3.1.3
    https://github.com/actions/upload-artifact/commit/a8a3f3ad30e3422c9c7b888a15615d19a852ae32
    
    Signed-off-by: Gabriela Gutierrez <gabigutierrez@google.com>

 .github/workflows/windows-ci.yml | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit f28cc9bd481ce493da11f98c18526d324211599a
Author: Gabriela Gutierrez <gabigutierrez@google.com>
Date:   2023-09-26 14:35:08 +0000

    CI: Bump and ref actions by commit SHA in ci.yml
    
    Referencing actions by commit SHA in GitHub workflows guarantees you are using an immutable version. Actions referenced by tags and branches are more vulnerable to attacks, such as the tag being moved to a malicious commit or a malicious commit being pushed to the branch.
    
    It's important to make sure the SHA's are from the original repositories and not forks.
    
    For reference:
    
    https://github.com/actions/checkout/releases/tag/v4.1.0
    https://github.com/actions/checkout/commit/8ade135a41bc03ea155e62e844d188df1ea18608
    
    https://github.com/actions/upload-artifact/releases/tag/v3.1.3
    https://github.com/actions/upload-artifact/commit/a8a3f3ad30e3422c9c7b888a15615d19a852ae32
    
    Signed-off-by: Gabriela Gutierrez <gabigutierrez@google.com>

 .github/workflows/ci.yml | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit f74f1740067b75042497edbfa6ea457ff75484b9
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-10-12 20:12:18 +0800

    Build: Update visibility.m4 from Gnulib.
    
    Updating from version 6 -> 8 from upstream. Declarations for variables
    and function bodies were added to avoid unnecessary failures with
    -Werror.

 m4/visibility.m4 | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

commit 5c4bca521e6fb435898a0012b3276eee70a6dadf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-06 19:36:35 +0300

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit d91cb6e884c73d0b05d7e7d68ad4e6eb29f4b44b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-10-06 18:55:57 +0300

    CMake/Windows: Fix when the windres workaround is applied.
    
    CMake doesn't set WIN32 on CYGWIN but the workaround is
    probably needed on Cygwin too. Same for MSYS and MSYS2.
    
    The workaround must not be used with Clang that is acting in
    MSVC mode. This fixes it by checking for the known environments
    that need the workaround instead of using "NOT MSVC".
    
    Thanks to Martin Storsjö.
    https://github.com/tukaani-project/xz/commit/0570308ddd9c0e39e85597ebc0e31d4fc81d436f#commitcomment-129098431

 CMakeLists.txt | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 01e34aa1171b04f8b28960b1cc6135a903e0c13d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-29 22:11:54 +0800

    CI: Disable CLANG64 MSYS2 environment until bug is resolved.
    
    lld 17.0.1 searches for libraries to link first in the toolchain
    directories before the local directory when building. The is a problem
    for us because liblzma.a is installed in MSYS2 CLANG64 by default and
    xz.exe will thus use the installed library instead of the one being
    built.
    
    This causes tests to fail when they are expecting features to be
    disabled. More importantly, it will compile xz.exe with an incorrect
    liblzma and could cause unexpected behavior by being unable to update
    liblzma code in static builds. The CLANG64 environment can be tested
    again once this is fixed.
    
    Link to bug: https://github.com/llvm/llvm-project/issues/67779.

 .github/workflows/windows-ci.yml | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit 30d0c35327f3639cb11224872aa58fdbf0b1526e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-29 20:14:39 +0800

    CMake: Rename xz and man page symlink custom targets.
    
    The Ninja Generator for CMake cannot have a custom target and its
    BYPRODUCTS have the same name. This has prevented Ninja builds on
    Unix-like systems since the xz symlinks were introduced in
    80a1a8bb838842a2be343bd88ad1462c21c5e2c9.

 CMakeLists.txt | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 506d03127a8565442b028ec991e1578124fd3025
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-29 19:58:44 +0800

    CMake: Specify LINKER_LANGUAGE for libgnu target to fix Ninja Generator.
    
    CMake is unable to guess the linker language for just a header file so
    it must be explicitly set.

 CMakeLists.txt | 6 ++++++
 1 file changed, 6 insertions(+)

commit 0570308ddd9c0e39e85597ebc0e31d4fc81d436f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-27 19:54:35 +0300

    CMake: Fix Windows build with Clang/LLVM 17.
    
    llvm-windres 17.0.0 has more accurate emulation of GNU windres, so
    the hack for GNU windres must now be used with llvm-windres too.
    
    LLVM 16.0.6 has the old behavior and there likely won't be more
    16.x releases. So we can simply check for >= 17.0.0.
    
    See also:
    https://github.com/llvm/llvm-project/commit/2bcc0fdc58a220cb9921b47ec8a32c85f2511a47

 CMakeLists.txt | 26 ++++++++++++++------------
 1 file changed, 14 insertions(+), 12 deletions(-)

commit 5a9af95f85a7e5d4f9c10cb8cf737651a921f1d1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-26 21:47:13 +0300

    liblzma: Update a comment.
    
    The C standards don't allow an empty translation unit which can be
    avoided by declaring something, without exporting any symbols.
    
    When I committed f644473a211394447824ea00518d0a214ff3f7f2 I had
    a feeling that some specific toolchain somewhere didn't like
    empty object files (assembler or maybe "ar" complained) but
    I cannot find anything to confirm this now. Quite likely I
    remembered nonsense. I leave this here as a note to my future self. :-)

 src/liblzma/check/crc64_table.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 8ebaf3f665ddc7e4f19c613005050dde5ccbe499
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-27 00:02:11 +0800

    liblzma: Avoid compiler warning without creating extra symbol.
    
    When the generic fast crc64 method is used, then we omit
    lzma_crc64_table[][]. Similar to
    d9166b52cf3458a4da3eb92224837ca8fc208d79, we can avoid compiler warnings
    with -Wempty-translation-unit (Clang) or -pedantic (GCC) by creating a
    never used typedef instead of an extra symbol.

 src/liblzma/check/crc64_table.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 092d21db2e5eea19fe079264ce48c178989c7606
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-26 17:24:15 +0300

    Build: Update the comment about -Werror usage in checks.

 configure.ac | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

commit a37a2763383e6c204fe878e1416dd35e7711d3a9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-26 15:00:43 +0300

    Build: Fix __attribute__((ifunc(...))) detection with clang -Wall.
    
    Now if user-supplied CFLAGS contains -Wall -Wextra -Wpedantic
    the two checks that need -Werror will still work.
    
    At CMake side there is add_compile_options(-Wall -Wextra)
    but it didn't affect the -Werror tests. So with both Autotools
    and CMake only user-supplied CFLAGS could make the checks fail
    when they shouldn't.
    
    This is not a full fix as things like -Wunused-macros in
    user-supplied CFLAGS will still cause problems with both
    GCC and Clang.

 CMakeLists.txt | 8 ++++++++
 configure.ac   | 8 ++++++++
 2 files changed, 16 insertions(+)

commit 9c42f936939b813f25d0ff4e99c3eb9c2d17a0d2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-26 13:51:31 +0300

    Build: Fix underquoted AC_LANG_SOURCE.
    
    It made no practical difference in this case.

 configure.ac | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 9f1444a8a5c0e724b2c7ef83424f642f07a95982
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-26 13:14:37 +0300

    Build: Silence two Autoconf warnings.
    
    There were two uses of AC_COMPILE_IFELSE that didn't use
    AC_LANG_SOURCE and Autoconf warned about these. The omission
    had been intentional but it turned out that this didn't do
    what I thought it would.
    
    Autoconf 2.71 manual gives an impression that AC_LANG_SOURCE
    inserts all #defines that have been made with AC_DEFINE so
    far (confdefs.h). The idea was that omitting AC_LANG_SOURCE
    would mean that only the exact code included in the
    AC_COMPILE_IFELSE call would be compiled.
    
    With C programs this is not true: the #defines get added without
    AC_LANG_SOURCE too. There seems to be no neat way to avoid this.
    Thus, with the C language at least, adding AC_LANG_SOURCE makes
    no other difference than silencing a warning from Autoconf. The
    generated "configure" remains identical. (Docs of AC_LANG_CONFTEST
    say that the #defines have been inserted since Autoconf 2.63b and
    that AC_COMPILE_IFELSE uses AC_LANG_CONFTEST. So the behavior is
    documented if one also reads the docs of macros that one isn't
    calling directly.)
    
    Any extra code, including #defines, can cause problems for
    these two tests because these tests must use -Werror.
    CC=clang CFLAGS=-Weverything is the most extreme example.
    It enables -Wreserved-macro-identifier which warns about
    #define __EXTENSIONS__ 1 because it begins with two underscores.
    It's possible to write a test file that passes -Weverything but
    it becomes impossible when Autoconf inserts confdefs.h.
    
    So this commit adds AC_LANG_SOURCE to silence Autoconf warnings.
    A different solution is needed for -Werror tests.

 configure.ac | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

commit 519e47c2818acde571fadc79551294527fe6cc22
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-26 01:17:11 +0800

    CMake: Remove accidental extra newline.

 CMakeLists.txt | 1 -
 1 file changed, 1 deletion(-)

commit bbb42412da6a02705ba3e668e90840c2683e4e67
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-26 00:47:26 +0800

    Build: Remove Gnulib dependency from tests.
    
    The tests do not use any Gnulib replacements so they do not need to link
    libgnu.a or have /lib in the include path.

 tests/Makefile.am | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

commit d265f6b75691c6c8fa876eb5320c3ff5aed17dfa
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-26 00:43:43 +0800

    CMake: Remove /lib from tests include path.
    
    The tests never included anything from /lib, so this was not needed.

 CMakeLists.txt | 1 -
 1 file changed, 1 deletion(-)

commit 9fb5de41f2fb654ca952d4bda15cf3777c2b720f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-24 22:10:41 +0800

    Scripts: Change quoting style from `...' to '...'.

 src/scripts/xzdiff.in | 2 +-
 src/scripts/xzgrep.in | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit eaebdef4d4de3c088b0905f42626b74e0d23abf3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-24 22:10:18 +0800

    xz: Change quoting style from `...' to '...'.

 src/xz/args.c    |  6 +++---
 src/xz/file_io.c |  2 +-
 src/xz/main.c    |  4 ++--
 src/xz/message.c | 14 +++++++-------
 src/xz/options.c |  2 +-
 src/xz/suffix.c  |  2 +-
 src/xz/util.c    |  6 +++---
 7 files changed, 18 insertions(+), 18 deletions(-)

commit f6667702bf075a05fbe336dbf3576ad1a82ec645
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-24 22:09:47 +0800

    liblzma: Change quoting style from `...' to '...'.
    
    This was done for both internal and API headers.

 src/liblzma/api/lzma/base.h            | 18 +++++++++---------
 src/liblzma/api/lzma/container.h       | 10 +++++-----
 src/liblzma/api/lzma/filter.h          |  6 +++---
 src/liblzma/api/lzma/index.h           |  8 ++++----
 src/liblzma/api/lzma/lzma12.h          |  2 +-
 src/liblzma/lz/lz_encoder.h            |  2 +-
 src/liblzma/rangecoder/range_decoder.h |  2 +-
 7 files changed, 24 insertions(+), 24 deletions(-)

commit be012b8097a4eaee335b51357d6befa745f753ce
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-24 22:09:16 +0800

    Build: Change quoting style from `...' to '...'.

 configure.ac          | 18 +++++++++---------
 dos/config.h          |  6 +++---
 m4/getopt.m4          |  2 +-
 m4/tuklib_progname.m4 |  2 +-
 windows/build.bash    |  2 +-
 5 files changed, 15 insertions(+), 15 deletions(-)

commit ce162db07f03495bd333696e66883c8f36abdc1e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-24 22:05:02 +0800

    Docs: Change quoting style from `...' to '...'.
    
    These days the ` and ' do not look symmetric. This quoting style has
    been changed in various apps over the years including the GNU tools.

 INSTALL                         |  6 +++---
 doc/examples/01_compress_easy.c |  2 +-
 doc/examples/11_file_info.c     | 16 ++++++++--------
 3 files changed, 12 insertions(+), 12 deletions(-)

commit db17656721e43939bfa4ec13506e7c76f4b86da6
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-24 21:25:01 +0800

    lib: Silence -Wsign-conversion in getopt.c.

 lib/getopt.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit a6234f677d66888f435010bc0b67de6a32fefcf6
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-24 20:48:52 +0800

    Build: Update getopt.m4 from Gnulib.
    
    This file was modified from upstream since we do not need to replace
    getopt() and can avoid complexity and feature tests.

 m4/getopt.m4 | 79 ++++++++++++++++++++++++++++++------------------------------
 1 file changed, 39 insertions(+), 40 deletions(-)

commit 84808b68f1075e8603a8ef95d361a61fdc6a5b10
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-26 00:09:53 +0800

    CMake: Add /lib to include path.

 CMakeLists.txt | 5 +++++
 1 file changed, 5 insertions(+)

commit 01804a0b4b64e0f33568e947e0579263808c59d3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-24 20:36:34 +0800

    CMake: Update libgnu target with new header files.

 CMakeLists.txt | 5 +++++
 1 file changed, 5 insertions(+)

commit d34558388fe1d8929f6478d61dc322eb4f2900af
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-23 00:47:52 +0800

    lib: Update Makefile.am for new header files.

 lib/Makefile.am | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

commit 52bf644bdf536e20fcc743b712cede135e05eec5
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-24 20:34:03 +0800

    lib: Update getopt1.c from Gnulib.
    
    The only difference was maintaining the conditional inclusion for
    config.h.

 lib/getopt1.c | 56 ++++++++++++++++++++++----------------------------------
 1 file changed, 22 insertions(+), 34 deletions(-)

commit 7e884c00d0093c38339f17fb1d280eec493f42ca
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-23 03:27:00 +0800

    lib: Update getopt.in.h from Gnulib with modifications.
    
    We can still avoid modifying the contents of this file during
    configuration to simplify the build systems. Gnulib added replacements
    for inclusions guards for Cygwin. Cygwin should not need getopt_long
    replacement so this feature can be omitted.
    
    <unistd.h> is conditionally included to avoid MSVC since it is not
    available.
    
    The definition for _GL_ARG_NONNULL was also copied into this file from
    Gnulib since this stage is usually done during gnulib-tool.

 lib/getopt.in.h | 228 +++++++-------------------------------------------------
 1 file changed, 29 insertions(+), 199 deletions(-)

commit cff05f82066ca3ce9425dafdb086325a8eef8de3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-23 00:31:55 +0800

    lib: Update getopt_int.h from Gnulib.

 lib/getopt_int.h | 109 ++++++++++++++++++++++++-------------------------------
 1 file changed, 48 insertions(+), 61 deletions(-)

commit 04bd86a4b010d43c6a016a3857ecb38dc1d5b024
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-23 00:27:23 +0800

    lib: Update getopt.c from Gnulib with modifications.
    
    The code maintains the prior modifications of conditionally including
    config.h and disabling NLS support.
    
    _GL_UNUSED is repalced with the simple cast to void trick. _GL_UNUSED
    is only used for these two parameters so its simpler than having to
    define it.

 lib/getopt.c | 1134 +++++++++++++++++++---------------------------------------
 1 file changed, 377 insertions(+), 757 deletions(-)

commit 56b42be7287844db20b3a3bc1372c6ae8c040d63
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-23 00:18:56 +0800

    lib: Add getopt-cdefs.h for getopt_long update.
    
    This was modified slightly from Gnulib. In Gnulib, it expects the
    @HAVE_SYS_CDEFS_H@ to be replaced. Instead, we can set HAVE_SYS_CDEFS_H
    on systems that have it and avoid copying another file into the build
    directory. Since we are not using gnulib-tool, copying extra files
    requires extra build system updates (and special handling with CMake) so
    we should avoid when possible.

 lib/getopt-cdefs.h | 70 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 70 insertions(+)

commit 9834e591a4cf9dc2f49e42e26bf28d1d247bc196
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-23 00:15:25 +0800

    lib: Copy new header files from Gnulib without modification.
    
    The getopt related files have changed from Gnulib by splitting up
    getopt.in.h into more modular header files. We could have kept
    everything in just getopt.in.h, but this will help us continue to update
    in the future.

 lib/getopt-core.h     | 96 +++++++++++++++++++++++++++++++++++++++++++++++++++
 lib/getopt-ext.h      | 77 +++++++++++++++++++++++++++++++++++++++++
 lib/getopt-pfx-core.h | 66 +++++++++++++++++++++++++++++++++++
 lib/getopt-pfx-ext.h  | 70 +++++++++++++++++++++++++++++++++++++
 4 files changed, 309 insertions(+)

commit 5b7a6f06e93d99d6635a740fd2e12fab66096c93
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-22 21:16:52 +0300

    Windows: Update the version requirement comments from Win95 to W2k.

 windows/README-Windows.txt | 10 ++++------
 windows/build.bash         |  6 +++---
 2 files changed, 7 insertions(+), 9 deletions(-)

commit e582f8e0fee46e7cd967f42f465d6bb608b73bc1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-22 21:12:54 +0300

    tuklib_physmem: Comment out support for Windows versions older than 2000.

 src/common/tuklib_physmem.c | 20 +++++++++-----------
 1 file changed, 9 insertions(+), 11 deletions(-)

commit 7d73d1f0e08f96c4ab7aac91b958e37a3dadf07a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-24 16:32:32 +0300

    sysdefs.h: Update the comment about __USE_MINGW_ANSI_STDIO.

 src/common/sysdefs.h | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

commit 2a9929af0ab7e6c0ab725565034afe3293e51d71
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-22 02:33:29 +0300

    xz: Windows: Don't (de)compress to special files like "con" or "nul".
    
    Before this commit, the following writes "foo" to the
    console and deletes the input file:
    
        echo foo | xz > con_xz
        xz --suffix=_xz --decompress con_xz
    
    It cannot happen without --suffix because names like con.xz
    are also special and so attempting to decompress con.xz
    (or compress con to con.xz) will already fail when opening
    the input file.
    
    Similar thing is possible when compressing. The following
    writes to "nul" and the input file "n" is deleted.
    
        echo foo | xz > n
        xz --suffix=ul n
    
    Now xz checks if the destination is a special file before
    continuing. DOS/DJGPP version had a check for this but
    Windows (and OS/2) didn't.

 src/xz/file_io.c | 35 ++++++++++++++++++++++++++++-------
 1 file changed, 28 insertions(+), 7 deletions(-)

commit 01311b81f03cce1c0ce847a3d556f84dbd439343
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-21 20:42:52 +0300

    CMake: Wrap two overlong lines that are possible to wrap.

 CMakeLists.txt | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 152d0771ddd0cffcac9042ad1a66f110d228eee2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-21 20:36:31 +0300

    CMake: Add a comment about threads on Cygwin.

 CMakeLists.txt | 1 +
 1 file changed, 1 insertion(+)

commit 6df988cceffaa3100b428ed816fad334935b27bf
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-12 23:53:25 +0300

    MSVC: Remove Visual Studio project files and update INSTALL-MSVC.txt.
    
    CMake is now the preferred build file generator when building
    with MSVC.

 windows/INSTALL-MSVC.txt           |  37 ++--
 windows/vs2013/config.h            | 157 ---------------
 windows/vs2013/liblzma.vcxproj     | 363 ---------------------------------
 windows/vs2013/liblzma_dll.vcxproj | 398 ------------------------------------
 windows/vs2013/xz_win.sln          |  48 -----
 windows/vs2017/config.h            | 157 ---------------
 windows/vs2017/liblzma.vcxproj     | 363 ---------------------------------
 windows/vs2017/liblzma_dll.vcxproj | 398 ------------------------------------
 windows/vs2017/xz_win.sln          |  48 -----
 windows/vs2019/config.h            | 157 ---------------
 windows/vs2019/liblzma.vcxproj     | 364 ---------------------------------
 windows/vs2019/liblzma_dll.vcxproj | 399 -------------------------------------
 windows/vs2019/xz_win.sln          |  51 -----
 13 files changed, 12 insertions(+), 2928 deletions(-)

commit edd563daf0da1d00018684614803c77ab62efcd6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-21 19:17:40 +0300

    CMake: Require VS2015 or later for building xzdec.
    
    xzdec might build with VS2013 but it hasn't been tested.
    It was never supported before and VS2013 is old anyway
    so for simplicity only liblzma is supported with VS2013.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit daea64d158a7151ca6c255a0e4554c6d521cd589
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-12 23:43:49 +0300

    CMake: Allow building xz with Visual Studio 2015 and later.
    
    Building the command line tools xz and xzdec with the combination
    of CMake + Visual Studio 2015/2017/2019/2022 works now.
    
    VS2013 update 2 should still be able to build liblzma.
    VS2013 cannot build the xz command line tool because xz
    needs snprintf() that roughly conforms to C99.
    VS2013 is old and no extra code will be added to support it.
    
    Thanks to Kelvin Lee and Jia Tan for testing.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 8c2d197c940d246849b2ec48109bb22e54036927
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-12 23:34:31 +0300

    MSVC: #define inline and restrict only when needed.
    
    This also drops the check for _WIN32 as that shouldn't be needed.

 src/common/sysdefs.h | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

commit af66cd585902045e5689a0418103ec81f19f1d0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-12 22:16:56 +0300

    CMake: Add support for replacement getopt_long (lib/getopt*).
    
    Thanks to Jia Tan for the initial work. I added the libgnu target
    and made a few related minor edits.

 CMakeLists.txt | 54 +++++++++++++++++++++++++++++++++++++++++++++++-------
 1 file changed, 47 insertions(+), 7 deletions(-)

commit e3288fdb45c580cb849f6799cf419c4922004ae5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-12 21:12:34 +0300

    CMake: Bump maximum policy version to 3.27.
    
    There are several new policies. CMP0149 may affect the Windows SDK
    version that CMake will choose by default. The new behavior is more
    predictable, always choosing the latest SDK version by default.
    
    The other new policies shouldn't affect this package.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit aff1b479c7b168652bd20305ceed4317d5db6661
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-12 20:55:10 +0300

    lib/getopt*.c: Include <config.h> only HAVE_CONFIG_H is defined.
    
    The CMake-based build doesn't use config.h.
    
    Up-to-date getopt_long in Gnulib is LGPLv2 so at some
    point it could be included in XZ Utils too but for now
    this commit is enough to make CMake-based build possible.

 lib/getopt.c  | 4 +++-
 lib/getopt1.c | 4 +++-
 2 files changed, 6 insertions(+), 2 deletions(-)

commit aa0cd585d2ed1455d35732798e0d90e3520e8ba5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-08 19:08:57 +0300

    Doxygen: Add more C macro names to PREDEFINED.

 doxygen/Doxyfile | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit ee7709bae53637e1765ce142ef102914f1423cb5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-11 18:47:26 +0300

    liblzma: Move a few __attribute__ uses in function declarations.
    
    The API headers have many attributes but these were left
    as is for now.

 src/liblzma/common/common.c    | 6 ++++--
 src/liblzma/common/common.h    | 8 ++++----
 src/liblzma/common/memcmplen.h | 3 ++-
 3 files changed, 10 insertions(+), 7 deletions(-)

commit 217958d88713b5dc73d366d24dd64b2b311b86fe
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-11 19:03:35 +0300

    xz, xzdec, lzmainfo: Use tuklib_attr_noreturn.
    
    For compatibility with C23's [[noreturn]], tuklib_attr_noreturn
    must be at the beginning of declaration (before "extern" or
    "static", and even before any GNU C's __attribute__).
    
    This commit also moves all other function attributes to
    the beginning of function declarations. "extern" is kept
    at the beginning of a line so the attributes are listed on
    separate lines before "extern" or "static".

 src/lzmainfo/lzmainfo.c |  6 ++++--
 src/xz/coder.c          |  3 ++-
 src/xz/hardware.h       |  3 ++-
 src/xz/message.h        | 30 +++++++++++++++++-------------
 src/xz/options.c        |  3 ++-
 src/xz/util.h           |  8 ++++----
 src/xzdec/xzdec.c       |  9 ++++++---
 7 files changed, 37 insertions(+), 25 deletions(-)

commit 18a66fbac031c98f9c2077fc88846e4d07849197
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-11 18:53:31 +0300

    Remove incorrect uses of __attribute__((__malloc__)).
    
    xrealloc() is obviously incorrect, modern GCC docs even
    mention realloc() as an example where this attribute
    cannot be used.
    
    liblzma's lzma_alloc() and lzma_alloc_zero() would be
    correct uses most of the time but custom allocators
    may use a memory pool or otherwise hold the pointer
    so aliasing issues could happen in theory.
    
    The xstrdup() case likely was correct but I removed it anyway.
    Now there are no __malloc__ attributes left in the code.
    The allocations aren't in hot paths so this should make
    no practical difference.

 src/liblzma/common/common.c | 4 ++--
 src/liblzma/common/common.h | 4 ++--
 src/xz/util.h               | 4 ++--
 3 files changed, 6 insertions(+), 6 deletions(-)

commit 74b0e900c92d5b222b36f474f1efa431f8e262f7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-08 18:41:25 +0300

    Build: Omit -Wc99-c11-compat since it warns about _Noreturn.

 configure.ac | 1 -
 1 file changed, 1 deletion(-)

commit 90c94dddfd57b7d744bfad64c54e10d15778144b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-08 18:19:26 +0300

    tuklib: Update tuklib_attr_noreturn for C11/C17 and C23.
    
    This makes no difference for GCC or Clang as they support
    GNU C's __attribute__((__noreturn__)) but this helps with MSVC:
    
      - VS 2019 version 16.7 and later support _Noreturn if the
        options /std:c11 or /std:c17 are used. This gets handled
        with the check for __STDC_VERSION__ >= 201112.
    
      - When MSVC isn't in C11/C17 mode, __declspec(noreturn) is used.
    
    C23 will deprecate _Noreturn (and <stdnoreturn.h>)
    for [[noreturn]]. This commit anticipates that but
    the final __STDC_VERSION__ value isn't known yet.

 src/common/tuklib_common.h | 22 +++++++++++++++++++++-
 src/common/tuklib_exit.h   |  4 ++--
 2 files changed, 23 insertions(+), 3 deletions(-)

commit 189f72581329ab281ad6af37f60135910cb1b146
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-11 17:22:44 +0300

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 79334e7f20f2bf9e0de095835b48868f1238f584
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-05 22:42:10 +0300

    MSVC: xz: Make file_io.c and file_io.h compatible with MSVC.
    
    Thanks to Kelvin Lee for the original patches
    and testing the modifications I made.

 src/xz/file_io.c | 26 ++++++++++++++++++++++++++
 src/xz/file_io.h | 10 ++++++++++
 2 files changed, 36 insertions(+)

commit c660b8d78b7bda43b12b285550d8c70e8ccec698
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-05 21:33:35 +0300

    MSVC: xz: Use GetTickCount64() to implement mytime_now().
    
    It's available since Windows Vista.

 src/xz/mytime.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

commit 5c6f892d411670e3060f4bc309402617a209e57c
Author: Kelvin Lee <kiyolee@gmail.com>
Date:   2023-09-05 15:05:09 +0300

    MSVC: xz: Use _stricmp() instead of strcasecmp() in suffix.c.

 src/xz/suffix.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

commit e241051f50044259d174e8b4633dd9a1c4478408
Author: Kelvin Lee <kiyolee@gmail.com>
Date:   2023-09-05 15:01:10 +0300

    MSVC: xz: Use _isatty() from <io.h> to implement isatty().

 src/xz/message.c | 5 +++++
 src/xz/util.c    | 5 +++++
 2 files changed, 10 insertions(+)

commit d14bba8fc2be02a9fed8c9bcaaf61103451755f8
Author: Kelvin Lee <kiyolee@gmail.com>
Date:   2023-09-05 15:10:31 +0300

    MSVC: xz: Use _fileno() instead of fileno().

 src/xz/private.h | 4 ++++
 1 file changed, 4 insertions(+)

commit c4edd367678e6a38c42b149856159bf417da7fe1
Author: Kelvin Lee <kiyolee@gmail.com>
Date:   2023-09-05 15:00:07 +0300

    MSVC: xzdec: Use _fileno and _setmode.

 src/xzdec/xzdec.c | 4 ++++
 1 file changed, 4 insertions(+)

commit cfd1054b9b539ee92524901e95d7bb5a1fe670a0
Author: Kelvin Lee <kiyolee@gmail.com>
Date:   2023-09-05 14:37:50 +0300

    MSVC: Don't #include <unistd.h>.

 lib/getopt.c      | 4 +++-
 lib/getopt.in.h   | 4 +++-
 src/xz/private.h  | 5 ++++-
 src/xzdec/xzdec.c | 5 ++++-
 4 files changed, 14 insertions(+), 4 deletions(-)

commit adef92f23563a2cc088b31ddee9040ecc96bc996
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-19 14:03:45 +0300

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 953e775941a25bfcfa353f802b13e66acb1edf2c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-14 21:13:23 +0800

    CI: Enable CLMUL in address sanitization test.
    
    The crc64_clmul() function should be ignored by the address sanitizer
    now so these builds should still pass.

 .github/workflows/ci.yml | 12 ++++--------
 1 file changed, 4 insertions(+), 8 deletions(-)

commit f167e79bc98f3f56af2e767b83aa81c2d2b9ed77
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-14 16:35:46 +0300

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 4f44ef86758a41a8ec814096f4cb6ee6de04c82e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-09-14 16:34:07 +0300

    liblzma: Mark crc64_clmul() with __attribute__((__no_sanitize_address__)).
    
    Thanks to Agostino Sarubbo.
    Fixes: https://github.com/tukaani-project/xz/issues/62

 src/liblzma/check/crc64_fast.c | 8 ++++++++
 1 file changed, 8 insertions(+)

commit 7379bb3eed428c0ae734d0cc4a1fd04359d53f08
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-12 22:36:12 +0800

    CMake: Fix time.h checks not running on second CMake run.
    
    If CMake was configured more than once, HAVE_CLOCK_GETTIME and
    HAVE_CLOCK_MONOTONIC would not be set as compile definitions. The check
    for librt being needed to provide HAVE_CLOCK_GETTIME was also
    simplified.

 CMakeLists.txt | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

commit 5d691fe58286b92d704c0dc5cd0c4df22881c6c6
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-09-12 22:34:06 +0800

    CMake: Fix unconditionally defining HAVE_CLOCK_MONOTONIC.
    
    If HAVE_CLOCK_GETTIME was defined, then HAVE_CLOCK_MONOTONIC was always
    added as a compile definition even if the check for it failed.

 CMakeLists.txt | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

commit eccf12866527b8d24c7d7f92f755142be8ef9b11
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-08-31 19:50:05 +0300

    xz: Refactor thousand separator detection and disable it on MSVC.
    
    Now the two variations of the format strings are created with
    a macro, and the whole detection code can be easily disabled
    on platforms where thousand separator formatting is known to
    not work (MSVC has no support, and on DJGPP 2.05 it can have
    problems in some cases).

 src/xz/util.c | 89 ++++++++++++++++++++++++++++++-----------------------------
 1 file changed, 45 insertions(+), 44 deletions(-)

commit f7093cd9d130477c234b40aeda613964171f8f21
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-08-31 18:14:43 +0300

    xz: Fix a too relaxed assertion and remove uses of SSIZE_MAX.
    
    SSIZE_MAX isn't readily available on MSVC. Removing it means
    that there is one thing less to worry when porting to MSVC.

 src/xz/file_io.c | 5 ++---
 src/xz/file_io.h | 4 ++--
 2 files changed, 4 insertions(+), 5 deletions(-)

commit 74c3449d8b816a724b12ebce7417e00fb597309a
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-28 23:14:45 +0800

    Tests: Improve invalid unpadded size check in test_lzma_index_append().
    
    This check was extended to test the code added to fix a failing assert
    in ae5c07b22a6b3766b84f409f1b6b5c100469068a.

 tests/test_index.c | 26 +++++++++++++++++++++++---
 1 file changed, 23 insertions(+), 3 deletions(-)

commit 2544274a8b8a27f4ea6c457d2c4c32eb1e4cd336
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-28 21:54:41 +0800

    Tests: Improve comments in test_index.c.

 tests/test_index.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 49be29d6380b94e6fb26e511dd2cdbd9afce0f8b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-28 21:52:54 +0800

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 721e3d9f7a82f59f32795d5fb97e0210d1aa839a
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-28 21:50:16 +0800

    liblzma: Update assert in vli_ceil4().
    
    The argument to vli_ceil4() should always guarantee the return value
    is also a valid lzma_vli. Thus the highest three valid lzma_vli values
    are invalid arguments. All uses of the function ensure this so the
    assert is updated to match this.

 src/liblzma/common/index.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ae5c07b22a6b3766b84f409f1b6b5c100469068a
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-28 21:31:25 +0800

    liblzma: Add overflow check for Unpadded size in lzma_index_append().
    
    This was not a security bug since there was no path to overflow
    UINT64_MAX in lzma_index_append() or when it calls index_file_size().
    The bug was discovered by a failing assert() in vli_ceil4() when called
    from index_file_size() when unpadded_sum (the sum of the compressed size
    of current Stream and the unpadded_size parameter) exceeds LZMA_VLI_MAX.
    
    Previously, the unpadded_size parameter was checked to be not greater
    than UNPADDED_SIZE_MAX, but no check was done once compressed_base was
    added.
    
    This could not have caused an integer overflow in index_file_size() when
    called by lzma_index_append(). The calculation for file_size breaks down
    into the sum of:
    
    - Compressed base from all previous Streams
    - 2 * LZMA_STREAM_HEADER_SIZE (size of the current Streams header and
      footer)
    - stream_padding (can be set by lzma_index_stream_padding())
    - Compressed base from the current Stream
    - Unpadded size (parameter to lzma_index_append())
    
    The sum of everything except for Unpadded size must be less than
    LZMA_VLI_MAX. This is guarenteed by overflow checks in the functions
    that can set these values including lzma_index_stream_padding(),
    lzma_index_append(), and lzma_index_cat(). The maximum value for
    Unpadded size is enforced by lzma_index_append() to be less than or
    equal UNPADDED_SIZE_MAX. Thus, the sum cannot exceed UINT64_MAX since
    LZMA_VLI_MAX is half of UINT64_MAX.
    
    Thanks to Joona Kannisto for reporting this.

 src/liblzma/common/index.c | 6 ++++++
 1 file changed, 6 insertions(+)

commit 1057765aaabfe0f1397b8094531846655376ae38
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-28 22:18:29 +0800

    Translations: Update the Esperanto translation.

 po/eo.po | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit f2e94d064f305bb8ad77ca70f91d93e55f5cf856
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-26 20:10:23 +0800

    Translations: Update the Esperanto translation.

 po/eo.po | 47 +++++++++++++++++++++++++++++------------------
 1 file changed, 29 insertions(+), 18 deletions(-)

commit 2b871f4dbffe3801d0da3f89806b5935f758d5f3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-09 20:55:36 +0800

    Docs: Update INSTALL for --enable-threads method win95.
    
    The Autotools build allows win95 threads and --enable-small together now
    if the compiler supports __attribute__((__constructor__)).

 INSTALL | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 356ad5b26b4196f085ce3afa1869154ca81faad8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-09 20:54:15 +0800

    CMake: Conditionally allow win95 threads and --enable-small.

 CMakeLists.txt | 28 ++++++++++++++++++++--------
 1 file changed, 20 insertions(+), 8 deletions(-)

commit de574404c4c2f87aca049f232c38526e3ce092aa
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-09 20:35:16 +0800

    Build: Conditionally allow win95 threads and --enable-small.
    
    When the compiler supports __attribute__((__constructor__))
    mythread_once() is never used, even with --enable-small. A configuration
    with win95 threads and --enable-small will compile and be thread safe so
    it can be allowed.
    
    This isn't a very common configuration since MSVC does not support
    __attribute__((__constructor__)), but MINGW32 and CLANG32 environments
    for MSYS2 can use win95 threads and have
    __attribute__((__constructor__)) support.

 configure.ac | 21 +++++++++++++--------
 1 file changed, 13 insertions(+), 8 deletions(-)

commit 6bf33b704cd31dccf25e68480464aa22d3fcad5a
Author: Jamaika1 <lukaszcz18@wp.pl>
Date:   2023-08-08 14:07:59 +0200

    mythread.h: Fix typo error in Vista threads mythread_once().
    
    The "once_" variable was accidentally referred to as just "once". This
    prevented building with Vista threads when
    HAVE_FUNC_ATTRIBUTE_CONSTRUCTOR was not defined.

 src/common/mythread.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 80cb961e5380a3878246d41341ff91378ca59e05
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-04 22:17:11 +0800

    codespell: Add .codespellrc to set default options.
    
    The .codespellrc allows setting default options to avoid false positive
    matches, set additional dictionaries, etc. For now, codespell can be
    used locally before committing doc and comment changes.
    
    It should help prevent silly errors and fix up commits in the future.

 .codespellrc | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

commit cd678a6077358935249b64a4a16fe8d17434f9c9
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-03 20:10:21 +0800

    Tests: Style fixes to test_lzip_decoder.c.

 tests/test_lzip_decoder.c | 36 ++++++++++++++++++++++++------------
 1 file changed, 24 insertions(+), 12 deletions(-)

commit 1cac5ed4fa45c9861d745b02d80575cb2ff01d81
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-03 15:56:20 +0800

    Translations: Update the Chinese (simplified) translation.

 po/zh_CN.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 16068f6c30b888cdb873f6285af941d00f95741d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-08-02 17:15:12 +0300

    xz: Omit an empty paragraph on the man page.

 src/xz/xz.1 | 1 -
 1 file changed, 1 deletion(-)

commit 9ae4371b5106189486e850ce777e40f7b6021c0b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-02 20:30:07 +0800

    Add NEWS for 5.4.4.

 NEWS | 43 +++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 43 insertions(+)

commit e8c2203b2c76466d8d3387c5212b46151de8e605
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-08-02 15:19:43 +0300

    build-aux/manconv.sh: Fix US-ASCII and UTF-8 output.
    
    groff defaults to SGR escapes. Using -P-c passes -c to grotty
    which restores the old behavior. Perhaps there is a better way to
    get pure plain text output but this works for now.

 build-aux/manconv.sh | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 9a706167b0d903d92fd134895acb4bc6a5e3e688
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-08-01 19:10:43 +0300

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 33e25a0f5650754c38bed640deedefe3b4fec5ef
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-08-01 18:22:24 +0300

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 81db3b889830132334d1f2129bdc93177ac2ca7d
Author: ChanTsune <41658782+ChanTsune@users.noreply.github.com>
Date:   2023-08-01 18:17:17 +0300

    mythread.h: Disable signal functions in builds targeting Wasm + WASI.
    
    signal.h in WASI SDK doesn't currently provide sigprocmask()
    or sigset_t. liblzma doesn't need them so this change makes
    liblzma and xzdec build against WASI SDK. xz doesn't build yet
    and the tests don't either as tuktest needs setjmp() which
    isn't (yet?) implemented in WASI SDK.
    
    Closes: https://github.com/tukaani-project/xz/pull/57
    See also: https://github.com/tukaani-project/xz/pull/56
    
    (The original commit was edited a little by Lasse Collin.)

 src/common/mythread.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 71c638c611324e606d324c8189fef8fe79db6991
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-08-01 21:58:51 +0800

    Add newline to end of .gitignore.
    
    Newline was accidentally removed in commit
    01cbb7f023ee7fda8ddde04bd17cf7d3c2418706.

 .gitignore | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 42df7c7aa1cca385e509eb33c65136e61890f0bf
Author: Dimitri Papadopoulos Orfanos <3234522+DimitriPapadopoulos@users.noreply.github.com>
Date:   2023-07-31 14:02:21 +0200

    Docs: Fix typos found by codespell

 CMakeLists.txt                            | 4 ++--
 NEWS                                      | 2 +-
 configure.ac                              | 2 +-
 src/liblzma/api/lzma/container.h          | 4 ++--
 src/liblzma/api/lzma/filter.h             | 2 +-
 src/liblzma/api/lzma/lzma12.h             | 4 ++--
 src/liblzma/common/block_buffer_encoder.c | 2 +-
 src/liblzma/common/common.h               | 2 +-
 src/liblzma/common/file_info.c            | 2 +-
 src/liblzma/common/lzip_decoder.c         | 2 +-
 src/liblzma/common/stream_decoder_mt.c    | 8 ++++----
 src/liblzma/common/string_conversion.c    | 6 +++---
 src/liblzma/lz/lz_encoder.h               | 2 +-
 src/liblzma/lzma/lzma_encoder.c           | 4 ++--
 src/xz/hardware.c                         | 4 ++--
 tests/test_filter_flags.c                 | 4 ++--
 tests/test_index.c                        | 2 +-
 tests/test_vli.c                          | 2 +-
 18 files changed, 29 insertions(+), 29 deletions(-)

commit 01cbb7f023ee7fda8ddde04bd17cf7d3c2418706
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-26 20:26:23 +0800

    Update .gitignore.

 .gitignore | 4 ++++
 1 file changed, 4 insertions(+)

commit f97a1afd564c48ad9cb94682e10972a72e11fa08
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-28 22:03:08 +0800

    CMake: Conditionally allow the creation of broken symlinks.
    
    The CMake build will try to create broken symlinks on Unix and Unix-like
    platforms. Cygwin and MSYS2 are Unix-like, but may not be able to create
    broken symlinks. The value of the CYGWIN or MSYS environment variables
    determine if broken symlinks are valid.
    
    The default for MSYS2 does not allow for broken symlinks, so the CMake
    build has been broken for MSYS2 since commit
    80a1a8bb838842a2be343bd88ad1462c21c5e2c9.

 CMakeLists.txt | 82 +++++++++++++++++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 75 insertions(+), 7 deletions(-)

commit 7190f4cc7c9ade5b9b3675d0cbfa3b6d6ec9cb4f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-28 21:56:48 +0800

    CI: Fix windows-ci dependency installation.
    
    All of the MSYS2 environments need make, and it does not come with the
    toolchain package. The toolchain package will install the needed
    compiler toolchains since without this package CMake cannot properly
    generate the Makefiles.

 .github/workflows/windows-ci.yml | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit a048f472cd9a2245265cb292853cbbcdd4f02001
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-28 21:54:22 +0800

    CI: Update ci_build.sh CMake to always make Unix Makefiles.
    
    The default for many of the MSYS2 environments is for CMake to create
    Ninja build files. This would complicate the build script since we would
    need a different command to run the tests. Its simpler to always use
    Unix Makefiles so that "make test" is always a usable target for
    testing.

 build-aux/ci_build.sh | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 7870396a0ca945473aa0d1d790f4cbef456610bd
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-25 20:17:23 +0800

    CI: Test CMake builds and test framework with MSYS2.

 .github/workflows/windows-ci.yml | 32 ++++++++++++++++++++------------
 1 file changed, 20 insertions(+), 12 deletions(-)

commit 6497d1f8875cb7e3007f714336cc09c06fed235b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-25 20:14:53 +0800

    CI: Windows CI rename system matrix variable -> msys2_env.
    
    Calling the MSYS2 environment "system" was a bit vague and should be
    more specific.

 .github/workflows/windows-ci.yml | 15 +++++----------
 1 file changed, 5 insertions(+), 10 deletions(-)

commit 785e4121d9b2921ad36bd3af1cf61fa20a9265bd
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-24 23:11:45 +0800

    CI: Add Clang64 MSYS2 environment to Windows CI.

 .github/workflows/windows-ci.yml | 1 +
 1 file changed, 1 insertion(+)

commit d9166b52cf3458a4da3eb92224837ca8fc208d79
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-24 21:43:44 +0800

    liblzma: Prevent an empty translation unit in Windows builds.
    
    To workaround Automake lacking Windows resource compiler support, an
    empty source file is compiled to overwrite the resource files for static
    library builds. Translation units without an external declaration are
    not allowed by the C standard and result in a warning when used with
    -Wempty-translation-unit (Clang) or -pedantic (GCC).

 src/liblzma/Makefile.am | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit db5019d691f980d622fb56fdcf383af2c3519c98
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-22 18:37:56 +0800

    Translations: Update the Vietnamese translation.

 po/vi.po | 45 ++++++++++++++++++++++++++++-----------------
 1 file changed, 28 insertions(+), 17 deletions(-)

commit f3a055f762ba5b71b746fc2d44a6ababde2c61b5
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-22 14:55:42 +0800

    CI: Add Windows runner for Autotools builds with MSYS2.
    
    Only a subset of the tests run by the Linux and MacOS Autotools builds
    are run. The most interesting tests are the ones that disable threads,
    encoders, and decoders.
    
    The Windows runner will only be run manually since these tests will
    likely take much longer than the Linux and MacOS runners. This runner
    should be used before merging any large features and before releases.
    
    Currently the clang64 environment fails to due to a warning and
    -Werror is enabled for the CI tests. This is still an early version
    since the CMake build can be done for MSVC and optionally each of the
    MSYS2 environments. GitHub does not allow manually running the CI tests
    unless the workflow is checked on the default branch so checking in a
    minimum version is a good idea.
    
    Thanks to Arthur S for the original proposing the original patch.
    
    Closes: https://github.com/tukaani-project/xz/pull/34

 .github/workflows/windows-ci.yml | 119 +++++++++++++++++++++++++++++++++++++++
 1 file changed, 119 insertions(+)

commit 556536a3525df9e5ed78b8c7057991cfa9edfac8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-21 22:11:01 +0800

    CI: Add argument to ci_build.sh to pass flags to autogen.sh.

 build-aux/ci_build.sh | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

commit 39a32d36fc465c4e70f13192eea380e518ba6e8a
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-21 18:05:44 +0800

    Tests: Skip .lz files in test_files.sh if not configured.
    
    Previously if the lzip decoder was not configured then test_files.sh
    would pass the lzip tests instead of skipping them.

 tests/test_files.sh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 194d12724b30fe42789d12a0184f9d412c449347
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 22:11:13 +0800

    Tests: Add ARM64 filter test to test_compress.sh.

 tests/test_compress.sh | 1 +
 1 file changed, 1 insertion(+)

commit d850365c444368102c69beaddf849ed463c33467
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:30:05 +0800

    Translations: Update the Croatian translation.

 po/hr.po | 49 ++++++++++++++++++++++++++++++-------------------
 1 file changed, 30 insertions(+), 19 deletions(-)

commit 24049eb7acf6d42a60f00efe4e7289fe8e1797fe
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:28:32 +0800

    Translations: Update the Korean man page translations.

 po4a/ko.po | 1255 ++++++++++++++++++++++++++++++------------------------------
 1 file changed, 629 insertions(+), 626 deletions(-)

commit 4d4a4fa07de6cb9d913fb2f97712fddda2527b49
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:25:24 +0800

    Translations: Update the Korean translation.

 po/ko.po | 45 ++++++++++++++++++++++++++++-----------------
 1 file changed, 28 insertions(+), 17 deletions(-)

commit 237f06d9c55cf438a7538a598354bcf103f23711
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:24:05 +0800

    Translations: Update the Polish translation.

 po/pl.po | 47 +++++++++++++++++++++++++++++------------------
 1 file changed, 29 insertions(+), 18 deletions(-)

commit 80c2c832136656d5ac7a1bca8bc42d95e13d281a
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:22:23 +0800

    Translations: Update the German man page translations.

 po4a/de.po | 1255 ++++++++++++++++++++++++++++++------------------------------
 1 file changed, 629 insertions(+), 626 deletions(-)

commit fdbde14503ca03069d3649aa51926f5f796b89d8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:18:44 +0800

    Translations: Update the German translation.

 po/de.po | 47 +++++++++++++++++++++++++++++------------------
 1 file changed, 29 insertions(+), 18 deletions(-)

commit 9f3bf5ff5b2b5cf0b252a2bf381238ca49dc4101
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:17:10 +0800

    Translations: Update the Chinese (simplified) translation.

 po/zh_CN.po | 47 +++++++++++++++++++++++++++++------------------
 1 file changed, 29 insertions(+), 18 deletions(-)

commit 376938c588011567c74f1d5a160c0ccce6336d46
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:15:47 +0800

    Translations: Update the Swedish translation.

 po/sv.po | 47 +++++++++++++++++++++++++++++------------------
 1 file changed, 29 insertions(+), 18 deletions(-)

commit 26b0bc6eb82c84559936a7c7080de5c71c8276f8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:14:00 +0800

    Translations: Update the Ukrainian man page translations.

 po4a/uk.po | 1253 ++++++++++++++++++++++++++++++------------------------------
 1 file changed, 628 insertions(+), 625 deletions(-)

commit 2d02c8b7640b54f3c5aa1c8b5990ba56f322393b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:09:15 +0800

    Translations: Update the Ukrainian translation.

 po/uk.po | 45 ++++++++++++++++++++++++++++-----------------
 1 file changed, 28 insertions(+), 17 deletions(-)

commit f881018b503fd334331c24a09075429558abbce1
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:06:57 +0800

    Translations: Update the Spanish translation.

 po/es.po | 47 +++++++++++++++++++++++++++++------------------
 1 file changed, 29 insertions(+), 18 deletions(-)

commit 791fe6d3ffd6877fa5f852be69d9251397dfaa31
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:05:19 +0800

    Translations: Update the Romanian translation.

 po/ro.po | 48 ++++++++++++++++++++++++++++++------------------
 1 file changed, 30 insertions(+), 18 deletions(-)

commit 8827e90704f699fe08bb5bed56b1717a2bc0eb77
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-20 20:02:56 +0800

    Translations: Update the Romanian man page translations.

 po4a/ro.po | 1254 ++++++++++++++++++++++++++++++------------------------------
 1 file changed, 629 insertions(+), 625 deletions(-)

commit 0184d344fa4f215cd345bb131db9068e077c69b8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-19 23:36:00 +0800

    liblzma: Suppress -Wunused-function warning.
    
    Clang 16.0.0 and earlier have a bug that the ifunc resolver function
    triggers the -Wunused-function warning. The resolver function is static
    and only "used" by the __attribute__((__ifunc()__)).
    
    At this time, the bug is still unresolved, but has been reported:
    https://github.com/llvm/llvm-project/issues/63957
    
    This is not a problem in GCC.

 src/liblzma/check/crc64_fast.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

commit 43845fa70fc751736c44c18f4cee42d49bfd1392
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-18 22:52:25 +0800

    liblzma: Reword lzma_str_list_filters() documentation.
    
    This further improves the documentation from commit
    f36ca7982f6bd5e9827219ed4f3c5a1fbf5d7bdf. The previous wording of
    "supported options" was slightly misleading since the options that are
    printed are the ones that are relevant for encoding/decoding. It is not
    about which options can or must be specified.

 src/liblzma/api/lzma/filter.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 818701ba1c9dff780b7fbf28f9ab8eb11a25dd67
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-18 22:49:57 +0800

    liblzma: Improve comment in string_conversion.c.
    
    The comment used "flag" when referring to decoder options. Just
    referring to them as options is more clear and consistent.

 src/liblzma/common/string_conversion.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit b6b7d065853cd4c3f5b8d9be8aea0b6dcb0fe090
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-07-18 17:37:33 +0300

    xz: Translate the second "%s: " in message.c since French needs "%s : ".
    
    This string is used to print a filename when using "xz -v" and
    stderr isn't a terminal.

 src/xz/message.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit be644042c3066d8e7a2834f989671ba74d27f749
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-07-18 14:35:33 +0300

    xz: Make "%s: %s" translatable because French needs "%s : %s".

 src/xz/args.c    |  5 ++++-
 src/xz/coder.c   |  8 ++++----
 src/xz/file_io.c |  8 ++++----
 src/xz/list.c    | 11 ++++++-----
 4 files changed, 18 insertions(+), 14 deletions(-)

commit 97fd5cb669ee0afc48d2087675ab166aff89eaa2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-07-18 13:57:54 +0300

    liblzma: Tweak #if condition in memcmplen.h.
    
    Maybe ICC always #defines _MSC_VER on Windows but now
    it's very clear which code will get used.

 src/liblzma/common/memcmplen.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 40392c19f71985852d75997f109dea97177d6f3f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-07-18 13:49:43 +0300

    liblzma: Omit unnecessary parenthesis in a preprocessor directive.

 src/liblzma/common/memcmplen.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit abc1d5601b7e419ebc28a1ab4b268613b52e6f98
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-18 00:51:48 +0800

    xz: Update Authors list in a few files.

 src/xz/args.c    | 3 ++-
 src/xz/args.h    | 3 ++-
 src/xz/coder.c   | 3 ++-
 src/xz/coder.h   | 3 ++-
 src/xz/message.c | 3 ++-
 5 files changed, 10 insertions(+), 5 deletions(-)

commit 289034a168878baa9df6ff6e159110aade69cba5
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-14 23:20:33 +0800

    Docs: Add a new section to INSTALL for Tests.
    
    The new Tests section describes basic information about the tests, how
    to run them, and important details when cross compiling. We have had a
    few questions about how to compile the tests without running them, so
    hopefully this information will help others with the same question in the
    future.
    
    Fixes: https://github.com/tukaani-project/xz/issues/54

 INSTALL | 81 +++++++++++++++++++++++++++++++++++++++++++++++++++--------------
 1 file changed, 64 insertions(+), 17 deletions(-)

commit 1119e5f5a519b0ab71c81fc4dc84c0cc72abe513
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-14 21:10:27 +0800

    Docs: Update README.
    
    This adds an entry to "Other implementations of the .xz format" for
    XZ for Java.

 README | 4 ++++
 1 file changed, 4 insertions(+)

commit f99e2e4e53b7ea89e4eef32ddd4882e0416357c9
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-13 23:32:10 +0800

    xz: Fix typo in man page.
    
    The Memory limit information section described three output
    columns when it actually has six. This was reworded to
    "multiple" to make it more future proof.

 src/xz/xz.1 | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f907705eb1f6c5edaafc9668a34c51a989932f1d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-13 21:46:12 +0800

    xz: Minor clean up for coder.c
    
    * Moved max_block_list_size from a global to local variable.
    * Reworded error message in validate_block_list_filter().
    * Removed helper function filter_chain_error().
    * Changed 1 << X to 1U << X in many places

 src/xz/coder.c | 53 +++++++++++++++++++++--------------------------------
 1 file changed, 21 insertions(+), 32 deletions(-)

commit 9adc9e56157ecbf2948e5036df8567809b9ae177
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-13 21:26:47 +0800

    xz: Update man page Authors and date.

 src/xz/xz.1 | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit c12e429f2635da8d8f5749e5f733f451baca6945
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-20 20:32:59 +0800

    xz: Add a section to man page for robot mode --filters-help.

 src/xz/xz.1 | 32 ++++++++++++++++++++++++++++++--
 1 file changed, 30 insertions(+), 2 deletions(-)

commit e10f2db5d10300c16fa482a136ed31c1aa6e8e8d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-19 23:11:41 +0800

    xz: Slight reword in xz man page for consistency.
    
    Changed will print => prints in xz --robot --version description to
    match --robot --info-memory description.

 src/xz/xz.1 | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f5dc172a402fa946f3c45a16929d7fe14c9f5e81
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-19 23:07:10 +0800

    xz: Reorder robot mode subsections in the man page.
    
    The order is now consistent with the order the command line arguments
    are documented earlier in the man page. The new order is:
    1. --list
    2. --info-memory
    3. --version
    
    Instead of the previous order:
    1. --version
    2. --info-memory
    3. --list

 src/xz/xz.1 | 192 ++++++++++++++++++++++++++++++------------------------------
 1 file changed, 96 insertions(+), 96 deletions(-)

commit 9628be23aef2784249fd9f3199799d785d2ec5cc
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-13 00:46:50 +0800

    xz: Update man page for new --filters-help option.

 src/xz/xz.1 | 10 ++++++++++
 1 file changed, 10 insertions(+)

commit a165d7df1964121eb9df715e6f836a31c865beef
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-13 00:44:41 +0800

    xz: Add a new --filters-help option.
    
    The --filters-help can be used to help create filter chains with the
    --filters and --filtersX options. The message in --long-help is too
    short to fully explain the syntax to construct complex filter chains.
    
    In --robot mode, xz will only print the output from liblzma function
    lzma_str_list_filters.

 src/xz/args.c    |  8 ++++++++
 src/xz/message.c | 30 ++++++++++++++++++++++++++++++
 src/xz/message.h |  5 +++++
 3 files changed, 43 insertions(+)

commit 95f1a414b156ee35d3e71862a14915fdd138f913
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-21 20:28:11 +0800

    xz: Update the man page for --block-list and --filtersX
    
    The --block-list option description needed updating since the new
    --filtersX option changes how it can be used. The new entry for
    --filters1=FILTERS ... --filter9=FILTERS was created right after
    the --filters option.

 src/xz/xz.1 | 106 +++++++++++++++++++++++++++++++++++++++++++++---------------
 1 file changed, 80 insertions(+), 26 deletions(-)

commit 47a63cad2aa778280e0c1926b7159427ea028cb1
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-21 19:50:14 +0800

    xz: Update --long-help for the new --filtersX option.

 src/xz/message.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

commit 8b9913a13daca2550d02dfdcdc9be15f55ca4d13
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-17 20:46:21 +0800

    xz: Ignore filter chains that are set but never used in --block-list.
    
    If a filter chain is set but not used in --block-list, it introduced
    unexpected behavior such as requiring an unneeded amount of memory to
    compress, reducing the number of threads in multi-threaded encoding, and
    printing an incorrect amount of memory needed to decompress.
    
    This also renames filters_init_mask => filters_used_mask. A filter is
    assumed to be used if it is specified in --filtersX until
    coder_set_compression_settings() determines which filters are referenced
    in --block-list.

 src/xz/coder.c | 66 ++++++++++++++++++++++++++++++++++++++++++----------------
 1 file changed, 48 insertions(+), 18 deletions(-)

commit 183819bfd9efac8c184d9bf123325719b7eee30f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-13 20:11:13 +0800

    xz: Set the Block size for mt encoding correctly.
    
    When opt_block_size is not used, the Block size for mt encoder is
    derived from the minimum of the largest Block specified by
    --block-list and the recommended Block size on all filter chains
    calculated by lzma_mt_block_size(). This avoids using unnecessary
    memory and ensures that all Blocks are large enough for the most memory
    needy filter chain.

 src/xz/coder.c | 68 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 67 insertions(+), 1 deletion(-)

commit afb2dbec3d857b026486b75e42a4728e12d234cb
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-11 00:09:41 +0800

    xz: Validate --flush-timeout for all specified filter chains.

 src/xz/coder.c | 24 ++++++++++++++++--------
 1 file changed, 16 insertions(+), 8 deletions(-)

commit 5f0c5a04388f8334962c70bc37a8c2ff8f605e0a
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-13 19:54:33 +0800

    xz: Allows --block-list filters to scale down memory usage.
    
    Previously, only the default filter chain could have its memory usage
    adjusted. The filter chains specified with --filtersX were not checked
    for memory usage. Now, all used filter chains will be adjusted if
    necessary.

 src/xz/coder.c | 269 +++++++++++++++++++++++++++++++++++++++++++++------------
 1 file changed, 214 insertions(+), 55 deletions(-)

commit 479fd58d60622331fcbe48fddf756927b9f80d9a
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-10 21:50:33 +0800

    xz: Do not include block splitting if encoders are disabled.
    
    The block splitting logic and split_block() function are not needed if
    encoders are disabled. This will help slightly reduce the binary size
    when built without encoders and allow split_block() to use functions
    that require encoders being enabled.

 src/xz/coder.c | 29 ++++++++++++++++++++---------
 1 file changed, 20 insertions(+), 9 deletions(-)

commit f86ede22500f7ae024ec3ec3f3489ab5a857a3b3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-10 22:38:59 +0800

    xz: Free filters[] in debug mode.
    
    This will only free filter chains created with --filters1-9 since the
    default filter chain may be set from a static function variable. The
    complexity to free the default filter chain is not worth the burden on
    code maintenance.

 src/xz/coder.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

commit f281cd0d692ac0c70fc7669b80dddb863ea947e1
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-13 19:28:23 +0800

    xz: Add a message if --block-list is used outside of xz compresssion.
    
    --block-list is only supported with compression in xz format. This avoids
    silently ignoring when --block-list is unused.

 src/xz/args.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

commit d6af7f347077b22403133239592e478931307759
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-18 20:29:09 +0800

    xz: Create command line options for filters[1-9].
    
    The new command line options are meant to be combined with --block-list.
    They work as an optional extension to --block-list to specify a custom
    filter chain for each block listed. The new options allow the creation
    of up to 9 reusable filter chains. For instance:
    
    xz --block-list=1:10MiB,3:5MiB,,2:5MiB,1:0 --filters1=delta--lzma2 \
    --filters2=x86--lzma2 --filters3=arm64--lzma2
    
    Will create the following blocks:
    1. A block of size 10 MiB with filter chain delta, lzma2.
    2. A block of size 5 MiB with filter chain arm64, lzma2.
    3. A block of size 5 MiB with filter chain arm64, lzma2.
    4. A block of size 5 MiB with filter chain x86, lzma2.
    5. A block containing the rest of the file contents with filter chain
       delta, lzma2.

 src/xz/args.c  |  82 ++++++++++++++++++++++---
 src/xz/coder.c | 188 ++++++++++++++++++++++++++++++++++++++++++---------------
 src/xz/coder.h |  20 +++++-
 3 files changed, 230 insertions(+), 60 deletions(-)

commit 072d29250113268536719ad0e040ab8a66fb6435
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-13 19:36:09 +0800

    xz: Use lzma_filters_free() in forget_filter_chain().
    
    This is a little cleaner than the previous implementation of
    forget_filter_chain(). It is also more consistent since
    lzma_str_to_filters() will always terminate the filter chain so there
    is no need to terminate it later in coder_set_compression_settings().

 src/xz/coder.c | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

commit 3d21da5cff4b511633cb6e0d8a1090485c0c1059
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-17 22:22:45 +0800

    xz: Separate string to filter conversion into a helper function.
    
    Converting from string to filter will also need to be done for block
    specific filter chains.

 src/xz/coder.c | 33 ++++++++++++++++++++-------------
 1 file changed, 20 insertions(+), 13 deletions(-)

commit a6583726e5f950278f96abcf79c04f1056810be6
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-06 00:03:35 +0800

    Tests: Use new --filters option in test_compress.sh

 tests/test_compress.sh | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

commit 5f3b898d07cc9b7160c7c88b3120b7edabb8a5b0
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-06 00:03:06 +0800

    xz: Update --long-help and man page for new --filters option.

 src/xz/message.c |  6 ++++++
 src/xz/xz.1      | 41 ++++++++++++++++++++++++++++++++++++-----
 2 files changed, 42 insertions(+), 5 deletions(-)

commit 9ded880a0221f4d1256845fc4ab957ffd377c760
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-06 00:02:29 +0800

    xz: Add --filters option to CLI.
    
    The --filters option uses the new lzma_str_to_filters() function
    to convert a string into a full filter chain. Using this option
    will reset all previous filters set by --preset, --[filter], or
    --filters.

 src/xz/args.c  |  9 +++++++--
 src/xz/coder.c | 50 ++++++++++++++++++++++++++++++++++++++++++++++++--
 src/xz/coder.h |  3 +++
 3 files changed, 58 insertions(+), 4 deletions(-)

commit 2c189bb00af73dc7ba1a67a9d274d5be03ee3a88
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-14 21:30:25 +0800

    Tests: Improve feature testing for skipping.
    
    Fixed a bug where test_compress_* would all fail if arm64 or armthumb
    filters were enabled for compression but arm was disabled. Since the
    grep tests only checked for "define HAVE_ENCODER_ARM", this would match
    on HAVE_ENCODER_ARM64 or HAVE_ENCODER_ARMTHUMB.
    
    Now the config.h feature test requires " 1" at the end to prevent the
    prefix problem. have_feature() was also updated for this even though
    there were known current bugs affecting it. This is just in case future
    features have a similar prefix problem.

 tests/test_compress.sh | 4 ++--
 tests/test_files.sh    | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 80a6b9bcad016c99c9ba3f3eeb4a619fcadfd357
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-10 20:56:28 +0800

    Translations: Update the Chinese (traditional) translation.

 po/zh_TW.po | 659 ++++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 377 insertions(+), 282 deletions(-)

commit 17f8844e6fc355abf997d77637a7447c4f7bbcbd
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-08 21:24:19 +0800

    liblzma: Remove non-portable empty initializer.
    
    Commit 78704f36e74205857c898a351c757719a6c8b666 added an empty
    initializer {} to prevent a warning. The empty initializer is a GNU
    extension and results in a build failure on MSVC. The -wpedantic flag
    warns about empty initializers.

 src/liblzma/common/stream_encoder_mt.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 3aca4f629cd577f0c54f594d5d88722edf0b0413
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-07-08 20:03:59 +0800

    Translations: Update the Vietnamese translation.

 po/vi.po | 620 +++++++++++++++++++++++++++++++++++----------------------------
 1 file changed, 349 insertions(+), 271 deletions(-)

commit 66bdcfa85fef2911cc80f5f30fed3f9610faccb4
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-28 20:46:31 +0800

    Tests: Fix memory leaks in test_index.
    
    Several tests were missing calls to lzma_index_end() to clean up the
    lzma_index structs. The memory leaks were discovered by using
    -fsanitize=address with GCC.

 tests/test_index.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

commit fe3bd438fb119f9bad3f08dc29d331e4956196e1
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-28 20:43:29 +0800

    Tests: Fix memory leaks in test_block_header.
    
    test_block_header was not properly freeing the filter options between
    calls to lzma_block_header_decode(). The memory leaks were discovered by
    using -fsanitize=address with GCC.

 tests/test_block_header.c | 38 ++++++++++++++++++++++----------------
 1 file changed, 22 insertions(+), 16 deletions(-)

commit 78704f36e74205857c898a351c757719a6c8b666
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-28 20:31:11 +0800

    liblzma: Prevent uninitialzed warning in mt stream encoder.
    
    This change only impacts the compiler warning since it was impossible
    for the wait_abs struct in stream_encode_mt() to be used before it was
    initialized since mythread_condtime_set() will always be called before
    mythread_cond_timedwait().
    
    Since the mythread.h code is different between the POSIX and
    Windows versions, this warning was only present on Windows builds.
    
    Thanks to Arthur S for reporting the warning and providing an initial
    patch.

 src/liblzma/common/stream_encoder_mt.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e3356a204c5ae02db3ec4552b6c1be354e9b6142
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-28 20:22:38 +0800

    liblzma: Prevent warning for MSYS2 Windows build.
    
    In lzma_memcmplen(), the <intrin.h> header file is only included if
    _MSC_VER and _M_X64 are both defined but _BitScanForward64() was
    previously used if _M_X64 was defined. GCC for MSYS2 defines _M_X64 but
    not _MSC_VER so _BitScanForward64() was used without including
    <intrin.h>.
    
    Now, lzma_memcmplen() will use __builtin_ctzll() for MSYS2 GCC builds as
    expected.

 src/liblzma/common/memcmplen.h | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 45e250a9e9f3c3e8e8af2983366b170bf54f890e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-28 21:01:22 +0800

    CI: Add test with -fsanitize=address,undefined.
    
    ci_build.sh was updated to accept disabling of __attribute__ ifunc
    and CLMUL. This will allow -fsanitize=address to pass because ifunc
    is incompatible with -fsanitize=address. The CLMUL implementation has
    optimizations that potentially read past the buffer and mask out the
    unwanted bytes.
    
    This test will only run on Autotools Linux.

 .github/workflows/ci.yml | 23 +++++++++++++++++++----
 build-aux/ci_build.sh    |  8 +++++++-
 2 files changed, 26 insertions(+), 5 deletions(-)

commit 596ee722cd7ddf0afae584fc06365adc0e735977
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-28 20:16:04 +0800

    CI: Upgrade checkout action from v2 to v3.

 .github/workflows/ci.yml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 86118ea320f867e09e98a8682cc08cbbdfd640e2
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-27 23:38:32 +0800

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 3d1fdddf92321b516d55651888b9c669e254634e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-27 17:27:09 +0300

    Docs: Document the configure option --disable-ifunc in INSTALL.

 INSTALL | 8 ++++++++
 1 file changed, 8 insertions(+)

commit b4cf7a2822e8d30eb2b12a1a07fd04383b10ade3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-06-27 17:24:49 +0300

    Minor tweaks to style and comments.

 CMakeLists.txt | 8 ++++----
 configure.ac   | 9 +++++----
 2 files changed, 9 insertions(+), 8 deletions(-)

commit 23fb9e3a329117c2968c1e7388b6ef07c782dba1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-06-27 17:19:49 +0300

    CMake: Rename CHECK_ATTR_IFUNC to ALLOW_ATTR_IFUNC.
    
    It's so that there's a clear difference in wording compared
    to liblzma's integrity check types.

 CMakeLists.txt | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit ee44863ae88e377a5df10db007ba9bfadde3d314
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-06-27 17:05:23 +0300

    liblzma: Add ifunc implementation to crc64_fast.c.
    
    The ifunc method avoids indirection via the function pointer
    crc64_func. This works on GNU/Linux and probably on FreeBSD too.
    The previous __attribute((__constructor__)) method is kept for
    compatibility with ELF platforms which do support ifunc.
    
    The ifunc method has some limitations, for example, building
    liblzma with -fsanitize=address will result in segfaults.
    The configure option --disable-ifunc must be used for such builds.
    
    Thanks to Hans Jansen for the original patch.
    Closes: https://github.com/tukaani-project/xz/pull/53

 src/liblzma/check/crc64_fast.c | 35 ++++++++++++++++++++++++++---------
 1 file changed, 26 insertions(+), 9 deletions(-)

commit b72d21202402a603db6d512fb9271cfa83249639
Author: Hans Jansen <hansjansen162@outlook.com>
Date:   2023-06-22 19:49:30 +0200

    Add ifunc check to CMakeLists.txt
    
    CMake build system will now verify if __attribute__((__ifunc__())) can be
    used in the build system. If so, HAVE_FUNC_ATTRIBUTE_IFUNC will be
    defined to 1.

 CMakeLists.txt | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

commit 23b5c36fb71904bfbe16bb20f976da38dadf6c3b
Author: Hans Jansen <hansjansen162@outlook.com>
Date:   2023-06-22 19:46:55 +0200

    Add ifunc check to configure.ac
    
    configure.ac will now verify if __attribute__((__ifunc__())) can be used in
    the build system. If so, HAVE_FUNC_ATTRIBUTE_IFUNC will be defined to 1.

 configure.ac | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

commit dbb3a536ed9873ffa0870321f6873e564c6a9da8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-07 00:18:30 +0800

    CI: Add apt update command before installing dependencies.
    
    Without the extra command, all of the CI tests were automatically
    failing because the Ubuntu servers could not be reached properly.

 .github/workflows/ci.yml | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit 6bcd516812331de42b347922913230895bebad34
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-06-07 00:10:38 +0800

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 0d94ba69220d894d2a86081821d2d7a89df5a10b
Author: Benjamin Buch <bebuch@users.noreply.github.com>
Date:   2023-06-06 15:32:45 +0200

    CMake: Protects against double find_package
    
    Boost iostream uses `find_package` in quiet mode and then again uses
    `find_package` with required. This second call triggers a
    `add_library cannot create imported target "ZLIB::ZLIB" because another
    target with the same name already exists.`
    
    This can simply be fixed by skipping the alias part on secondary
    `find_package` runs.

 CMakeLists.txt | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

commit 045d7aae286ecd2ce163be9e0d9041343a03f89a
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-31 20:26:42 +0800

    Translations: Update the Esperanto translation.

 po/eo.po | 185 +++++++++++++++++++++++++++++++--------------------------------
 1 file changed, 92 insertions(+), 93 deletions(-)

commit b0cc7c2dcefe4cbc4e1e697598c14fb687ed0b78
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-31 20:25:00 +0800

    Translations: Update the Croatian translation.

 po/hr.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit af045ef6f848f02cd14c9ad195a5f87bb0c02dce
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-31 20:15:53 +0800

    Translations: Update the Chinese (simplified) translation.

 po/zh_CN.po | 317 ++++++++++++++++++++++++++++++------------------------------
 1 file changed, 157 insertions(+), 160 deletions(-)

commit e6b92d5817fe91ad27a0f7f57bd0f2144311e383
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-17 23:12:13 +0800

    Translations: Update German translation of man pages.

 po4a/de.po | 52 ++++++++++++----------------------------------------
 1 file changed, 12 insertions(+), 40 deletions(-)

commit 592961ccdbba39c7d60fe37e36764232feb57c60
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-17 23:09:18 +0800

    Translations: Update the German translation.

 po/de.po | 189 +++++++++++++++++++++++++++++++--------------------------------
 1 file changed, 94 insertions(+), 95 deletions(-)

commit 13572cb2c391f5b7503e333c6e05b20bd5bbb524
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-17 20:30:01 +0800

    Translations: Update the Croatian translation.

 po/hr.po | 187 +++++++++++++++++++++++++++++++--------------------------------
 1 file changed, 93 insertions(+), 94 deletions(-)

commit 4e6e425ea8f097c6fb43e69cc9540294dca3680d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-17 20:26:54 +0800

    Translations: Update Korean translation of man pages.

 po4a/ko.po | 3015 ++++++++++++------------------------------------------------
 1 file changed, 568 insertions(+), 2447 deletions(-)

commit d5ef1f6faf7c270f60093629257150085ecf19ca
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-17 20:13:01 +0800

    Translations: Update the Korean translation.

 po/ko.po | 319 +++++++++++++++++++++++++++++++--------------------------------
 1 file changed, 158 insertions(+), 161 deletions(-)

commit e22d0b0f2e301e7906d0106689d967ed84362028
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-16 23:49:09 +0800

    Translations: Update the Spanish translation.

 po/es.po | 319 +++++++++++++++++++++++++++++++--------------------------------
 1 file changed, 158 insertions(+), 161 deletions(-)

commit f50da74d52d01f6cfd826a921249e289cf671678
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-16 23:47:23 +0800

    Translations: Update the Romanian translation.

 po/ro.po | 195 ++++++++++++++++++++++++++++++++-------------------------------
 1 file changed, 98 insertions(+), 97 deletions(-)

commit 4b9ad60a7305e9841b7cb4ea611bdf5fa7271696
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-16 23:45:43 +0800

    Translations: Update Romanian translation of man pages.

 po4a/ro.po | 19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

commit cb6fd57f889c5d9fab36ae8c9e10083a5fe32dea
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-16 23:43:51 +0800

    Translations: Update Ukrainian translation of man pages.

 po4a/uk.po | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

commit c3e8fcbc2db4861f92ad15606c995bd255803c52
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-16 23:37:54 +0800

    Translations: Update the Ukrainian translation.

 po/uk.po | 321 +++++++++++++++++++++++++++++++--------------------------------
 1 file changed, 159 insertions(+), 162 deletions(-)

commit 27b81b84fcedbc55aa6e6b21004c44070b15b038
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-16 23:07:35 +0800

    Translations: Update the Polish translation.

 po/pl.po | 316 +++++++++++++++++++++++++++++++--------------------------------
 1 file changed, 155 insertions(+), 161 deletions(-)

commit 8024ad636a65ed6ea95c94d57255be4c6724d6ed
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-16 22:52:14 +0800

    Translations: Update the Swedish translation.

 po/sv.po | 319 +++++++++++++++++++++++++++++++--------------------------------
 1 file changed, 158 insertions(+), 161 deletions(-)

commit 6699a29673f227c4664826db485ed9f7596320d2
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-16 21:21:38 +0800

    Translations: Update the Esperanto translation.

 po/eo.po | 34 +++++++++++++++++-----------------
 1 file changed, 17 insertions(+), 17 deletions(-)

commit f36ca7982f6bd5e9827219ed4f3c5a1fbf5d7bdf
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-13 21:21:54 +0800

    liblzma: Slightly rewords lzma_str_list_filters() documentation.
    
    Reword "options required" to "supported options". The previous may have
    suggested that the options listed were all required anytime a filter is
    used for encoding or decoding. The reword makes this more clear that
    adjusting the options is optional.

 src/liblzma/api/lzma/filter.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 3374a5359e52f1671d8f831d65827d5020fe2595
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-11 23:49:23 +0800

    liblzma: Adds lzma_nothrow to MicroLZMA API functions.
    
    None of the liblzma functions may throw an exception, so this
    attribute should be applied to all liblzma API functions.

 src/liblzma/api/lzma/container.h | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 8f236574986e7c414c0ea059f441982d1387e6a4
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-09 20:20:06 +0800

    liblzma: Exports lzma_mt_block_size() as an API function.
    
    The lzma_mt_block_size() was previously just an internal function for
    the multithreaded .xz encoder. It is used to provide a recommended Block
    size for a given filter chain.
    
    This function is helpful to determine the maximum Block size for the
    multithreaded .xz encoder when one wants to change the filters between
    blocks. Then, this determined Block size can be provided to
    lzma_stream_encoder_mt() in the lzma_mt options parameter when
    intializing the coder. This requires one to know all the filter chains
    they are using before starting to encode (or at least the filter chain
    that will need the largest Block size), but that isn't a bad limitation.

 src/liblzma/api/lzma/container.h       | 28 ++++++++++++++++++++++++++++
 src/liblzma/common/filter_encoder.c    | 16 ++++++++++------
 src/liblzma/common/filter_encoder.h    |  6 +-----
 src/liblzma/common/stream_encoder_mt.c | 20 +++++++++-----------
 src/liblzma/liblzma_generic.map        |  5 +++++
 src/liblzma/liblzma_linux.map          |  5 +++++
 src/liblzma/lzma/lzma2_encoder.c       |  3 +++
 7 files changed, 61 insertions(+), 22 deletions(-)

commit d0f33d672a4da7985ebb5ba8d829f885de49c171
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-08 22:58:09 +0800

    liblzma: Creates IS_ENC_DICT_SIZE_VALID() macro.
    
    This creates an internal liblzma macro to test if the dictionary size
    is valid for encoding.

 src/liblzma/lz/lz_encoder.c | 4 +---
 src/liblzma/lz/lz_encoder.h | 8 ++++++++
 2 files changed, 9 insertions(+), 3 deletions(-)

commit c247d06e1f6cada9a76f4f6225cbd97ea760f52f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-02 20:39:56 +0800

    Add NEWS for 5.4.3.

 NEWS | 10 ++++++++++
 1 file changed, 10 insertions(+)

commit 77050b78364ffb6b0f129e742b7c31602d725c08
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-02 20:39:37 +0800

    Add NEWS for 5.2.12.

 NEWS | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

commit 713e15e43eb6279a7ab4bbad3d1325ebfdcf09a0
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-04 20:38:52 +0800

    Translations: Update the Croatian translation.

 po/hr.po | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 9ad64bdf309844b6ca6c3e8a4dfb6dbaedda0ca9
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-04 20:30:25 +0800

    tuklib_integer.h: Reverts previous commit.
    
    Previous commit 6be460dde07113fe3f08f814b61ddc3264125a96 would cause an
    error if the integer size was 32 bit.

 src/common/tuklib_integer.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 6be460dde07113fe3f08f814b61ddc3264125a96
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-05-04 19:25:20 +0800

    tuklib_integer.h: Changes two other UINT_MAX == UINT32_MAX to >=.

 src/common/tuklib_integer.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 44c0c5eae990a22ef04e9b88c1a15838a0d00878
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-05-03 22:46:42 +0300

    tuklib_integer.h: Fix a recent copypaste error in Clang detection.
    
    Wrong line was changed in 7062348bf35c1e4cbfee00ad9fffb4a21aa6eff7.
    Also, this has >= instead of == since ints larger than 32 bits would
    work too even if not relevant in practice.

 src/common/tuklib_integer.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 2cf5ae5b5b279b0b2e69ca4724e7bd705865fe68
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-25 20:06:15 +0800

    CI: Adds a build and test for small configuration.

 .github/workflows/ci.yml | 5 +++++
 1 file changed, 5 insertions(+)

commit 16b81a057a87c2f18e6ed6447f003af0cbdcfe43
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-25 20:05:26 +0800

    CI: ci_build.sh allows configuring small build.

 build-aux/ci_build.sh | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit 78ccd93951f9e988d447bcdd70b24f6df5448d1d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-20 20:15:00 +0800

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit f41df2ac2fed347d3f107f3533e76e000d29c6cb
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-19 22:22:16 +0800

    Windows: Include <intrin.h> when needed.
    
    Legacy Windows did not need to #include <intrin.h> to use the MSVC
    intrinsics. Newer versions likely just issue a warning, but the MSVC
    documentation says to include the header file for the intrinsics we use.
    
    GCC and Clang can "pretend" to be MSVC on Windows, so extra checks are
    needed in tuklib_integer.h to only include <intrin.h> when it will is
    actually needed.

 src/common/tuklib_integer.h    |  6 ++++++
 src/liblzma/common/memcmplen.h | 10 ++++++++++
 2 files changed, 16 insertions(+)

commit 7062348bf35c1e4cbfee00ad9fffb4a21aa6eff7
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-19 21:59:03 +0800

    tuklib_integer: Use __builtin_clz() with Clang.
    
    Clang has support for __builtin_clz(), but previously Clang would
    fallback to either the MSVC intrinsic or the regular C code. This was
    discovered due to a bug where a new version of Clang required the
    <intrin.h> header file in order to use the MSVC intrinsics.
    
    Thanks to Anton Kochkov for notifying us about the bug.

 src/common/tuklib_integer.h | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 3938718ce3773c90755785c0df8777f133b7ae29
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-04-14 18:42:33 +0300

    liblzma: Update project maintainers in lzma.h.
    
    AUTHORS was updated earlier, lzma.h was simply forgotten.

 src/liblzma/api/lzma.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 2a89670ab295e377f8b44f5bda6d198deb8ea285
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-13 20:45:19 +0800

    liblzma: Cleans up old commented out code.

 src/liblzma/common/alone_encoder.c | 11 -----------
 1 file changed, 11 deletions(-)

commit 0fbb2b87a7b5a1dd9d0f4a5e84ac7919557dbe81
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-07 20:46:41 +0800

    Docs: Add missing word to SECURITY.md.

 .github/SECURITY.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit fb9c50f38a17bf37581de4034b36c8df8ec90a87
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-07 20:43:22 +0800

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 537c6cd8a9db0dd6b13683e64ddac2943190d715
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-04-07 20:42:12 +0800

    Docs: Minor edits to SECURITY.md.

 .github/SECURITY.md | 25 ++++++++++++++++++++-----
 1 file changed, 20 insertions(+), 5 deletions(-)

commit 6549df8dd53f358345957e232648fdb699930074
Author: Gabriela Gutierrez <gabigutierrez@google.com>
Date:   2023-04-07 12:08:30 +0000

    Docs: Create SECURITY.md
    
    Signed-off-by: Gabriela Gutierrez <gabigutierrez@google.com>

 .github/SECURITY.md | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

commit d0faa85df5a5d253a4625d45313cf5e9277e6cd2
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-28 22:48:24 +0800

    CI: Tests for disabling threading on CMake builds.

 .github/workflows/ci.yml | 3 ---
 build-aux/ci_build.sh    | 4 ++--
 2 files changed, 2 insertions(+), 5 deletions(-)

commit 8be5cc3b1359d88b4b30a39067466c0ae0bfbc4d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-28 22:45:42 +0800

    CI: Removes CMakeCache.txt between builds.
    
    If the cache file is not removed, CMake will not reset configurations
    back to their default values. In order to make the tests independent, it
    is simplest to purge the cache. Unfortunatly, this will slow down the
    tests a little and repeat some checks.

 build-aux/ci_build.sh | 2 ++
 1 file changed, 2 insertions(+)

commit 2cb6028fc31de082b7f927632363bb1426b61aaa
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-28 22:32:40 +0800

    CMake: Update liblzma-config.cmake generation.
    
    Now that the threading is configurable, the liblzma CMake package only
    needs the threading library when using POSIX threads.

 CMakeLists.txt | 33 ++++++++++++++++++++++-----------
 1 file changed, 22 insertions(+), 11 deletions(-)

commit 4d7fac0b07cc722825ba8d7838c558827e635611
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-28 22:25:33 +0800

    CMake: Allows setting thread method.
    
    The thread method is now configurable for the CMake build. It matches
    the Autotools build by allowing ON (pick the best threading method),
    OFF (no threading), posix, win95, and vista. If both Windows and
    posix threading are both available, then ON will choose Windows
    threading. Windows threading will also not use:
    
    target_link_libraries(liblzma Threads::Threads)
    
    since on systems like MinGW-w64 it would link the posix threads
    without purpose.

 CMakeLists.txt | 144 +++++++++++++++++++++++++++++++++++++++++----------------
 1 file changed, 104 insertions(+), 40 deletions(-)

commit 20cd905d898c1494dee42b78530769bb9c9f8076
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-24 23:05:48 +0800

    CI: Runs CMake feature tests.
    
    Now, CMake will run similar feature disable tests that the Autotools
    version did before. In order to do this without repeating lines in
    ci.yml, it now makes sense to use the GitHub Workflow matrix to create
    a loop.

 .github/workflows/ci.yml | 169 +++++++++++++++--------------------------------
 1 file changed, 55 insertions(+), 114 deletions(-)

commit 4fabdb269f1fc5624b3b94a170c4efb329d1d229
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-24 20:35:11 +0800

    CI: ci_build.sh allows CMake features to be configured.
    
    Also included various clean ups for style and helper functions for
    repeated work.

 build-aux/ci_build.sh | 233 +++++++++++++++++++++++++++++++-------------------
 1 file changed, 143 insertions(+), 90 deletions(-)

commit cf3d1f130e50cf63da4bb1031771605f6f443b6a
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-24 20:06:33 +0800

    CI: Change ci_build.sh to use bash instead of sh.
    
    This script is only meant to be run as part of the CI build/test process
    on machines that are known to have bash (Ubuntu and MacOS). If this
    assumption changes in the future, then the bash specific commands will
    need to be replaced with a more portable option. For now, it is
    convenient to use bash commands.

 build-aux/ci_build.sh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ddfe164368e779c40d061aa4ccc376129e92f8e1
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-24 20:05:59 +0800

    CMake: Only build xzdec if decoders are enabled.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 116e81f002c503d3c3cd12726db8f9116e58ef25
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-22 15:42:04 +0800

    Build: Removes redundant check for LZMA1 filter support.

 src/liblzma/lzma/Makefile.inc | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

commit 0ba234f692772595329d225462d391fe2c199d0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-23 15:14:29 +0200

    CMake: Bump maximum policy version to 3.26.
    
    It adds only one new policy related to FOLDERS which we don't use.
    This makes it clear that the code is compatible with the policies
    up to 3.26.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b0891684b4436aed31510fddcbb218d513bd5489
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-21 23:36:00 +0800

    CMake: Conditionally build xz list.* files if decoders are enabled.

 CMakeLists.txt | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

commit 2c1a830efb61d9d65906a09c9ee3ce27c2c49227
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-25 11:46:50 +0800

    CMake: Allow configuring features as cache variables.
    
    This allows users to change the features they build either in
    CMakeCache.txt or by using a CMake GUI. The sources built for
    liblzma are affected by this too, so only the necessary files
    will be compiled.

 CMakeLists.txt | 528 ++++++++++++++++++++++++++++++++++++++++++---------------
 1 file changed, 391 insertions(+), 137 deletions(-)

commit 8be136f667aaeb8f9e16fbd57a83cb282f0c27ff
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-21 14:07:51 +0200

    Build: Add a comment that AC_PROG_CC_C99 is needed for Autoconf 2.69.
    
    It's obsolete in Autoconf >= 2.70 and just an alias for AC_PROG_CC
    but Autoconf 2.69 requires AC_PROG_CC_C99 to get a C99 compiler.

 configure.ac | 3 +++
 1 file changed, 3 insertions(+)

commit 53cc475f2652d9e390ca002018dfd0af0626ef80
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-21 14:04:37 +0200

    Build: configure.ac: Use AS_IF and AS_CASE where required.
    
    This makes no functional difference in the generated configure
    (at least with the Autotools versions I have installed) but this
    change might prevent future bugs like the one that was just
    fixed in the commit 5a5bd7f871818029d5ccbe189f087f591258c294.

 configure.ac | 30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

commit 3b8890a40233b6c783bb101ec14405e786871775
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-21 13:12:03 +0200

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 5a5bd7f871818029d5ccbe189f087f591258c294
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-21 13:11:49 +0200

    Build: Fix --disable-threads breaking the building of shared libs.
    
    This is broken in the releases 5.2.6 to 5.4.2. A workaround
    for these releases is to pass EGREP='grep -E' as an argument
    to configure in addition to --disable-threads.
    
    The problem appeared when m4/ax_pthread.m4 was updated in
    the commit 6629ed929cc7d45a11e385f357ab58ec15e7e4ad which
    introduced the use of AC_EGREP_CPP. AC_EGREP_CPP calls
    AC_REQUIRE([AC_PROG_EGREP]) to set the shell variable EGREP
    but this was only executed if POSIX threads were enabled.
    Libtool code also has AC_REQUIRE([AC_PROG_EGREP]) but Autoconf
    omits it as AC_PROG_EGREP has already been required earlier.
    Thus, if not using POSIX threads, the shell variable EGREP
    would be undefined in the Libtool code in configure.
    
    ax_pthread.m4 is fine. The bug was in configure.ac which called
    AX_PTHREAD conditionally in an incorrect way. Using AS_CASE
    ensures that all AC_REQUIREs get always run.
    
    Thanks to Frank Busse for reporting the bug.
    Fixes: https://github.com/tukaani-project/xz/issues/45

 configure.ac | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit dfe1710784c0a3c3a90c17b80c9e1fe19b5fce06
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-19 22:45:59 +0200

    liblzma: Silence -Wsign-conversion in SSE2 code in memcmplen.h.
    
    Thanks to Christian Hesse for reporting the issue.
    Fixes: https://github.com/tukaani-project/xz/issues/44

 src/liblzma/common/memcmplen.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit f0c580c5fc38bf49a184b48d76c1d8c057d499ce
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-18 22:10:57 +0800

    Add NEWS for 5.4.2.

 NEWS | 48 ++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 48 insertions(+)

commit af4925e6043113ec9b5f9c0cf13abf2a18ccb1f6
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-18 22:10:12 +0800

    Add NEWS for 5.2.11.

 NEWS | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

commit 5a7b930efa7f9849d8da8397e8e5d8638f92be40
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-18 16:00:54 +0200

    Update the copy of GNU GPLv3 from gnu.org to COPYING.GPLv3.

 COPYING.GPLv3 | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit b473a92891f7e991398a3b5eff305f6f2b6d7293
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-18 15:51:57 +0200

    Change a few HTTP URLs to HTTPS.
    
    The xz man page timestamp was intentionally left unchanged.

 INSTALL                    |  2 +-
 README                     |  8 ++++----
 configure.ac               |  2 +-
 dos/INSTALL.txt            |  4 ++--
 src/liblzma/api/lzma.h     |  8 ++++----
 src/liblzma/check/sha256.c |  2 +-
 src/xz/xz.1                |  2 +-
 windows/INSTALL-MinGW.txt  | 10 +++++-----
 8 files changed, 19 insertions(+), 19 deletions(-)

commit 8b2f6001b4f412c259a7883427f2f2c8cea98ea8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-18 00:40:28 +0800

    CMake: Fix typo in a comment.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 76e2315e14c399c15cc90e7930fd4d3d086b0227
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-17 18:36:22 +0200

    Windows: build.bash: Copy liblzma API docs to the output package.

 windows/build.bash | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 133cf55edc5ce92952d2709abd992e48ef1f45ee
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-17 08:53:38 +0200

    Windows: Add microlzma_*.c to the VS project files.
    
    These should have been included in 5.3.2alpha already.

 windows/vs2013/liblzma.vcxproj     | 2 ++
 windows/vs2013/liblzma_dll.vcxproj | 2 ++
 windows/vs2017/liblzma.vcxproj     | 2 ++
 windows/vs2017/liblzma_dll.vcxproj | 2 ++
 windows/vs2019/liblzma.vcxproj     | 2 ++
 windows/vs2019/liblzma_dll.vcxproj | 2 ++
 6 files changed, 12 insertions(+)

commit 75c9ca450fab6982fda9286b168081c9d54126cd
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-17 08:43:51 +0200

    CMake: Add microlzma_*.c to the build.
    
    These should have been included in 5.3.2alpha already.

 CMakeLists.txt | 2 ++
 1 file changed, 2 insertions(+)

commit 0cc3313bd4e569c51e686e5aab8c40c35241d34b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-17 08:41:36 +0200

    Build: Update comments about unaligned access to mention 64-bit.

 cmake/tuklib_integer.cmake | 7 +++----
 m4/tuklib_integer.m4       | 4 ++--
 2 files changed, 5 insertions(+), 6 deletions(-)

commit 5e57e3301319f20c35f8111dea73fa58403b96b1
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-17 00:02:30 +0200

    Tests: Update .gitignore.

 .gitignore | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 0007394d54e21bf30abb9a5e09cbc1e8d44a73ac
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-14 20:04:03 +0200

    po4a/update-po: Display the script name consistently in error messages.

 po4a/update-po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 509157c80c500426ec853bd992d684ebafc8500c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-17 01:30:36 +0800

    Doc: Rename Doxygen HTML doc directory name liblzma => api.
    
    When the docs are installed, calling the directory "liblzma" is
    confusing since multiple other files in the doc directory are for
    liblzma. This should also make it more natural for distros when they
    package the documentation.

 .gitignore             |  2 +-
 Makefile.am            | 18 +++++++++---------
 PACKAGERS              |  4 ++--
 doxygen/Doxyfile       |  2 +-
 doxygen/update-doxygen | 18 +++++++++---------
 5 files changed, 22 insertions(+), 22 deletions(-)

commit fd90e2f4c29180b44e33c7ef726f94e4eae54ed3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-16 22:07:15 +0800

    liblzma: Remove note from lzma_options_bcj about the ARM64 exception.
    
    This was left in by mistake since an early version of the ARM64 filter
    used a different struct for its options.

 src/liblzma/api/lzma/bcj.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 4f50763b981f9056c5f1763dfb26cfa4a26a181d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-16 21:44:02 +0800

    CI: Add doxygen as a dependency.
    
    Autogen now requires --no-doxygen or having doxygen installed to run
    without errors.

 .github/workflows/ci.yml | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit f68f4b27f62f53fdac570885a1f4f23367ce6599
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-15 19:19:13 +0200

    COPYING: Add a note about the included Doxygen-generated HTML.

 COPYING | 11 +++++++++++
 1 file changed, 11 insertions(+)

commit 8979308528c1f45cb9ee52d511f05232b4ad90a1
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-16 21:41:09 +0800

    Doc: Update PACKAGERS with details about liblzma API docs install.

 PACKAGERS | 22 ++++++++++++++++------
 1 file changed, 16 insertions(+), 6 deletions(-)

commit 55ba6e93004842ae0a0792214a23504267ad8f43
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-16 21:38:32 +0800

    liblzma: Add set lzma.h as the main page for Doxygen documentation.
    
    The \mainpage command is used in the first block of comments in lzma.h.
    This changes the previously nearly empty index.html to use the first
    comment block in lzma.h for its contents.
    
    lzma.h is no longer documented separately, but this is for the better
    since lzma.h only defined a few macros that users do not need to use.
    The individual API header files all have a disclaimer that they should
    not be #included directly, so there should be no confusion on the fact
    that lzma.h should be the only header used by applications.
    
    Additionally, the note "See ../lzma.h for information about liblzma as
    a whole." was removed since lzma.h is now the main page of the
    generated HTML and does not have its own page anymore. So it would be
    confusing in the HTML version and was only a "nice to have" when
    browsing the source files.

 src/liblzma/api/lzma.h              | 1 +
 src/liblzma/api/lzma/base.h         | 2 --
 src/liblzma/api/lzma/bcj.h          | 2 --
 src/liblzma/api/lzma/block.h        | 2 --
 src/liblzma/api/lzma/check.h        | 2 --
 src/liblzma/api/lzma/container.h    | 2 --
 src/liblzma/api/lzma/delta.h        | 2 --
 src/liblzma/api/lzma/filter.h       | 2 --
 src/liblzma/api/lzma/hardware.h     | 2 --
 src/liblzma/api/lzma/index.h        | 2 --
 src/liblzma/api/lzma/index_hash.h   | 4 +---
 src/liblzma/api/lzma/lzma12.h       | 2 --
 src/liblzma/api/lzma/stream_flags.h | 2 --
 src/liblzma/api/lzma/version.h      | 2 --
 src/liblzma/api/lzma/vli.h          | 2 --
 15 files changed, 2 insertions(+), 29 deletions(-)

commit 16f21255597f6a57e5692780f962cdc090f62b8c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-16 21:37:32 +0800

    Build: Generate doxygen documentation in autogen.sh.
    
    Another command line option (--no-doxygen) was added to disable
    creating the doxygen documenation in cases where it not wanted or
    if the doxygen tool is not installed.

 autogen.sh | 35 +++++++++++++++++++++++++++++------
 1 file changed, 29 insertions(+), 6 deletions(-)

commit 1321852a3be7196bd7fcfd146221a5669e46407c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-16 21:35:55 +0800

    Build: Create doxygen/update-doxygen script.
    
    This is a helper script to generate the Doxygen documentation. It can be
    run in 'liblzma' or 'internal' mode by setting the first argument. It
    will default to 'liblzma' mode and only generate documentation for the
    liblzma API header files.
    
    The helper script will be run during the custom mydist hook when we
    create releases. This hook already alters the source directory, so its
    fine to do it here too. This way, we can include the Doxygen generated
    files in the distrubtion and when installing.
    
    In 'liblzma' mode, the JavaScript is stripped from the .html files and
    the .js files are removed. This avoids license hassle from jQuery and
    other libraries that Doxygen 1.9.6 puts into jquery.js in minified form.

 Makefile.am            |   1 +
 doxygen/update-doxygen | 111 +++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 112 insertions(+)

commit b1216a7772952d2fe7fe9c6acfcbd98d30abbc7b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-16 21:34:36 +0800

    Build: Install Doxygen docs and include in distribution if generated.
    
    Added a install-data-local target to install the Doxygen documentation
    only when it has been generated. In order to correctly remove the docs,
    a corresponding uninstall-local target was added.
    
    If the doxygen docs exist in the source tree, they will also be included
    in the distribution now too.

 Makefile.am | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

commit c97d12f300b2a94c9f54a44c8931c8bc08cf0a73
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-16 21:23:48 +0800

    Doxygen: Refactor Doxyfile.in to doxygen/Doxyfile.
    
    Instead of having Doxyfile.in configured by Autoconf, the Doxyfile
    can have the tags that need to be configured piped into the doxygen
    command through stdin with the overrides after Doxyfile's contents.
    
    Going forward, the documentation should be generated in two different
    modes: liblzma or internal.
    
    liblzma is useful for most users. It is the documentation for just
    the liblzma API header files. This is the default.
    
    internal is for people who want to understand how xz and liblzma work.
    It might be useful for people who want to contribute to the project.

 .gitignore                      |   3 +-
 Makefile.am                     |   1 -
 configure.ac                    |  40 ---
 Doxyfile.in => doxygen/Doxyfile | 721 +++++++++++++++++++++++++---------------
 4 files changed, 456 insertions(+), 309 deletions(-)

commit 1b7661faa4bbf4a54c6b75900b5059835c382a0f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-28 23:22:36 +0800

    Tests: Remove unused macros and functions.

 tests/tests.h | 75 -----------------------------------------------------------
 1 file changed, 75 deletions(-)

commit af55191102f01e76de658c881299f0909ca0feda
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-29 21:52:15 +0800

    liblzma: Defines masks for return values from lzma_index_checks().

 src/liblzma/api/lzma/index.h | 23 +++++++++++++++++++++++
 tests/test_index.c           | 22 +++++++++++-----------
 2 files changed, 34 insertions(+), 11 deletions(-)

commit 8f38cdd9ab71e2a9d5a9787550222b7578243b73
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-12 22:29:07 +0800

    Tests: Refactors existing lzma_index tests.
    
    Converts the existing lzma_index tests into tuktests and covers every
    API function from index.h except for lzma_file_info_decoder, which can
    be tested in the future.

 tests/test_index.c | 2036 ++++++++++++++++++++++++++++++++++++++--------------
 1 file changed, 1492 insertions(+), 544 deletions(-)

commit 717aa3651ce582807f379d8654c2516e1594df77
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-11 18:42:08 +0200

    xz: Simplify the error-label in Capsicum sandbox code.
    
    Also remove unneeded "sandbox_allowed = false;" as this code
    will never be run more than once (making it work with multiple
    input files isn't trivial).

 src/xz/file_io.c | 27 ++++++++++++---------------
 1 file changed, 12 insertions(+), 15 deletions(-)

commit a0eecc235d3ba8ad3453da98b46c7bc3e644de75
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-03-07 19:59:23 +0200

    xz: Make Capsicum sandbox more strict with stdin and stdout.

 src/xz/file_io.c | 8 ++++++++
 1 file changed, 8 insertions(+)

commit 916448d624aaf55cef0fc3e53754affb8c4f309d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-08 23:08:46 +0800

    Revert: "Add warning if Capsicum sandbox system calls are unsupported."
    
    The warning causes the exit status to be 2, so this will cause problems
    for many scripted use cases for xz. The sandbox usage is already very
    limited already, so silently disabling this allows it to be more usable.

 src/xz/file_io.c | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

commit 01587dda2a8f13fef7e12fd624e6d05da5f9624f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-07 20:02:22 +0800

    xz: Fix -Wunused-label in io_sandbox_enter().
    
    Thanks to Xin Li for recommending the fix.

 src/xz/file_io.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5fb936786601a1cd013a5d436adde65982b1e13c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-06 21:37:45 +0800

    xz: Add warning if Capsicum sandbox system calls are unsupported.
    
    The warning is only used when errno == ENOSYS. Otherwise, xz still
    issues a fatal error.

 src/xz/file_io.c | 2 ++
 1 file changed, 2 insertions(+)

commit 61ee82cb1232a402c82282bbae42821f2b952b0d
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-06 21:27:53 +0800

    xz: Skip Capsicum sandbox system calls when they are unsupported.
    
    If a system has the Capsicum header files but does not actually
    implement the system calls, then this would render xz unusable. Instead,
    we can check if errno == ENOSYS and not issue a fatal error.

 src/xz/file_io.c | 22 +++++++++++++++++-----
 1 file changed, 17 insertions(+), 5 deletions(-)

commit f070722b57ba975a0dff36492d766f03026b1d21
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-03-06 21:08:26 +0800

    xz: Reorder cap_enter() to beginning of capsicum sandbox code.
    
    cap_enter() puts the process into the sandbox. If later calls to
    cap_rights_limit() fail, then the process can still have some extra
    protections.

 src/xz/file_io.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit f1ab1f6b339d16a53ac53efeb97779ecd2bae70f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-24 23:46:23 +0800

    liblzma: Clarify lzma_lzma_preset() documentation in lzma12.h.
    
    lzma_lzma_preset() does not guarentee that the lzma_options_lzma are
    usable in an encoder even if it returns false (success). If liblzma
    is built with default configurations, then the options will always be
    usable. However if the match finders hc3, hc4, or bt4 are disabled, then
    the options may not be usable depending on the preset level requested.
    
    The documentation was updated to reflect this complexity, since this
    behavior was unclear before.

 src/liblzma/api/lzma/lzma12.h | 5 +++++
 1 file changed, 5 insertions(+)

commit 4b7fb3bf41a0ca4c97fad3799949a2aa61b13b99
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-02-27 18:38:35 +0200

    CMake: Require that the C compiler supports C99 or a newer standard.
    
    Thanks to autoantwort for reporting the issue and suggesting
    a different patch:
    https://github.com/tukaani-project/xz/pull/42

 CMakeLists.txt | 8 ++++++++
 1 file changed, 8 insertions(+)

commit 9aa7fdeb04c486d2700967090956af88fdccab7e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-24 18:10:37 +0800

    Tests: Small tweak to test-vli.c.
    
    The static global variables can be disabled if encoders and decoders
    are not built. If they are not disabled and -Werror is used, it will
    cause an usused warning as an error.

 tests/test_vli.c | 2 ++
 1 file changed, 2 insertions(+)

commit 3cf72c4bcba5370f07477c9b9b62ae33069ef9a9
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-06 21:46:43 +0800

    liblzma: Replace '\n' -> newline in filter.h documentation.
    
    The '\n' renders as a newline when the comments are converted to html
    by Doxygen.

 src/liblzma/api/lzma/filter.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 002006be62d77c706565fa6ec828bea64be302da
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-06 21:45:37 +0800

    liblzma: Shorten return description for two functions in filter.h.
    
    Shorten the description for lzma_raw_encoder_memusage() and
    lzma_raw_decoder_memusage().

 src/liblzma/api/lzma/filter.h | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

commit 463d9359b8595f01d44ada1739d75aeb87f36524
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-06 21:44:45 +0800

    liblzma: Reword a few lines in filter.h

 src/liblzma/api/lzma/filter.h | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 01441df92c0fd6a6c02fe5ac27982a54ce887cc0
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-06 21:35:06 +0800

    liblzma: Improve documentation in filter.h.
    
    All functions now explicitly specify parameter and return values.
    The notes and code annotations were moved before the parameter and
    return value descriptions for consistency.
    
    Also, the description above lzma_filter_encoder_is_supported() about
    not being able to list available filters was removed since
    lzma_str_list_filters() will do this.

 src/liblzma/api/lzma/filter.h | 226 ++++++++++++++++++++++++++----------------
 1 file changed, 143 insertions(+), 83 deletions(-)

commit 805b45cd60bfd5da3d3d89077de3789df179b324
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-02-23 20:46:16 +0200

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 30e95bb44c36ae26b2ab12a94343b215fec285e7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-02-21 22:57:10 +0200

    liblzma: Avoid null pointer + 0 (undefined behavior in C).
    
    In the C99 and C17 standards, section 6.5.6 paragraph 8 means that
    adding 0 to a null pointer is undefined behavior. As of writing,
    "clang -fsanitize=undefined" (Clang 15) diagnoses this. However,
    I'm not aware of any compiler that would take advantage of this
    when optimizing (Clang 15 included). It's good to avoid this anyway
    since compilers might some day infer that pointer arithmetic implies
    that the pointer is not NULL. That is, the following foo() would then
    unconditionally return 0, even for foo(NULL, 0):
    
        void bar(char *a, char *b);
    
        int foo(char *a, size_t n)
        {
            bar(a, a + n);
            return a == NULL;
        }
    
    In contrast to C, C++ explicitly allows null pointer + 0. So if
    the above is compiled as C++ then there is no undefined behavior
    in the foo(NULL, 0) call.
    
    To me it seems that changing the C standard would be the sane
    thing to do (just add one sentence) as it would ensure that a huge
    amount of old code won't break in the future. Based on web searches
    it seems that a large number of codebases (where null pointer + 0
    occurs) are being fixed instead to be future-proof in case compilers
    will some day optimize based on it (like making the above foo(NULL, 0)
    return 0) which in the worst case will cause security bugs.
    
    Some projects don't plan to change it. For example, gnulib and thus
    many GNU tools currently require that null pointer + 0 is defined:
    
        https://lists.gnu.org/archive/html/bug-gnulib/2021-11/msg00000.html
    
        https://www.gnu.org/software/gnulib/manual/html_node/Other-portability-assumptions.html
    
    In XZ Utils null pointer + 0 issue should be fixed after this
    commit. This adds a few if-statements and thus branches to avoid
    null pointer + 0. These check for size > 0 instead of ptr != NULL
    because this way bugs where size > 0 && ptr == NULL will likely
    get caught quickly. None of them are in hot spots so it shouldn't
    matter for performance.
    
    A little less readable version would be replacing
    
        ptr + offset
    
    with
    
        offset != 0 ? ptr + offset : ptr
    
    or creating a macro for it:
    
        #define my_ptr_add(ptr, offset) \
                ((offset) != 0 ? ((ptr) + (offset)) : (ptr))
    
    Checking for offset != 0 instead of ptr != NULL allows GCC >= 8.1,
    Clang >= 7, and Clang-based ICX to optimize it to the very same code
    as ptr + offset. That is, it won't create a branch. So for hot code
    this could be a good solution to avoid null pointer + 0. Unfortunately
    other compilers like ICC 2021 or MSVC 19.33 (VS2022) will create a
    branch from my_ptr_add().
    
    Thanks to Marcin Kowalczyk for reporting the problem:
    https://github.com/tukaani-project/xz/issues/36

 src/liblzma/common/block_decoder.c |  5 ++++-
 src/liblzma/common/block_encoder.c |  7 +++++--
 src/liblzma/common/common.c        | 20 ++++++++++++++------
 src/liblzma/common/index_decoder.c | 13 ++++++++++---
 src/liblzma/common/index_encoder.c | 11 +++++++++--
 src/liblzma/common/index_hash.c    | 13 ++++++++++---
 src/liblzma/common/lzip_decoder.c  |  6 +++++-
 src/liblzma/delta/delta_decoder.c  |  7 ++++++-
 src/liblzma/delta/delta_encoder.c  | 12 ++++++++++--
 src/liblzma/simple/simple_coder.c  |  6 ++++--
 10 files changed, 77 insertions(+), 23 deletions(-)

commit fa9065fac54194fe0407fc7f0cc9633fdce13c21
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-07 00:00:44 +0800

    liblzma: Adjust container.h for consistency with filter.h.

 src/liblzma/api/lzma/container.h | 20 +++++++++-----------
 1 file changed, 9 insertions(+), 11 deletions(-)

commit 00a721b63d82dfb658dca8d8cb599d8a245c663f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-07 00:00:09 +0800

    liblzma: Fix small typos and reword a few things in filter.h.

 src/liblzma/api/lzma/container.h | 13 ++++++-------
 1 file changed, 6 insertions(+), 7 deletions(-)

commit 5b1c171d4ffe89ef18fa31509bb0185d6fd11d39
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-06 23:42:08 +0800

    liblzma: Convert list of flags in lzma_mt to bulleted list.

 src/liblzma/api/lzma/container.h | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit dbd47622eb99fefb3538a22baec3def002aa56f5
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-26 23:17:41 +0800

    liblzma: Fix typo in documentation in container.h
    
    lzma_microlzma_decoder -> lzma_microlzma_encoder

 src/liblzma/api/lzma/container.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 14cd30806d69e55906073745bcce3ee50e0ec942
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-26 23:16:34 +0800

    liblzma: Improve documentation for container.h
    
    Standardizing each function to always specify parameters and return
    values. Also moved the parameters and return values to the end of each
    function description.

 src/liblzma/api/lzma/container.h | 146 +++++++++++++++++++++++++--------------
 1 file changed, 93 insertions(+), 53 deletions(-)

commit c9c8bfae3502842dcead85eeb2b951b437c2cd88
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-22 20:59:41 +0800

    CMake: Add LZIP decoder test to list of tests.

 CMakeLists.txt | 1 +
 1 file changed, 1 insertion(+)

commit b9f171dd00a3cc32b6d41ea8e082cf545640ec2a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-02-17 20:56:49 +0200

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 2ee86d20e49985b903b78ebcfa3fa672e73e93aa
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-02-17 20:48:28 +0200

    Build: Use only the generic symbol versioning on MicroBlaze.
    
    On MicroBlaze, GCC 12 is broken in sense that
    __has_attribute(__symver__) returns true but it still doesn't
    support the __symver__ attribute even though the platform is ELF
    and symbol versioning is supported if using the traditional
    __asm__(".symver ...") method. Avoiding the traditional method is
    good because it breaks LTO (-flto) builds with GCC.
    
    See also: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101766
    
    For now the only extra symbols in liblzma_linux.map are the
    compatibility symbols with the patch that spread from RHEL/CentOS 7.
    These require the use of __symver__ attribute or __asm__(".symver ...")
    in the C code. Compatibility with the patch from CentOS 7 doesn't
    seem valuable on MicroBlaze so use liblzma_generic.map on MicroBlaze
    instead. It doesn't require anything special in the C code and thus
    no LTO issues either.
    
    An alternative would be to detect support for __symver__
    attribute in configure.ac and CMakeLists.txt and fall back
    to __asm__(".symver ...") but then LTO would be silently broken
    on MicroBlaze. It sounds likely that MicroBlaze is a special
    case so let's treat it as a such because that is simpler. If
    a similar issue exists on some other platform too then hopefully
    someone will report it and this can be reconsidered.
    
    (This doesn't do the same fix in CMakeLists.txt. Perhaps it should
    but perhaps CMake build of liblzma doesn't matter much on MicroBlaze.
    The problem breaks the build so it's easy to notice and can be fixed
    later.)
    
    Thanks to Vincent Fazio for reporting the problem and proposing
    a patch (in the end that solution wasn't used):
    https://github.com/tukaani-project/xz/pull/32

 configure.ac | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

commit d831072cceca458d94d2d5da201862f6d43a417b
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-02-16 21:09:00 +0200

    liblzma: Very minor API doc tweaks.
    
    Use "member" to refer to struct members as that's the term used
    by the C standard.
    
    Use lzma_options_delta.dist and such in docs so that in Doxygen's
    HTML output they will link to the doc of the struct member.
    
    Clean up a few trailing white spaces too.

 src/liblzma/api/lzma/block.h        |  6 +++---
 src/liblzma/api/lzma/delta.h        |  6 +++---
 src/liblzma/api/lzma/index.h        | 10 +++++-----
 src/liblzma/api/lzma/stream_flags.h |  6 +++---
 4 files changed, 14 insertions(+), 14 deletions(-)

commit f029daea39c215fd7d5cb6b6798818b055cf5b22
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-17 00:54:33 +0800

    liblzma: Adjust spacing in doc headers in bcj.h.

 src/liblzma/api/lzma/bcj.h | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit a5de68bac2bb7e1b9119e6cea7d761a22ea73e9c
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-17 00:44:44 +0800

    liblzma: Adjust documentation in bcj.h for consistent style.

 src/liblzma/api/lzma/bcj.h | 43 ++++++++++++++++++++++---------------------
 1 file changed, 22 insertions(+), 21 deletions(-)

commit efa498c13b883810497e0ea8a169efd6f48f5026
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-17 00:36:05 +0800

    liblzma: Rename field => member in documentation.
    
    Also adjusted preset value => preset level.

 src/liblzma/api/lzma/base.h         | 18 +++++++--------
 src/liblzma/api/lzma/block.h        | 44 ++++++++++++++++++-------------------
 src/liblzma/api/lzma/container.h    | 26 +++++++++++-----------
 src/liblzma/api/lzma/delta.h        | 12 +++++-----
 src/liblzma/api/lzma/index.h        | 30 ++++++++++++-------------
 src/liblzma/api/lzma/lzma12.h       | 28 +++++++++++------------
 src/liblzma/api/lzma/stream_flags.h | 32 +++++++++++++--------------
 7 files changed, 95 insertions(+), 95 deletions(-)

commit 718b22a6c5e3ee5de123323ea798872381f9320e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-02-16 17:59:50 +0200

    liblzma: Silence a warning from MSVC.
    
    It gives C4146 here since unary minus with unsigned integer
    is still unsigned (which is the intention here). Doing it
    with substraction makes it clearer and avoids the warning.
    
    Thanks to Nathan Moinvaziri for reporting this.

 src/liblzma/check/crc64_fast.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 87c53553fa7d50f777b4edfa99f2083628f590fe
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-16 21:04:54 +0800

     liblzma: Improve documentation for stream_flags.h
    
    Standardizing each function to always specify parameters and return
    values. Also moved the parameters and return values to the end of each
    function description.
    
    A few small things were reworded and long sentences broken up.

 src/liblzma/api/lzma/stream_flags.h | 76 ++++++++++++++++++++++---------------
 1 file changed, 46 insertions(+), 30 deletions(-)

commit 13d99e75a543e9e5f8633cc241eae55b91a3b242
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-14 21:50:16 +0800

    liblzma: Improve documentation in lzma12.h.
    
    All functions now explicitly specify parameter and return values.

 src/liblzma/api/lzma/lzma12.h | 32 +++++++++++++++++++++++---------
 1 file changed, 23 insertions(+), 9 deletions(-)

commit 43ec344c868f930e96879eb9e49212cce92a9884
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-27 22:44:06 +0800

    liblzma: Improve documentation in check.h.
    
    All functions now explicitly specify parameter and return values.
    Also moved the note about SHA-256 functions not being exported to the
    top of the file.

 src/liblzma/api/lzma/check.h | 41 ++++++++++++++++++++++++++++-------------
 1 file changed, 28 insertions(+), 13 deletions(-)

commit 9c71db4e884fd49aea3d1e711036bff45ca66487
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-08 21:33:52 +0800

    liblzma: Improve documentation in index.h
    
    All functions now explicitly specify parameter and return values.

 src/liblzma/api/lzma/index.h | 177 ++++++++++++++++++++++++++++++-------------
 1 file changed, 126 insertions(+), 51 deletions(-)

commit 421f2f2e160720f6009e3b6a125cafe2feaa9419
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-08 20:35:32 +0800

    liblzma: Reword a comment in index.h.

 src/liblzma/api/lzma/index.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit b67539484981351d501b68de5e925425e50c59b1
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-08 20:30:23 +0800

    liblzma: Omit lzma_index_iter's internal field from Doxygen docs.
    
    Add \private above this field and its sub-fields since it is not meant
    to be modified by users.

 src/liblzma/api/lzma/index.h | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit 0c9e4fc2ad6d88d54f299240fcc5a2ce7d695d96
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-21 21:32:03 +0800

    liblzma: Fix documentation for LZMA_MEMLIMIT_ERROR.
    
    LZMA_MEMLIMIT_ERROR was missing the "<" character needed to put
    documentation after a member.

 src/liblzma/api/lzma/base.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 816fec125aa74bcef46512c73acc6d9e5a700d15
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-21 00:29:38 +0800

    liblzma: Improve documentation for base.h.
    
    Standardizing each function to always specify params and return values.
    Also fixed a small grammar mistake.

 src/liblzma/api/lzma/base.h | 30 +++++++++++++++++++++++++-----
 1 file changed, 25 insertions(+), 5 deletions(-)

commit 862dacef1a4e7e1b28d465956fa4244ed01df154
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-14 00:12:34 +0800

    liblzma: Add one more missing [out] annotation in vli.h

 src/liblzma/api/lzma/vli.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 867b08ae4254bf55dd1f7fd502cc618231b92f75
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-14 00:08:33 +0800

    liblzma: Minor improvements to vli.h.
    
    Added [out] annotations to parameters that are pointers and can have
    their value changed. Also added a clarification to lzma_vli_is_valid.

 src/liblzma/api/lzma/vli.h | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

commit 90d0e628ff11e5030bcc4fc000bca056adda6603
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-10 21:38:02 +0800

    liblzma: Add comments for macros in delta.h.
    
    Document LZMA_DELTA_DIST_MIN and LZMA_DELTA_DIST_MAX for completeness
    and to avoid Doxygen warnings.

 src/liblzma/api/lzma/delta.h | 8 ++++++++
 1 file changed, 8 insertions(+)

commit 9255fffdb13e59874bf7f95c370c410ad3a7e114
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-10 21:35:23 +0800

    liblzma: Improve documentation in index_hash.h.
    
    All functions now explicitly specify parameter and return values.
    Also reworded the description of lzma_index_hash_init() for readability.

 src/liblzma/api/lzma/index_hash.h | 36 +++++++++++++++++++++++++++---------
 1 file changed, 27 insertions(+), 9 deletions(-)

commit 1dbe12b90cff79bb51923733ac0840747b4b4131
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-02-07 19:07:45 +0200

    xz: Improve the comment about start_time in mytime.c.
    
    start_time is relative to an arbitary point in time, it's not
    time of day, so using it for anything else than time differences
    wouldn't make sense.

 src/xz/mytime.c | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

commit 7673ef5aa80c1af7fb693360dd82f527b46c2c56
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-04 21:06:35 +0800

    Build: Adjust CMake version search regex.
    
    Now, the LZMA_VERSION_MAJOR, LZMA_VERSION_MINOR, and LZMA_VERSION_PATCH
    macros do not need to be on consecutive lines in version.h. They can be
    separated by more whitespace, comments, or even other content, as long
    as they appear in the proper order (major, minor, patch).

 CMakeLists.txt | 2 ++
 1 file changed, 2 insertions(+)

commit b8bce89be7fb5bffe5fef4a2782ca9b2b107eaac
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-04 12:01:23 +0800

    xz: Add a comment clarifying the use of start_time in mytime.c.

 src/xz/mytime.c | 5 +++++
 1 file changed, 5 insertions(+)

commit 912af91b10a18fb9bb3167247ecaaefca8248ee9
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-26 09:50:21 +0800

    liblzma: Improve documentation for version.h.
    
    Specified parameter and return values for API functions and documented
    a few more of the macros.

 src/liblzma/api/lzma/version.h | 29 ++++++++++++++++++++++-------
 1 file changed, 22 insertions(+), 7 deletions(-)

commit 850adec171203cd22b57d016084d713f72ae5307
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-03 22:52:55 +0800

    Docs: Omit SIGTSTP not handled from TODO.

 TODO | 4 ----
 1 file changed, 4 deletions(-)

commit 2c78a83c6faec70154d9eb78022a618ed62cdcb3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-03 00:33:32 +0800

    liblzma: Fix bug in lzma_str_from_filters() not checking filters[] length.
    
    The bug is only a problem in applications that do not properly terminate
    the filters[] array with LZMA_VLI_UNKNOWN or have more than
    LZMA_FILTERS_MAX filters. This bug does not affect xz.

 src/liblzma/common/string_conversion.c | 7 +++++++
 1 file changed, 7 insertions(+)

commit e01f01b9af1c074463b92694a16ecc16a31907c0
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-03 00:32:47 +0800

    Tests: Create test_filter_str.c.
    
    Tests lzma_str_to_filters(), lzma_str_from_filters(), and
    lzma_str_list_filters() API functions.

 CMakeLists.txt          |   1 +
 tests/Makefile.am       |   2 +
 tests/test_filter_str.c | 593 ++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 596 insertions(+)

commit 8dfc029e7a4ce45809c30313dc0e502f0d22be26
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-22 08:49:00 +0800

    liblzma: Fix typos in comments in string_conversion.c.

 src/liblzma/common/string_conversion.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 54ad83c1ae2180dcc0cb2445b181dc1e9732a5d6
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-03 00:20:20 +0800

    liblzma: Clarify block encoder and decoder documentation.
    
    Added a few sentences to the description for lzma_block_encoder() and
    lzma_block_decoder() to highlight that the Block Header must be coded
    before calling these functions.

 src/liblzma/api/lzma/block.h | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

commit f680e771b3eb2a46310fe85b3e000ac3a1a0640f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-03 00:12:24 +0800

    Update lzma_block documentation for lzma_block_uncomp_encode().

 src/liblzma/api/lzma/block.h | 3 +++
 1 file changed, 3 insertions(+)

commit 504cf4af895fd45aad0c56eb3b49d90acd54465b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-03 00:11:37 +0800

    liblzma: Minor edits to lzma_block header_size documentation.

 src/liblzma/api/lzma/block.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 115b720fb521f99aa832d06b2c12b7f8c6c50680
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-03 00:11:07 +0800

    liblzma: Enumerate functions that read version in lzma_block.

 src/liblzma/api/lzma/block.h | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

commit 85ea0979adcf808a3830aefbe7a4ec884e542ea1
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-03 00:10:34 +0800

    liblzma: Clarify comment in block.h.

 src/liblzma/api/lzma/block.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 1f7ab90d9ce224230a04de6b921ad6e2029023a8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-03 00:07:23 +0800

    liblzma: Improve documentation for block.h.
    
    Standardizing each function to always specify params and return values.
    Output pointer parameters are also marked with doxygen style [out] to
    make it clear. Any note sections were also moved above the parameter and
    return sections for consistency.

 src/liblzma/api/lzma/block.h | 96 ++++++++++++++++++++++++++++++++++----------
 1 file changed, 75 insertions(+), 21 deletions(-)

commit c563a4bc554a96bd0b6aab3c139715b7ec8f6ca3
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-01 23:38:30 +0800

    liblzma: Clarify a comment about LZMA_STR_NO_VALIDATION.
    
    The flag description for LZMA_STR_NO_VALIDATION was previously confusing
    about the treatment for filters than cannot be used with .xz format
    (lzma1) without using LZMA_STR_ALL_FILTERS. Now, it is clear that
    LZMA_STR_NO_VALIDATION is not a super set of LZMA_STR_ALL_FILTERS.

 src/liblzma/api/lzma/filter.h | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 315c64c7e18acc59a745b68148188a73e998252b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-01 21:43:33 +0800

    CI: Update .gitignore for artifacts directory in build-aux.
    
    The workflow action for our CI pipeline can only reference artifacts in
    the source directory, so we should ignore these files if the ci_build.sh
    is run locally.

 .gitignore | 1 +
 1 file changed, 1 insertion(+)

commit 2c1341f4fa06e7f487d61142aa354c433e17ec7f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-01 21:36:46 +0800

    CI: Add quotes around variables in a few places.

 build-aux/ci_build.sh | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 3a401b0e0c7a2658af7801dd0690256ef24149e0
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-02-01 21:36:22 +0800

    CI: Upload test logs as artifacts if a test fails.

 .github/workflows/ci.yml | 60 ++++++++++++++++++++++++++++++++++--------------
 build-aux/ci_build.sh    | 31 ++++++++++++++++++++-----
 2 files changed, 68 insertions(+), 23 deletions(-)

commit 610dde15a88f12cc540424eb3eb3ed61f3876f74
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-27 20:02:49 +0200

    xz: Use clock_gettime() even if CLOCK_MONOTONIC isn't available.
    
    mythread.h and thus liblzma already does it.

 src/xz/mytime.c  | 11 ++++++++---
 src/xz/private.h |  3 +--
 2 files changed, 9 insertions(+), 5 deletions(-)

commit 2e02877288f6576cd4595e9ac7684f867cd47d68
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-27 19:41:19 +0200

    po4a/po4a.conf: Sort the language identifiers in alphabetical order.

 po4a/po4a.conf | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ff592c616eda274215b485cf1b8d34f060c9f3be
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-26 18:29:17 +0200

    xz: Add SIGTSTP handler for progress indicator time keeping.
    
    This way, if xz is stopped the elapsed time and estimated time
    remaining won't get confused by the amount of time spent in
    the stopped state.
    
    This raises SIGSTOP. It's not clear to me if this is the correct way.
    POSIX and glibc docs say that SIGTSTP shouldn't stop the process if
    it is orphaned but this commit doesn't attempt to handle that.
    
    Search for SIGTSTP in section 2.4.3:
    
    https://pubs.opengroup.org/onlinepubs/9699919799/functions/V2_chap02.html

 src/xz/mytime.c  | 56 +++++++++++++++++++++++++++++++++++++++++++++++++++++++-
 src/xz/mytime.h  |  6 ++++++
 src/xz/private.h | 12 ++++++++++++
 src/xz/signals.c | 17 ++++++++++++++++-
 4 files changed, 89 insertions(+), 2 deletions(-)

commit 3b1c8ac8d1d553cbb1fb22b545d2b1424c752b76
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-27 20:14:51 +0800

    Translations: Add Brazilian Portuguese translation of man pages.
    
    Thanks to Rafael Fontenelle.

 po4a/po4a.conf |    2 +-
 po4a/pt_BR.po  | 3677 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 3678 insertions(+), 1 deletion(-)

commit a15a7552f9f67c4e402f5d2967324e0ccfd6fccc
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-26 17:51:06 +0200

    Build: Avoid different quoting style in --enable-doxygen doc.

 configure.ac | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit af5a4bd5afc089d9697756dded38feafaa987ae4
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-26 17:39:46 +0200

    tuklib_physmem: Check for __has_warning before GCC version.
    
    Clang can be configured to fake a too high GCC version so
    this way it's more robust.

 src/common/tuklib_physmem.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit f35d98e20609e0be6a04ae2604bfb7cb9d5bd5e4
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-24 20:48:50 +0800

    liblzma: Fix documentation in filter.h for lzma_str_to_filters()
    
    The previous documentation for lzma_str_to_filters() was technically
    correct, but misleading. lzma_str_to_filters() returns NULL on success,
    which is in practice always defined to 0. This is the same value as
    LZMA_OK, but lzma_str_to_filters() does not return lzma_ret so we should
    be more clear.

 src/liblzma/api/lzma/filter.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 2f78ecc5939b3d97ddfc2a6bd31b50108a28d0a2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-23 23:44:58 +0200

    Revert "tuklib_common: Define __has_warning if it is not defined."
    
    This reverts commit 82e3c968bfa10e3ff13333bd9cbbadb5988d6766.
    
    Macros in the reserved namespace (_foo or __foo) shouldn't be #defined
    without a very good reason. Here the alternative would have been
    to #define tuklib_has_warning(str) to an approriate value.
    
    Also the tuklib_* files should stay namespace clean if possible.

 src/common/tuklib_common.h | 7 -------
 1 file changed, 7 deletions(-)

commit 8366cf8738e8b7bb74c967d07bf0fd2a1878e575
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-23 23:38:34 +0200

    tuklib_physmem: Clean up the way -Wcast-function-type is silenced on Windows.
    
    __has_warning and other __has_foo macros are meant to become
    compiler-agnostic so it's not good to check for __clang__ with it.
    
    This also relied on tuklib_common.h for #defining __has_warning
    which was confusing as #defining reserved macros is generally
    not a good idea.

 src/common/tuklib_physmem.c | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

commit 683a3c7e2fcd922200c31078e5c9dd1348e90941
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-24 00:05:38 +0200

    xz: Flip the return value of suffix_is_set to match the documentation.
    
    Also edit style to match the existing coding style in the project.

 src/xz/args.c   | 6 +++---
 src/xz/suffix.c | 2 +-
 src/xz/suffix.h | 1 +
 3 files changed, 5 insertions(+), 4 deletions(-)

commit cc5aa9ab138beeecaee5a1e81197591893ee9ca0
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-07 21:55:06 +0800

    xz: Refactor duplicated check for custom suffix when using --format=raw

 src/xz/args.c   |  8 ++++++++
 src/xz/suffix.c | 26 ++++++++------------------
 src/xz/suffix.h |  7 +++++++
 3 files changed, 23 insertions(+), 18 deletions(-)

commit 9663141274e01592a281a7f2df5d7a31a1dac8bf
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-20 21:53:14 +0800

    liblzma: Set documentation on all reserved fields to private.
    
    This prevents the reserved fields from being part of the generated
    Doxygen documentation.

 src/liblzma/api/lzma/base.h         | 17 +++++++++++++++
 src/liblzma/api/lzma/block.h        | 43 +++++++++++++++++++++++++++++++++++++
 src/liblzma/api/lzma/container.h    | 24 +++++++++++++++++++++
 src/liblzma/api/lzma/delta.h        | 12 +++++++++++
 src/liblzma/api/lzma/index.h        | 27 +++++++++++++++++++++++
 src/liblzma/api/lzma/lzma12.h       | 22 +++++++++++++++++++
 src/liblzma/api/lzma/stream_flags.h | 28 ++++++++++++++++++++++++
 7 files changed, 173 insertions(+)

commit 6327a045f34d48fc5afc58ba0d32a82c94403049
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-20 21:39:59 +0800

    Doxygen: Update Doxyfile.in from 1.4.7 to 1.8.17.
    
    A few Doxygen tags were obsolete from 1.4.7. Version 1.8.17 released
    in 2019, so this should be compatible with resonable modern distros.
    The purpose of Doxygen these days is for docs on the website, so it
    doesn't necessarily have to work for everyone. Just when the maintainers
    want to update the docs.

 Doxyfile.in | 2523 ++++++++++++++++++++++++++++++++++++++++++++---------------
 1 file changed, 1893 insertions(+), 630 deletions(-)

commit bbf71b69ebf9d0d62a0af150a5c37d193b8159ad
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-03 20:37:30 +0800

    Doxygen: Make Doxygen only produce liblzma API documentation by default.
    
    Doxygen is now configurable in autotools only with
    --enable-doxygen=[api|all]. The default is "api", which will only
    generate HTML output for liblzma API functions. The LaTex documentation
    output was also disabled.

 Doxyfile.in  | 18 +++++++++---------
 configure.ac | 39 +++++++++++++++++++++++++++++++++++++++
 2 files changed, 48 insertions(+), 9 deletions(-)

commit 6fcf4671b6047113c583a0919fc850987a4ec5f4
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-21 23:59:43 +0800

    liblzma: Highlight liblzma API headers should not be included directly.
    
    This improves the generated Doxygen HTML files to better highlight
    how to properly use the liblzma API header files.

 src/liblzma/api/lzma/base.h         | 5 +++--
 src/liblzma/api/lzma/bcj.h          | 5 +++--
 src/liblzma/api/lzma/block.h        | 5 +++--
 src/liblzma/api/lzma/check.h        | 5 +++--
 src/liblzma/api/lzma/container.h    | 5 +++--
 src/liblzma/api/lzma/delta.h        | 5 +++--
 src/liblzma/api/lzma/filter.h       | 5 +++--
 src/liblzma/api/lzma/hardware.h     | 5 +++--
 src/liblzma/api/lzma/index.h        | 5 +++--
 src/liblzma/api/lzma/index_hash.h   | 5 +++--
 src/liblzma/api/lzma/lzma12.h       | 5 +++--
 src/liblzma/api/lzma/stream_flags.h | 5 +++--
 src/liblzma/api/lzma/version.h      | 5 +++--
 src/liblzma/api/lzma/vli.h          | 5 +++--
 14 files changed, 42 insertions(+), 28 deletions(-)

commit b43ff180fb2e372adce876bfa155fc9bcf0c3db4
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-19 20:35:09 +0800

    tuklib_physmem: Silence warning from -Wcast-function-type on MinGW-w64.
    
    tuklib_physmem depends on GetProcAddress() for both MSVC and MinGW-w64
    to retrieve a function address. The proper way to do this is to cast the
    return value to the type of function pointer retrieved. Unfortunately,
    this causes a cast-function-type warning, so the best solution is to
    simply ignore the warning.

 src/common/tuklib_physmem.c | 9 +++++++++
 1 file changed, 9 insertions(+)

commit 82e3c968bfa10e3ff13333bd9cbbadb5988d6766
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-19 20:32:40 +0800

    tuklib_common: Define __has_warning if it is not defined.
    
    clang supports the __has_warning macro to determine if the version of
    clang compiling the code supports a given warning. If we do not define
    it for other compilers, it may cause a preprocessor error.

 src/common/tuklib_common.h | 7 +++++++
 1 file changed, 7 insertions(+)

commit b2ba1a489df451cdcd93b2334e319dd06778de19
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-18 22:11:05 +0800

    CI: Reorder 32-bit build first for Linux autotool builds.
    
    The 32-bit build needs to be first so the configure cache only needs to
    be reset one time. The 32-bit build sets the CFLAGS env variable, so any
    build using that flag after will fail unless the cache is reset.

 .github/workflows/ci.yml | 17 ++++++++++++-----
 1 file changed, 12 insertions(+), 5 deletions(-)

commit dd1c1135741057c91e8d018be9ec4d43968b0e64
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-18 21:51:43 +0800

    CI: Enable --config-cache in autotool builds.
    
    If CFLAGS are set in a build, the cache must be cleared with
    "make distclean", or by deleting the cache file.

 build-aux/ci_build.sh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit d3e11477053764c003eec2daa5198c747d70ff69
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-16 21:35:45 +0800

    xz: Add missing comment for coder_set_compression_settings()

 src/xz/coder.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 123255b6ed15f4428b2aa92e4962015a5362f6bf
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-16 20:55:10 +0800

    xz: Do not set compression settings with raw format in list mode.
    
    Calling coder_set_compression_settings() in list mode with verbose mode
    on caused the filter chain and memory requirements to print. This was
    unnecessary since the command results in an error and not consistent
    with other formats like lzma and alone.

 src/xz/args.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 571919c47b9ff5171ede84378620ed0a9aeb98c0
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-13 20:37:06 +0800

    Translations: Update the Brazilian Portuguese translation.

 po/pt_BR.po | 603 ++++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 344 insertions(+), 259 deletions(-)

commit 81cb02e2c22bbc036cdfaa2d2c4176f6bd60d3cf
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-12 23:43:06 +0800

    CI: Disable shared and nls from various jobs in autotool runners.
    
    Disabling shared library generation and linking should help speed up the
    runners. The shared library is still being tested in the 32 bit build
    and the full feature.
    
    Disabling nls is to check for any unexpected warnings or errors.

 .github/workflows/ci.yml | 56 ++++++++++++++++++++++++------------------------
 1 file changed, 28 insertions(+), 28 deletions(-)

commit 58a052198a7bcaf6e958f87fad72e69e19a2579b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-12 23:39:19 +0800

    CI: Reorder the 32-bit job in the Ubuntu runner.
    
    Run the 32 bit job sooner since this is a more interesting test than
    some of the later jobs.

 .github/workflows/ci.yml | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 4110a998b83459fe2bc9bc1bec30ad68afa8f797
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-12 23:09:03 +0800

    CI: Allow disabling Native Language Support.

 build-aux/ci_build.sh | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit 0dec634e705b5bf89a37c5d62d71e8511d480058
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-12 23:02:20 +0800

    CI: Only run autogen.sh if it has not already run.

 build-aux/ci_build.sh | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

commit 32287dc8def94df4546e903495d14c132bd54cc4
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-12 22:58:36 +0800

    CI: Allow disabling shared library in autotools builds.

 build-aux/ci_build.sh | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit 77d1ebcc99ddd82a300d1838f608150221931dcd
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-12 22:44:18 +0800

    CI: Improve Usage readability and add -h option.

 build-aux/ci_build.sh | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

commit a8bb8358d10b059274f3cf993d9b8f490bafb268
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-12 13:04:05 +0200

    Build: Omit -Wmissing-noreturn from the default warnings.
    
    It's not that important. It can be annoying in builds that
    disable many features since in those cases the tests programs
    will correctly trigger this warning with Clang.

 configure.ac | 1 -
 1 file changed, 1 deletion(-)

commit 52dc033d0bde0d19e3912303c6c74bae559d6498
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-12 06:05:58 +0200

    xz: Use ssize_t for the to-be-ignored return value from write(fd, ptr, 1).
    
    It makes no difference here as the return value fits into an int
    too and it then gets ignored but this looks better.

 src/xz/file_io.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b1a6d180a363d57b2b1c89526ff3f0782bf863d3
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-12 06:01:12 +0200

    xz: Silence warnings from -Wsign-conversion in a 32-bit build.

 src/common/tuklib_mbstr_fw.c | 2 +-
 src/xz/list.c                | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 31c21c734b7c7d7428a3da7402a2cb7bc2587339
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-12 05:38:48 +0200

    liblzma: Silence another warning from -Wsign-conversion in a 32-bit build.
    
    It doesn't warn on a 64-bit system because truncating
    a ptrdiff_t (signed long) to uint32_t is diagnosed under
    -Wconversion by GCC and -Wshorten-64-to-32 by Clang.

 src/liblzma/lz/lz_encoder_mf.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit 37fbdfb7263522c11c7ad2685413d6295532581d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-12 04:46:45 +0200

    liblzma: Silence a warning from -Wsign-conversion in a 32-bit build.

 src/common/mythread.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5ce6ddc221d0bfb57d810d845bb65fb0aac0b008
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-12 04:17:24 +0200

    Build: Make configure add more warning flags for GCC and Clang.
    
    -Wstrict-aliasing was removed from the list since it is enabled
    by -Wall already.
    
    A normal build is clean with these on GNU/Linux x86-64 with
    GCC 12.2.0 and Clang 14.0.6.

 configure.ac | 36 +++++++++++++++++++++++++++++++-----
 1 file changed, 31 insertions(+), 5 deletions(-)

commit bfc3a0a8ac16de90049c1b1ba1445a7626d0230c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-12 04:14:18 +0200

    Tests: Fix warnings from clang --Wassign-enum.
    
    Explicitly casting the integer to lzma_check silences the warning.
    Since such an invalid value is needed in multiple tests, a constant
    INVALID_LZMA_CHECK_ID was added to tests.h.
    
    The use of 0x1000 for lzma_block.check wasn't optimal as if
    the underlying type is a char then 0x1000 will be truncated to 0.
    However, in these test cases the value is ignored, thus even with
    such truncation the test would have passed.

 tests/test_block_header.c | 6 +++---
 tests/test_check.c        | 2 +-
 tests/test_stream_flags.c | 8 ++++----
 tests/tests.h             | 9 +++++++++
 4 files changed, 17 insertions(+), 8 deletions(-)

commit 49245bb31e215ad455a1ab85e4ed6783152dc522
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-12 03:51:07 +0200

    Tests: Silence warnings from -Wsign-conversion.
    
    Note that assigning an unsigned int to lzma_check doesn't warn
    on GNU/Linux x86-64 since the enum type is unsigned on that
    platform. The enum can be signed on some other platform though
    so it's best to use enumeration type lzma_check in these situations.

 tests/test_check.c        |  6 +++---
 tests/test_stream_flags.c | 10 +++++-----
 2 files changed, 8 insertions(+), 8 deletions(-)

commit 3f13bf6b9e8624cbe6d6e3e82d6c98a3ed1ad571
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-12 03:19:59 +0200

    liblzma: Silence warnings from clang -Wconditional-uninitialized.
    
    This is similar to 2ce4f36f179a81d0c6e182a409f363df759d1ad0.
    The actual initialization of the variables is done inside
    mythread_sync() macro. Clang doesn't seem to see that
    the initialization code inside the macro is always executed.

 src/liblzma/common/stream_decoder_mt.c | 8 +++++---
 src/liblzma/common/stream_encoder_mt.c | 2 +-
 2 files changed, 6 insertions(+), 4 deletions(-)

commit 6c886cc5b3c90c6a75e6be8b1278ec2261e452a6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-12 03:11:40 +0200

    Fix warnings from clang -Wdocumentation.

 src/liblzma/check/check.h      | 4 ----
 src/liblzma/lz/lz_encoder_mf.c | 4 ++--
 src/xz/options.c               | 4 ++--
 3 files changed, 4 insertions(+), 8 deletions(-)

commit a0e7fb1c1ea658b67f30517f5d1975efd0226dba
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-12 03:04:28 +0200

    Tests: test_lzip_decoder: Remove trailing white-space.

 tests/test_lzip_decoder.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit c0f8d6782f29e219fd496dd23f6a033270509d5c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-12 03:03:55 +0200

    Tests: test_lzip_decoder: Silence warnings from -Wsign-conversion.

 tests/test_lzip_decoder.c | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

commit 62efd48a825e8f439e84c85e165d8774ddc68fd2
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-11 23:58:16 +0800

    Add NEWS for 5.4.1.

 NEWS | 70 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 70 insertions(+)

commit d1561c47ec8cd3844a785d3741dc932f9b9c5790
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-11 22:46:48 +0800

    xz: Fix warning -Wformat-nonliteral on clang in message.c.
    
    clang and gcc differ in how they handle -Wformat-nonliteral. gcc will
    allow a non-literal format string as long as the function takes its
    format arguments as a va_list.

 src/xz/message.c | 9 +++++++++
 1 file changed, 9 insertions(+)

commit 8c0f115cc489331c48df77beca92fe378039d919
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-11 20:58:31 +0800

    Tests: Fix test_filter_flags copy/paste error.

 tests/test_filter_flags.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 25035813d1d596fde692addc33e7f715f1fe55eb
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-11 20:42:29 +0800

    Tests: Fix type-limits warning in test_filter_flags.
    
    This only occurs in test_filter_flags when the BCJ filters are not
    configured and built. In this case, ARRAY_SIZE() returns 0 and causes a
    type-limits warning with the loop variable since an unsigned number will
    always be >= 0.

 tests/test_filter_flags.c | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

commit 0b8fa310cf56fec55663f62340e49e8e1441594f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-10 22:14:03 +0200

    liblzma: CLMUL CRC64: Work around a bug in MSVC, second attempt.
    
    This affects only 32-bit x86 builds. x86-64 is OK as is.
    
    I still cannot easily test this myself. The reporter has tested
    this and it passes the tests included in the CMake build and
    performance is good: raw CRC64 is 2-3 times faster than the
    C version of the slice-by-four method. (Note that liblzma doesn't
    include a MSVC-compatible version of the 32-bit x86 assembly code
    for the slice-by-four method.)
    
    Thanks to Iouri Kharon for figuring out a fix, testing, and
    benchmarking.

 src/liblzma/check/crc64_fast.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

commit 765354b50c2886fc0d294d6be3b207f7ae2ada70
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-11 01:18:50 +0800

    Tests: Fix unused function warning in test_block_header.
    
    One of the global arrays of filters was only used in a test that
    required both encoders and decoders to be configured in the build.

 tests/test_block_header.c | 4 ++++
 1 file changed, 4 insertions(+)

commit 7c23c05befdcc73231c0d6632a7d943dbeaea1aa
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-11 01:08:03 +0800

    Tests: Fix unused function warning in test_index_hash.
    
    test_index_hash does not use fill_index_hash() unless both encoders
    and decoders are configured in the build.

 tests/test_index_hash.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit 57464bb4ebd6c00dc8b19803f05ea55ddd0826f6
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-11 00:54:45 +0800

    CI/CD: Add 32-bit build and test steps to Ubuntu autotools runner.
    
    If all goes well, Mac autotools and Linux and Mac CMake will be added
    later for 32-bit builds.

 .github/workflows/ci.yml | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit 923eb689a4b863b6cca8df6360d4962aae994edf
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-11 00:51:01 +0800

    CI/CD: Enables warnings as errors in autotool build.
    
    This will help us catch warnings and potential bugs in builds that are
    not often tested by us.

 build-aux/ci_build.sh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit feae5528a30c006b6e2f96a95116e20b983703fc
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-11 00:48:35 +0800

    CI/CD: Add -f argument to set CFLAGS in ci_build.sh.
    
    For now, the suggested option is for -m32 only, but this can be updated
    later if other flags are deemed useful.

 build-aux/ci_build.sh | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit cfabb62a4874c146e7d6f30445637602545bc054
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-10 12:47:16 +0200

    Revert "liblzma: CLMUL CRC64: Workaround a bug in MSVC (VS2015-2022)."
    
    This reverts commit 36edc65ab4cf10a131f239acbd423b4510ba52d5.
    
    It was reported that it wasn't a good enough fix and MSVC
    still produced (different kind of) bad code when building
    for 32-bit x86 if optimizations are enabled.
    
    Thanks to Iouri Kharon.

 src/liblzma/check/crc64_fast.c | 6 ------
 1 file changed, 6 deletions(-)

commit 0b64215170dd3562f207ef26f794755bcd600526
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-10 11:56:11 +0200

    sysdefs.h: Don't include strings.h anymore.
    
    On some platforms src/xz/suffix.c may need <strings.h> for
    strcasecmp() but suffix.c includes the header when it needs it.
    
    Unless there is an old system that otherwise supports enough C99
    to build XZ Utils but doesn't have C89/C90-compatible <string.h>,
    there should be no need to include <strings.h> in sysdefs.h.

 src/common/sysdefs.h | 6 ------
 1 file changed, 6 deletions(-)

commit ec2fc39fe4f4e6e242b3a669585049763968cdeb
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-10 11:23:41 +0200

    xz: Include <strings.h> in suffix.c if needed for strcasecmp().
    
    SUSv2 and POSIX.1‐2017 declare only a few functions in <strings.h>.
    Of these, strcasecmp() is used on some platforms in suffix.c.
    Nothing else in the project needs <strings.h> (at least if
    building on a modern system).
    
    sysdefs.h currently includes <strings.h> if HAVE_STRINGS_H is
    defined and suffix.c relied on this.
    
    Note that dos/config.h doesn't #define HAVE_STRINGS_H even though
    DJGPP does have strings.h. It isn't needed with DJGPP as strcasecmp()
    is also in <string.h> in DJGPP.

 src/xz/suffix.c | 3 +++
 1 file changed, 3 insertions(+)

commit 7049c4a76c805ad27d6cf4ee119a2ef2a7add59f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-10 10:05:13 +0200

    sysdefs.h: Fix a comment.

 src/common/sysdefs.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 194a5fab69277d9e804a6113b5f676b8666b3a61
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-10 10:04:06 +0200

    sysdefs.h: Don't include memory.h anymore even if it were available.
    
    It quite probably was never needed, that is, any system where memory.h
    was required likely couldn't compile XZ Utils for other reasons anyway.
    
    XZ Utils 5.2.6 and later source packages were generated using
    Autoconf 2.71 which no longer defines HAVE_MEMORY_H. So the code
    being removed is no longer used anyway.

 src/common/sysdefs.h | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

commit 5e34774c31d1b7509b5cb77a3be9973adec59ea0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-10 08:29:32 +0200

    CMake: Fix appending to CMAKE_RC_FLAGS.
    
    It's a string, not a list. It only worked when the variable was empty.
    
    Thanks to Iouri Kharon.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 6e652ceb18c615c578c869db300fa0756788b4e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-10 00:33:14 +0200

    Windows: Update INSTALL-MSVC.txt to recommend CMake over project files.

 windows/INSTALL-MSVC.txt | 19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

commit 6b117d3b1fe91eb26d533ab16a2e552f84148d47
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-09 23:41:25 +0200

    CMake: Fix windres issues again.
    
    At least on some systems, GNU windres needs --use-temp-file
    in addition to the \x20 hack to avoid spaces in the command line
    argument. Hovever, that \x20 syntax is broken with llvm-windres
    version 15.0.0 (results in "XZx20Utils") but luckily it works
    with a regular space. Thus it is best to limit the workarounds
    to GNU toolchain on Windows.

 CMakeLists.txt | 35 +++++++++++++++++++++++------------
 1 file changed, 23 insertions(+), 12 deletions(-)

commit 0c210ca7f489e971e94e1ddc72b0b0806e3c7935
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-06 22:53:38 +0200

    Tests: test_filter_flags: Clean up minor issues.
    
    Here are the list of the most significant issues addressed:
    - Avoid using internal common.h header. It's not good to copy the
    constants like this but common.h cannot be included for use outside
    of liblzma. This is the quickest thing to do that could be fixed later.
    
    - Omit the INIT_FILTER macro. Initialization should be done with just
    regular designated initializers.
    
    - Use start_offset = 257 for BCJ tests. It demonstrates that Filter
    Flags encoder and decoder don't validate the options thoroughly.
    257 is valid only for the x86 filter. This is a bit silly but
    not a significant problem in practice because the encoder and
    decoder initialization functions will catch bad alignment still.
    Perhaps this should be fixed but it's not urgent and doesn't need
    to be in 5.4.x.
    
    - Various tweaks to comments such as filter id -> Filter ID

 tests/test_filter_flags.c | 153 +++++++++++++++++++++++-----------------------
 1 file changed, 78 insertions(+), 75 deletions(-)

commit 5c9fdd3bf53a9655f5eb2807d662b3af0d5e1865
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-29 23:33:33 +0800

    Tests: Refactors existing filter flags tests.
    
    Converts the existing filter flags tests into tuktests.

 tests/test_filter_flags.c | 655 ++++++++++++++++++++++++++++++++--------------
 1 file changed, 457 insertions(+), 198 deletions(-)

commit 36edc65ab4cf10a131f239acbd423b4510ba52d5
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-09 12:22:05 +0200

    liblzma: CLMUL CRC64: Workaround a bug in MSVC (VS2015-2022).
    
    I haven't tested with MSVC myself and there doesn't seem to be
    information about the problem online, so I'm relying on the bug report.
    
    Thanks to Iouri Kharon for the bug report and the patch.

 src/liblzma/check/crc64_fast.c | 6 ++++++
 1 file changed, 6 insertions(+)

commit 790a12a95a78ff82d8c6d4efe3b789851ca9470d
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-09 11:27:24 +0200

    CMake: Fix a copypaste error in xzdec Windows resource file handling.
    
    It was my mistake. Thanks to Iouri Kharon for the bug report.

 CMakeLists.txt | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 0e1545fea39c0514c7b7032a0a3592a9a33d2848
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-08 00:32:29 +0200

    Tests: tuktest.h: Support tuktest_malloc(0).
    
    It's not needed in XZ Utils at least for now. It's good to support
    it still because if such use is needed later, it wouldn't be
    caught on GNU/Linux since malloc(0) from glibc returns non-NULL.

 tests/tuktest.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 69d5d78c6904668eb09a131da86276beec3281f8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-08 00:24:23 +0200

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit dd38655f80c113c9db73b9ed370dc900e1c4dc41
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-07 21:57:11 +0200

    CMake: Update cmake_minimum_required from 3.13...3.16 to 3.13...3.25.
    
    The changes listed on cmake-policies(7) for versions 3.17 to 3.25
    shouldn't affect this project.

 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a890a637bee9193d5b690aefa9a59eba5b8532ae
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-07 19:50:35 +0200

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit 6e38e595dd56ac1800478cef1f6f754d0eba0d2e
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-07 19:50:03 +0200

    CMake/Windows: Add resource files to xz.exe and xzdec.exe.
    
    The command line tools cannot be built with MSVC for now but
    they can be built with MinGW-w64.
    
    Thanks to Iouri Kharon for the bug report and the original patch.

 CMakeLists.txt | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

commit 443dfebced041adc88f10d824188eeef5b5821a9
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-07 19:48:52 +0200

    CMake/Windows: Add a workaround for windres from GNU binutils.
    
    Thanks to Iouri Kharon for the bug report and the original patch.

 CMakeLists.txt | 21 ++++++++++++++++++++-
 1 file changed, 20 insertions(+), 1 deletion(-)

commit ceb805011747d04a915f3f39e4bed9eed151c634
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-07 19:31:15 +0200

    Build: Require that _mm_set_epi64x() is usable to enable CLMUL support.
    
    VS2013 doesn't have _mm_set_epi64x() so this way CLMUL gets
    disabled with VS2013.
    
    Thanks to Iouri Kharon for the bug report.

 CMakeLists.txt | 3 ++-
 configure.ac   | 8 ++++++--
 2 files changed, 8 insertions(+), 3 deletions(-)

commit 8d372bd94066b1a5b0570b2550f83c2868486adf
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-07 21:05:15 +0800

    CI/CD: Split CMake Linux and MacOS build phase to build and test.
    
    The phase split was only done for Autotools before, so should also
    apply to CMake.

 .github/workflows/ci.yml | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit 747c7f2b34bd498f6702c6875500a26b06201772
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-07 11:16:55 +0800

    CI/CD: Reduce job runners to 4 instead of using matrix strategy.
    
    The old version used too many runners that resulted in unnecessary
    dependency downloads. Now, the runners are reused for the different
    configurations for each OS and build system.

 .github/workflows/ci.yml | 95 ++++++++++++++++++++++++++++++++++++++++++------
 1 file changed, 83 insertions(+), 12 deletions(-)

commit 4de35fd6b58d46fc887c78faf163f6a37b790c45
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-07 10:07:20 +0800

    CI/CD: Add new -p (PHASE) argument to ci_build.sh
    
    The new PHASE argument can be build, test, or all. all is the default.
    This way, the CI/CD script can differentiate between the build and test
    phases to make it easier to track down errors when they happen.

 build-aux/ci_build.sh | 140 +++++++++++++++++++++++++++-----------------------
 1 file changed, 76 insertions(+), 64 deletions(-)

commit 6fd39664de47801e670a16617863196bfbde4755
Merge: 78e0561d fc0c7884
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-07 00:10:50 +0800

    Merge pull request #7 from tukaani-project/tuktest_index_hash
    
    Tuktest index hash

commit fc0c788469159f634f09ff23c8cef6925c91da57
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-06 17:58:48 +0200

    Tests: test_index_hash: Add an assert_uint_eq().

 tests/test_index_hash.c | 3 +++
 1 file changed, 3 insertions(+)

commit d550304f5343b3a082da265107cd820e0d81dc71
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-06 17:55:06 +0200

    Tests: test_index_hash: Fix a memory leak.

 tests/test_index_hash.c | 2 ++
 1 file changed, 2 insertions(+)

commit 02608f74ea1f2d2d56585711ff241c34b4ad0937
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-06 17:53:03 +0200

    Tests: test_index_hash: Don't treat pointers as booleans.

 tests/test_index_hash.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 056766c8601a3808bea1761f6cc833197a35a3e0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-06 17:51:41 +0200

    Tests: test_index_hash: Fix a typo in a comment.

 tests/test_index_hash.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 873e684028ba9738f071c5236db7d452ed797b4c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-06 17:44:29 +0200

    Tests: test_index_hash: Avoid the variable name "index".
    
    It can trigger warnings from -Wshadow on some systems.

 tests/test_index_hash.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit d1f24c35874eeba8432d75aa77b06c50375ed937
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-06 17:35:50 +0200

    Tests: test_index_hash: Use the word "Record" instead of "entry".

 tests/test_index_hash.c | 102 ++++++++++++++++++++++++------------------------
 1 file changed, 51 insertions(+), 51 deletions(-)

commit b93f7c5cbb02b42024ac866fc0af541de3d816e2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-06 17:35:05 +0200

    Tests: test_index_hash: Tweak comments and style.
    
    The words defined in the .xz file format specification
    begin with capital letter to emphasize that they have
    a specific meaning.

 tests/test_index_hash.c | 62 ++++++++++++++++++++++++++-----------------------
 1 file changed, 33 insertions(+), 29 deletions(-)

commit c48b24fc06d98569adb72f13c2e8e5ff30bb8036
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-06 17:17:37 +0200

    Tests: test_index_hash: Use INDEX_INDICATOR constant instead of 0.

 tests/test_index_hash.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 78e0561dfebaa9d5e34558de537efcda890e0629
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-06 20:43:31 +0800

    Style: Change #if !defined() to #ifndef in mythread.h.

 src/common/mythread.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e834e1e934ed0af673598d8c0c34afb2af56bee0
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-06 20:35:55 +0800

    Build: Add missing stream_decoder_mt.c to .vcxproj files.
    
    The line in the .vcxproj files for building with was missing in 5.4.0.
    Thank to Hajin Jang for reporting the issue.

 windows/vs2013/liblzma.vcxproj     | 1 +
 windows/vs2013/liblzma_dll.vcxproj | 1 +
 windows/vs2017/liblzma.vcxproj     | 1 +
 windows/vs2017/liblzma_dll.vcxproj | 1 +
 windows/vs2019/liblzma.vcxproj     | 1 +
 windows/vs2019/liblzma_dll.vcxproj | 1 +
 6 files changed, 6 insertions(+)

commit 84f9687cbae972c2c342e10bf69f8ec8f70ae111
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-05 20:57:25 +0800

    liblzma: Remove common.h include from common/index.h.
    
    common/index.h is needed by liblzma internally and tests. common.h will
    include and define many things that are not needed by the tests. Also,
    this prevents include order problems because common.h will redefine
    LZMA_API resulting in a warning.

 src/liblzma/common/index.c                 | 1 +
 src/liblzma/common/index.h                 | 9 +++++++--
 src/liblzma/common/index_decoder.h         | 1 +
 src/liblzma/common/stream_buffer_encoder.c | 1 +
 4 files changed, 10 insertions(+), 2 deletions(-)

commit 7657ce1c3c4abff7560336a7b687d98e0e2bd14f
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-04 22:40:54 +0200

    Update THANKS.

 THANKS | 1 +
 1 file changed, 1 insertion(+)

commit aafd67fba045ab99683971263a5a26fb2a6e8ce2
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-04 18:40:28 +0200

    Tests: Adjust style in test_compress.sh.

 tests/test_compress.sh | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

commit 52380678f42364daa4510f92f6d3b18ec98c3638
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-04 23:58:58 +0800

    Tests: Replace non portable shell parameter expansion
    
    The shell parameter expansion using # and ## is not supported in
    Solaris 10 Bourne shell (/bin/sh). Even though this is POSIX, it is not fully
    portable, so we should avoid it.

 tests/create_compress_files.c          |  2 +-
 tests/test_compress.sh                 | 20 +++++++++++++-------
 tests/test_compress_prepared_bcj_sparc |  2 +-
 tests/test_compress_prepared_bcj_x86   |  2 +-
 4 files changed, 16 insertions(+), 10 deletions(-)

commit d0eb345bb7d148a62883ee299adec2b74a0f6f3b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-03 21:02:38 +0800

    Translations: Add Korean translation of man pages.
    
    Thanks to Seong-ho Cho

 po4a/ko.po     | 5552 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 po4a/po4a.conf |    2 +-
 2 files changed, 5553 insertions(+), 1 deletion(-)

commit c4145978d95ebf1690c778d354e15f7c2823d7a8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-03 20:47:27 +0800

    Translations: Update the Esperanto translation.

 po/eo.po | 620 ++++++++++++++++++++++++++++++++++-----------------------------
 1 file changed, 332 insertions(+), 288 deletions(-)

commit 4103a2e78ac60b00c888485cd967a5fe5d1b917c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-02 17:20:47 +0200

    Bump version and soname for 5.5.0alpha.
    
    5.5.0alpha won't be released, it's just to mark that
    the branch is not for stable 5.4.x.
    
    Once again there is no API/ABI stability for new features
    in devel versions. The major soname won't be bumped even
    if API/ABI of new features breaks between devel releases.

 src/liblzma/Makefile.am        | 2 +-
 src/liblzma/api/lzma/version.h | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 73c9e6d6b970ccc3d5ad61dcaa21cba050e5df0a
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2023-01-02 17:05:07 +0200

    Build: Fix config.h comments.

 configure.ac          | 2 +-
 m4/tuklib_progname.m4 | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit bb740e3b117f1a3c65152d01e5755523a908ecb1
Author: Jia Tan <jiat0218@gmail.com>
Date:   2023-01-02 22:33:48 +0800

    Build: Only define HAVE_PROGRAM_INVOCATION_NAME if it is set to 1.
    
    HAVE_DECL_PROGRAM_INVOCATION_NAME is renamed to
    HAVE_PROGRAM_INVOCATION_NAME. Previously,
    HAVE_DECL_PROGRAM_INVOCATION_NAME was always set when
    building with autotools. CMake would only set this when it was 1, and the
    dos/config.h did not define it. The new macro definition is consistent
    across build systems.

 cmake/tuklib_progname.cmake  | 5 ++---
 m4/tuklib_progname.m4        | 5 ++++-
 src/common/tuklib_progname.c | 2 +-
 src/common/tuklib_progname.h | 2 +-
 4 files changed, 8 insertions(+), 6 deletions(-)

commit 064cd385a716abc78d93a3612411a82d69ceb221
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-29 00:30:52 +0800

    Adds test_index_hash to .gitignore.

 .gitignore | 1 +
 1 file changed, 1 insertion(+)

commit 3959162baec074511d83ba0fec1284c3ed724799
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-29 00:25:18 +0800

    Tests: Creates test_index_hash.c
    
    Tests all API functions exported from index_hash.h. Does not have a
    dedicated test for lzma_index_hash_end.

 CMakeLists.txt          |   2 +
 tests/Makefile.am       |   3 +
 tests/test_index_hash.c | 379 ++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 384 insertions(+)

commit f16e12d5e755d371247202fcccbcccd1ec16b2cf
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-08-17 20:20:16 +0800

    liblzma: Add NULL check to lzma_index_hash_append.
    
    This is for consistency with lzma_index_append.

 src/liblzma/common/index_hash.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 203b008eb220208981902e0db541c02d1c1c9f5e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-08-17 17:59:51 +0800

    liblzma: Replaced hardcoded 0x0 index indicator byte with macro

 src/liblzma/common/index.h             | 3 +++
 src/liblzma/common/index_decoder.c     | 2 +-
 src/liblzma/common/index_encoder.c     | 2 +-
 src/liblzma/common/index_hash.c        | 2 +-
 src/liblzma/common/stream_decoder.c    | 3 ++-
 src/liblzma/common/stream_decoder_mt.c | 2 +-
 6 files changed, 9 insertions(+), 5 deletions(-)

commit dfecda875211f737d0db92dc1d3c58a3a2afb0c0
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2022-12-30 20:10:08 +0200

    Tests: test_check: Test corner cases of CLMUL CRC64.

 tests/test_check.c | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

commit ce96bb20435212fe797d6d84738fb9fd4ea13cc7
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2022-12-30 19:36:49 +0200

    Tests: Clarify a comment in test_lzip_decoder.c.

 tests/test_lzip_decoder.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit 2fcba17fc4d7eda8fc60567169cf2a0e6fcfb2f8
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-29 01:55:19 +0800

    xz: Includes <time.h> and <sys/time.h> conditionally in mytime.c.
    
    Previously, mytime.c depended on mythread.h for <time.h> to be included.

 src/xz/mytime.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit f82294c8318a7a0990583d51ac5c7de682ad36ef
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-29 01:15:27 +0800

    liblzma: Includes sys/time.h conditionally in mythread
    
    Previously, <sys/time.h> was always included, even if mythread only used
    clock_gettime. <time.h> is still needed even if clock_gettime is not used
    though because struct timespec is needed for mythread_condtime.

 src/common/mythread.h | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit 74dae7d30091e906d6a92a57952dea4354473f9b
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-29 01:10:53 +0800

    Build: No longer require HAVE_DECL_CLOCK_MONOTONIC to always be set.
    
    Previously, if threading was enabled HAVE_DECL_CLOCK_MONOTONIC would always
    be set to 0 or 1. However, this macro was needed in xz so if xz was not
    built with threading and HAVE_DECL_CLOCK_MONOTONIC was not defined but
    HAVE_CLOCK_GETTIME was, it caused a warning during build. Now,
    HAVE_DECL_CLOCK_MONOTONIC has been renamed to HAVE_CLOCK_MONOTONIC and
    will only be set if it is 1.

 CMakeLists.txt        | 8 +++-----
 configure.ac          | 5 ++++-
 src/common/mythread.h | 4 ++--
 src/xz/mytime.c       | 5 ++---
 4 files changed, 11 insertions(+), 11 deletions(-)

commit 7339e39dc060df6eda74a2c5b69961befc3d5d24
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-28 01:14:07 +0800

    Translations: Add Ukrainian translations of man pages.
    
    Thanks to Yuri Chornoivan

 po4a/po4a.conf |    2 +-
 po4a/uk.po     | 3676 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 3677 insertions(+), 1 deletion(-)

commit 9f05c27a58ce8cd7803079aa295e41c24665ce6e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-23 00:34:48 +0800

    CI/CD: Create initial version of CI/CD workflow.
    
    The CI/CD workflow will only execute on Ubuntu and MacOS latest version.
    The workflow will attempt to build with autotools and CMake and execute
    the tests. The workflow will run for all pull requests and pushes done
    to the master branch.

 .github/workflows/ci.yml |  72 ++++++++++++++++++++++++
 build-aux/ci_build.sh    | 141 +++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 213 insertions(+)

commit 1275ebfba74230dbd028049141423c79c8b83b8f
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-22 23:14:53 +0800

    liblzma: Update documentation for lzma_filter_encoder.

 src/liblzma/common/filter_encoder.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit 7c9ff5f1667a16733163b75dfd4b509662c387f4
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-21 21:12:03 +0800

    Tests: Adds lzip decoder tests

 .gitignore                |   1 +
 tests/Makefile.am         |   2 +
 tests/test_lzip_decoder.c | 471 ++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 474 insertions(+)

commit 799ead162de63b8400733603d3abcd2e1977bdca
Author: Jia Cheong Tan <jiat0218@gmail.com>
Date:   2022-12-20 22:05:21 +0800

    Doxygen: Update .gitignore for generating docs for in source build.
    
    In source builds are not recommended, but we should still ignore
    the generated artifacts.

 .gitignore | 2 ++
 1 file changed, 2 insertions(+)

commit 5f7ce42a16b1e86ca8408b5c670c25e2a12acc4e
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-20 20:46:44 +0800

    liblzma: Fix lzma_microlzma_encoder() return value.
    
    Using return_if_error on lzma_lzma_lclppb_encode was improper because
    return_if_error is expecting an lzma_ret value, but
    lzma_lzma_lclppb_encode returns a boolean. This could result in
    lzma_microlzma_encoder, which would be misleading for applications.

 src/liblzma/common/microlzma_encoder.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 8ace358d65059152d9a1f43f4770170d29d35754
Author: Jia Tan <jiat0218@gmail.com>
Date:   2022-12-16 20:58:55 +0800

    CMake: Update .gitignore for CMake artifacts from in source build.
    
    In source builds are not recommended, but we can make it easier
    by ignoring the generated artifacts from CMake.

 .gitignore | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

commit 8fd225a2c149f30aeac377e68eb5abf6b28300ad
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2022-12-16 18:30:02 +0200

    liblzma: Update authors list in arm64.c.

 src/liblzma/simple/arm64.c | 1 +
 1 file changed, 1 insertion(+)

commit b69da6d4bb6bb11fc0cf066920791990d2b22a06
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   2022-12-13 20:37:17 +0200

    Bump version to 5.4.0 and soname to 5.4.0.

 src/liblzma/Makefile.am         | 2 +-
 src/liblzma/api/lzma/version.h  | 6 +++---
 src/liblzma/liblzma_generic.map | 2 +-
 src/liblzma/liblzma_linux.map   | 2 +-
 4 files changed, 6 insertions(+), 6 deletions(-)
