.\"***************************************************************************
.\" Copyright 2018-2023,2024 Thomas E. Dickey                                *
.\" Copyright 1998-2006,2010 Free Software Foundation, Inc.                  *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, to any person obtaining a  *
.\" copy of this software and associated documentation files (the            *
.\" "Software"), to deal in the Software without restriction, including      *
.\" without limitation the rights to use, copy, modify, merge, publish,      *
.\" distribute, distribute with modifications, sublicense, and/or sell       *
.\" copies of the Software, and to permit persons to whom the Software is    *
.\" furnished to do so, subject to the following conditions:                 *
.\"                                                                          *
.\" The above copyright notice and this permission notice shall be included  *
.\" in all copies or substantial portions of the Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained in this notice, the name(s) of the above copyright   *
.\" holders shall not be used in advertising or otherwise to promote the     *
.\" sale, use or other dealings in this Software without prior written       *
.\" authorization.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_scroll.3x,v 1.43 2024/04/20 18:54:36 tom Exp $
.TH curs_scroll 3X 2024-04-20 "ncurses @NCURSES_MAJOR@.@NCURSES_MINOR@" "Library calls"
.ie \n(.g \{\
.ds `` \(lq
.ds '' \(rq
.\}
.el \{\
.ie t .ds `` ``
.el   .ds `` ""
.ie t .ds '' ''
.el   .ds '' ""
.\}
.
.de bP
.ie n  .IP \(bu 4
.el    .IP \(bu 2
..
.SH NAME
\fB\%scroll\fP,
\fB\%scrl\fP,
\fB\%wscrl\fP \-
scroll a \fIcurses\fR window
.SH SYNOPSIS
.nf
\fB#include <curses.h>
.PP
\fBint scroll(WINDOW *\fIwin\fP);
.PP
\fBint scrl(int \fIn\fP);
\fBint wscrl(WINDOW *\fIwin\fP, int \fIn\fP);
.fi
.SH DESCRIPTION
\fBscroll\fP scrolls the given window up one line.
That is,
every visible line we might number
.I i
becomes line
.IR i "\-1."
The text of the top line in the window disappears and the bottom line
is populated with blank characters;
see \fB\%bkgd\fP(3X) or \fB\%bkgrnd\fP(3X).
As an optimization,
if the scrolling region of the window is the entire screen,
the physical screen may be scrolled at the same time;
see \fB\%curscr\fP(3X).
.PP
\fB\%scrl\fP and \fB\%wscrl\fP scroll
.B \%stdscr
or the specified window up or down depending on the sign of
.IR n .
.bP
For positive
.IR n ,
line \fIi\fP+\fIn\fP becomes \fIi\fP (scrolling up);
.bP
for negative
.IR n ,
line \fIi\fP-\fIn\fP becomes \fIi\fP (scrolling down).
.PP
The cursor does not move.
These functions perform no operation unless scrolling is enabled for the
window via \fB\%scrollok\fP(3X).
.SH "RETURN VALUE"
These functions return
.B ERR
upon failure and
.B OK
upon success.
.PP
.I \%ncurses
returns \fBERR\fP if scrolling is not enabled in the window,
for example with \fB\%scrollok\fP(3X),
or if the
.I \%WINDOW
pointer is null.
.SH NOTES
Unusually,
there is no \fB\%wscroll\fP function;
\fBscroll\fP behaves as one would expect \fB\%wscroll\fP to,
accepting a \fI\%WINDOW\fP pointer argument.
.PP
\fB\%scrl\fP and \fB\%scroll\fP may be implemented as macros.
.SH PORTABILITY
X/Open Curses,
Issue 4 describes these functions.
It defines no error conditions.
.PP
SVr4 specifies only
\*(``an integer value other than \fBERR\fP\*('' as a successful return
value.
.PP
SVr4 indicates that the optimization of physically scrolling immediately
if the scroll region is the entire screen \*(``is\*('' performed,
not \*(``may be\*('' performed.
.I \%ncurses
deliberately does not guarantee that this will occur,
to leave open the possibility of smarter optimization of multiple scroll
actions on the next update.
.PP
Neither SVr4
.I curses
nor X/Open Curses specify whether the current attribute or current color
pair of blanks generated by the scroll function are zeroed.
.I \%ncurses
does so.
.SH SEE ALSO
\fB\%curses\fP(3X),
\fB\%curs_outopts\fP(3X)
