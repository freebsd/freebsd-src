.\" Copyright (c) 2011 Kai Wang
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $Id: dwarf_get_fde_info_for_reg3.3 3644 2018-10-15 19:55:01Z jkoshy $
.\"
.Dd November 9, 2011
.Dt DWARF_GET_FDE_INFO_FOR_REG3 3
.Os
.Sh NAME
.Nm dwarf_get_fde_info_for_reg3
.Nd retrieve register rule
.Sh LIBRARY
.Lb libdwarf
.Sh SYNOPSIS
.In libdwarf.h
.Ft int
.Fo dwarf_get_fde_info_for_reg3
.Fa "Dwarf_Fde fde"
.Fa "Dwarf_Half table_column"
.Fa "Dwarf_Addr pc"
.Fa "Dwarf_Small *type"
.Fa "Dwarf_Signed *offset_relevant"
.Fa "Dwarf_Signed *register_num"
.Fa "Dwarf_Signed *offset_or_block_len"
.Fa "Dwarf_Ptr *block_ptr"
.Fa "Dwarf_Addr *row_pc"
.Fa "Dwarf_Error *error"
.Fc
.Sh DESCRIPTION
Function
.Fn dwarf_get_fde_info_for_reg3
retrieves a register rule from the register rule table associated with
a given FDE descriptor, given a program counter address and rule
column number.
.Pp
Argument
.Ar fde
should reference a valid DWARF FDE descriptor.
.Pp
Arugment
.Ar table_column
should hold the column number of the register rule desired.
.Pp
Argument
.Ar pc
should hold the program counter address to be used to locate the
desired register rule row.
.Pp
On successful execution,
.Fn dwarf_get_fde_info_for_reg3
stores information about the register rule found into the locations
pointed to by the arguments
.Ar type ,
.Ar offset_relevant ,
.Ar register_num ,
.Ar offset_or_block_len ,
.Ar block_ptr
and
.Ar row_pc .
.Pp
Argument
.Ar type
should point to a location which will hold the type code of the
register rule found.
The returned value is one of the
.Dv DW_EXPR_*
contants defined in the header file
.In libdwarf.h .
.Pp
If there is an offset value associated with the register rule,
the location pointed to by argument
.Ar offset_relevant
will be set to 1.
.Pp
Argument
.Ar register_num
should point to a location which will hold the register number associated
with the register rule.
.Pp
If the register rule is of type
.Dv DW_EXPR_OFFSET
or
.Dv DW_EXPR_VAL_OFFSET ,
the location pointed to by argument
.Ar offset_or_block_len
will be set to the offset value associated with the register rule,
or to 0 if the register rule does not have an offset value.
If the type code is
.Dv DW_EXPR_EXPRESSION
or
.Dv DW_EXPR_VAL_EXPRESSION ,
the location pointed to by argument
.Ar offset_or_block_len
will be set to the length in bytes of the DWARF expression block
associated with the register rule.
.Pp
Argument
.Ar block_ptr
should point to a location which will be set to a pointer to the
content of the DWARF expression block associated with the register
rule.
.Pp
Argument
.Ar row_pc
should point to a location which will be set to the lowest program
counter address associated with the register rule found.
.Pp
If argument
.Ar err
is not NULL, it will be used to return an error descriptor in case
of an error.
.Sh RETURN VALUES
Function
.Fn dwarf_get_fde_info_for_reg3
returns
.Dv DW_DLV_OK
when it succeeds.
In case of an error, it returns
.Dv DW_DLV_ERROR
and sets the argument
.Ar err .
.Sh EXAMPLES
To retrieve the register rules at column 3 from a rule table
associated with a FDE descriptor:
.Bd -literal -offset indent
Dwarf_Fde fde;
Dwarf_Off fde_offset, cie_offset;
Dwarf_Unsigned func_len, fde_length;
Dwarf_Signed cie_index, offset_relevant, register_num;
Dwarf_Signed offset_or_block_len;
Dwarf_Addr low_pc, row_pc;
Dwarf_Ptr fde_addr, block_ptr;
Dwarf_Small type;
Dwarf_Error de;

/* ... assuming `fde` references a valid FDE descriptor... */
if (dwarf_get_fde_range(fde, &low_pc, &func_len, &fde_addr,
    &fde_length, &cie_offset, &cie_index, &fde_offset,
    &de) != DW_DLV_OK)
	errx(EXIT_FAILURE, "dwarf_get_fde_range failed: %s",
	    dwarf_errmsg(de));

/* Iterate all the table rows. */
for (pc = low_pc; pc < low_pc + func_len; pc++) {
	if (dwarf_get_fde_info_for_reg3(fde, 3, pc, &type,
	    &offset_relevant, &register_num, &offset_or_block_len,
	    &block_ptr, &row_pc, &de) != DW_DLV_OK) {
		warnx("dwarf_get_fde_info_for_reg3 failed: %s",
		    dwarf_errmsg(de));
		continue;
	}
	/* ... use the retrieved register rule ... */
}
.Ed
.Sh ERRORS
Function
.Fn dwarf_get_fde_info_for_reg3
can fail with:
.Bl -tag -width ".Bq Er DW_DLE_FRAME_TABLE_COL_BAD"
.It Bq Er DW_DLE_ARGUMENT
One of the arguments
.Ar block_ptr ,
.Ar fde ,
.Ar offset_or_block_len ,
.Ar offset_relevant ,
.Ar register_num ,
.Ar row_pc ,
or
.Ar type
was NULL.
.It Bq Er DW_DLE_FRAME_TABLE_COL_BAD
The column number provided in argument
.Ar table_column
was too large.
.It Bq Er DW_DLE_PC_NOT_IN_FDE_RANGE
The program counter value provided in argument
.Ar pc
did not fall in the range covered by argument
.Ar fde .
.El
.Sh SEE ALSO
.Xr dwarf 3 ,
.Xr dwarf_get_fde_at_pc 3 ,
.Xr dwarf_get_fde_info_for_all_regs 3 ,
.Xr dwarf_get_fde_info_for_all_regs3 3 ,
.Xr dwarf_get_fde_info_for_cfa_reg3 3 ,
.Xr dwarf_get_fde_info_for_reg 3 ,
.Xr dwarf_get_fde_n 3 ,
.Xr dwarf_set_frame_cfa_value 3 ,
.Xr dwarf_set_frame_rule_initial_value 3 ,
.Xr dwarf_set_frame_rule_table_size 3 ,
.Xr dwarf_set_frame_same_value 3 ,
.Xr dwarf_set_frame_undefined_value 3
