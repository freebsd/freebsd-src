.\" Copyright (c) 2011 Kai Wang
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $Id: dwarf_get_fde_info_for_all_regs3.3 3644 2018-10-15 19:55:01Z jkoshy $
.\"
.Dd June 26, 2011
.Dt DWARF_GET_FDE_INFO_FOR_ALL_REGS3 3
.Os
.Sh NAME
.Nm dwarf_get_fde_info_for_all_regs3
.Nd retrieve register rule row
.Sh LIBRARY
.Lb libdwarf
.Sh SYNOPSIS
.In libdwarf.h
.Ft int
.Fo dwarf_get_fde_info_for_all_regs3
.Fa "Dwarf_Fde fde"
.Fa "Dwarf_Addr pc"
.Fa "Dwarf_Regtable3 *reg_table"
.Fa "Dwarf_Addr *row_pc"
.Fa "Dwarf_Error *err"
.Fc
.Sh DESCRIPTION
Function
.Fn dwarf_get_fde_info_for_all_regs3
retrieves a row from the register rule table associated with the given
FDE descriptor.
.Pp
Argument
.Ar fde
should reference a valid DWARF FDE descriptor.
.Pp
Argument
.Ar pc
should hold the program counter address to be used to locate the
desired table row.
.Pp
Argument
.Ar reg_table
should point to a
.Vt Dwarf_Regtable3
descriptor which will hold the returned table row of register rules.
The
.Vt Dwarf_Regtable3
descriptor is defined in the header file
.In libdwarf.h :
.Bd -literal -offset indent
typedef struct {
	Dwarf_Small	dw_offset_relevant;
	Dwarf_Small	dw_value_type;
	Dwarf_Half	dw_regnum;
	Dwarf_Unsigned	dw_offset_or_block_len;
	Dwarf_Ptr	dw_block_ptr;
} Dwarf_Regtable_Entry3;

typedef struct {
	Dwarf_Regtable_Entry3	rt3_cfa_rule;
	Dwarf_Half		rt3_reg_table_size;
	Dwarf_Regtable_Entry3	*rt3_rules;
} Dwarf_Regtable3;
.Ed
.Pp
The
.Va rt3_reg_table_size
field specifies the maximum number of register rule columns to be
returned, and should be set by the application before calling the
function.
The
.Va rt3_rules
field should point to a memory arena allocated by the application with
space for at least
.Vt rt3_reg_table_size
descriptors of type
.Vt Dwarf_Regtable_Entry3 .
.Pp
On a successful execution of this function, the
.Va rt3_cfa_rule
field will be set to the CFA register rule associated with the table
row, and the
.Va rt3_rules
array will hold the returned register rules contained in the table row.
.Pp
For each register rule descriptor returned,
the
.Va dw_offset_relevant
field will be set to 1 if the register rule has a offset value,
the
.Va dw_value_type
field will be set to the type code of the register rule and the
.Va dw_regnum
field will be set to the register number associated with the register rule.
If the register rule is of type
.Dv DW_EXPR_OFFSET
or
.Dv DW_EXPR_VAL_OFFSET ,
the
.Va dw_offset_or_block_len
field will be set to the offset value associated with the register rule.
If the type is
.Dv DW_EXPR_EXPRESSION
or
.Dv DW_EXPR_VAL_EXPRESSION ,
the
.Va dw_offset_or_block_len
field will be set to the length in bytes of the DWARF expression block
associated with the register rule.
The
.Va dw_block_ptr
field will be set to a pointer to the content of the DWARF expression block
associated with the register rule.
.Pp
Argument
.Ar row_pc
should point to a location which will be set to the lowest program
counter address associated with the table row.
.Pp
If argument
.Ar err
is not NULL, it will be used to store error information in case of an
error.
.Sh RETURN VALUES
Function
.Fn dwarf_get_fde_info_for_all_regs3
returns
.Dv DW_DLV_OK
when it succeeds.
In case of an error, it returns
.Dv DW_DLV_ERROR
and sets the argument
.Ar err .
.Sh ERRORS
Function
.Fn dwarf_get_fde_info_for_all_regs3
can fail with:
.Bl -tag -width ".Bq Er DW_DLE_PC_NOT_IN_FDE_RANGE"
.It Bq Er DW_DLE_ARGUMENT
One of the arguments
.Ar fde ,
.Ar reg_table
or
.Ar row_pc
was NULL.
.It Bq Er DW_DLE_PC_NOT_IN_FDE_RANGE
The program counter value provided in argument
.Ar pc
did not fall in the range covered by argument
.Ar fde .
.El
.Sh SEE ALSO
.Xr dwarf 3 ,
.Xr dwarf_get_fde_at_pc 3 ,
.Xr dwarf_get_fde_info_for_all_regs 3 ,
.Xr dwarf_get_fde_info_for_cfa_reg3 3 ,
.Xr dwarf_get_fde_info_for_reg 3 ,
.Xr dwarf_get_fde_info_for_reg3 3 ,
.Xr dwarf_get_fde_n 3 ,
.Xr dwarf_set_frame_cfa_value 3 ,
.Xr dwarf_set_frame_rule_initial_value 3 ,
.Xr dwarf_set_frame_rule_table_size 3 ,
.Xr dwarf_set_frame_same_value 3 ,
.Xr dwarf_set_frame_undefined_value 3
