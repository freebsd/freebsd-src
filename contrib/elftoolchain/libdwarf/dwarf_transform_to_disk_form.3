.\" Copyright (c) 2011 Kai Wang
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $Id: dwarf_transform_to_disk_form.3 3640 2018-10-14 14:09:13Z jkoshy $
.\"
.Dd August 25, 2011
.Dt DWARF_TRANSFORM_TO_DISK_FORM 3
.Os
.Sh NAME
.Nm dwarf_transform_to_disk_form
.Nd transform DWARF information into byte streams
.Sh LIBRARY
.Lb libdwarf
.Sh SYNOPSIS
.In libdwarf.h
.Ft Dwarf_Signed
.Fo dwarf_transform_to_disk_form
.Fa "Dwarf_P_Debug dbg"
.Fa "Dwarf_Error *err"
.Fc
.Sh DESCRIPTION
Function
.Fn dwarf_transform_to_disk_form
transforms the DWARF information gathered by the producer into
byte streams for the application to write out as ELF sections.
If the flag
.Dv DW_DLC_SYMBOLIC_RELOCATIONS
is set on the producer, the function will also generate the associated
relocation arrays.
.Pp
Argument
.Ar dbg
should reference a DWARF producer instance allocated using
.Xr dwarf_producer_init 3
or
.Xr dwarf_producer_init_b 3 .
.Pp
If argument
.Ar err
is not NULL, it will be used to store error information in case
of an error.
.Pp
After a call to this function, the application can call the function
.Xr dwarf_get_section_bytes 3
to retrieve the byte streams for each ELF section.
If the flag
.Dv DW_DLC_SYMBOLIC_RELOCATIONS
was set on the descriptor, the application can also call the function
.Xr dwarf_get_relocation_info 3
to retrieve the generated relocation arrays.
.Sh RETURN VALUES
On success, function
.Fn dwarf_transform_to_disk_form
returns the total number of ELF sections generated.
In case of an error, function
.Fn dwarf_transform_to_disk_form
returns
.Dv DW_DLV_NOCOUNT
and sets the argument
.Ar err .
.Sh ERRORS
Function
.Fn dwarf_transform_to_disk_form
can fail with:
.Bl -tag -width ".Bq Er DW_DLE_ARGUMENT"
.It Bq Er DW_DLE_ARGUMENT
Argument
.Ar dbg
was NULL.
.It Bq Er DW_DLE_MEMORY
An out of memory condition was encountered during execution.
.El
.Sh SEE ALSO
.Xr dwarf 3 ,
.Xr dwarf_get_relocation_info 3 ,
.Xr dwarf_get_section_bytes 3 ,
.Xr dwarf_producer_init 3 ,
.Xr dwarf_producer_init_b 3
