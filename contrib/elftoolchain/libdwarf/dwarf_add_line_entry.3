.\" Copyright (c) 2011 Kai Wang
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $Id: dwarf_add_line_entry.3 3644 2018-10-15 19:55:01Z jkoshy $
.\"
.Dd June 30, 2013
.Dt DWARF_ADD_LINE_ENTRY 3
.Os
.Sh NAME
.Nm dwarf_add_line_entry
.Nd add a line number information entry to a producer instance
.Sh LIBRARY
.Lb libdwarf
.Sh SYNOPSIS
.In libdwarf.h
.Ft "Dwarf_Unsigned"
.Fo dwarf_add_line_entry
.Fa "Dwarf_P_Debug dbg"
.Fa "Dwarf_Unsigned filendx"
.Fa "Dwarf_Addr off"
.Fa "Dwarf_Unsigned lineno"
.Fa "Dwarf_Signed column"
.Fa "Dwarf_Bool is_stmt"
.Fa "Dwarf_Bool basic_block"
.Fa "Dwarf_Error *err"
.Fc
.Sh DESCRIPTION
Function
.Fn dwarf_add_line_entry
adds a line number information entry to a DWARF producer instance.
.Pp
Argument
.Ar dbg
should reference a DWARF producer instance allocated using
.Xr dwarf_producer_init 3
or
.Xr dwarf_producer_init_b 3 .
.Pp
Argument
.Ar filendx
specifies the index of the source file that contains the source line
in question.
Valid source file indices are those returned by the function
.Xr dwarf_add_file_decl 3 .
.Pp
Argument
.Ar off
specifies a relocatable program address.
The ELF symbol to be used
for relocation is set by a prior call to the function
.Xr dwarf_lne_set_address 3 .
.Pp
Argument
.Ar lineno
specifies the line number of the source line.
.Pp
Argument
.Ar column
specifies the column number within the source line.
.Pp
If the argument
.Ar is_stmt
is set to true, it indicates that the instruction at the address
specified by argument
.Ar off
is a recommended breakpoint location, i.e., the first instruction in
the instruction sequence generated by the source line.
.Pp
If the argument
.Ar basic_block
is set to true, it indicates that the instruction at the address
specified by argument
.Ar off
is the first instruction of a basic block.
.Pp
If argument
.Ar err
is not NULL, it will be used to store error information in case
of an error.
.Sh RETURN VALUES
On success, function
.Fn dwarf_add_line_entry
returns
.Dv DW_DLV_OK .
In case of an error, function
.Fn dwarf_add_line_entry
returns
.Dv DW_DLV_NOCOUNT
and sets the argument
.Ar err .
.Sh EXAMPLES
To add line number information to the producer instance, use:
.Bd -literal -offset indent
Dwarf_P_Debug dbg;
Dwarf_Error de;
Dwarf_Unsigned dir, filendx;

/* ... assume dbg refers to a DWARF producer instance ... */

dir = dwarf_add_directory_decl(dbg, "/home/foo", &de);
if (dir == DW_DLV_NOCOUNT)
	errx(EXIT_FAILURE, "dwarf_add_directory_decl failed: %s",
	    dwarf_errmsg(-1));

filendx = dwarf_add_file_decl(dbg, "bar.c", dir, 0, 1234, &de);
if (filendx == DW_DLV_NOCOUNT)
	errx(EXIT_FAILURE, "dwarf_add_file_decl failed: %s",
	    dwarf_errmsg(-1));

if (dwarf_lne_set_address(dbg, 0x4012b0, 12, &de) != DW_DLV_OK)
	errx(EXIT_FAILURE, "dwarf_lne_set_address failed: %s",
	    dwarf_errmsg(-1));

if (dwarf_add_line_entry(dbg, filendx, 10, 258, 0, 1, 1, &de) !=
    DW_DLV_OK)
	errx(EXIT_FAILURE, "dwarf_add_line_entry failed: %s",
	    dwarf_errmsg(-1));
.Ed
.Sh ERRORS
Function
.Fn dwarf_add_line_entry
can fail with:
.Bl -tag -width ".Bq Er DW_DLE_ARGUMENT"
.It Bq Er DW_DLE_ARGUMENT
Argument
.Ar dbg
was NULL.
.It Bq Er DW_DLE_ARGUMENT
The function
.Xr dwarf_lne_set_address 3
was not called before calling this function.
.It Bq Er DW_DLE_MEMORY
An out of memory condition was encountered during the execution of the
function.
.El
.Sh SEE ALSO
.Xr dwarf 3 ,
.Xr dwarf_add_directory_decl 3 ,
.Xr dwarf_add_file_decl 3 ,
.Xr dwarf_lne_end_sequence 3 ,
.Xr dwarf_lne_set_address 3 ,
.Xr dwarf_producer_init 3 ,
.Xr dwarf_producer_init_b 3
