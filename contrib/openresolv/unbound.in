#!/bin/sh
# Copyright (c) 2009-2016 Roy Marples
# All rights reserved

# unbound subscriber for resolvconf

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

unbound_insecure=

[ -f "@SYSCONFDIR@"/resolvconf.conf ] || exit 0
. "@SYSCONFDIR@/resolvconf.conf" || exit 1
[ -z "$unbound_conf" ] && exit 0
[ -z "$RESOLVCONF" ] && eval "$(@SBINDIR@/resolvconf -v)"
NL="
"

: ${unbound_pid:=/var/run/unbound.pid}
: ${unbound_service:=unbound}
newconf="# Generated by resolvconf$NL"

for d in $DOMAINS; do
	dn="${d%%:*}"
	ns="${d#*:}"
	case "$unbound_insecure" in
	[Yy][Ee][Ss]|[Tt][Rr][Uu][Ee]|[Oo][Nn]|1)
		newconf="$newconf${NL}server:$NL"
		newconf="$newconf	domain-insecure: \"$dn\"$NL"
		;;
	esac
	newconf="$newconf${NL}forward-zone:$NL	name: \"$dn\"$NL"
	while [ -n "$ns" ]; do
		newconf="$newconf	forward-addr: ${ns%%,*}$NL"
		[ "$ns" = "${ns#*,}" ] && break
		ns="${ns#*,}"
	done
done

if [ -n "$NAMESERVERS" ]; then
	newconf="$newconf${NL}forward-zone:$NL	name: \".\"$NL"
	for n in $NAMESERVERS; do
		newconf="$newconf	forward-addr: $n$NL"
	done
fi

# Try to ensure that config dirs exist
if type config_mkdirs >/dev/null 2>&1; then
	config_mkdirs "$unbound_conf"
else
	@SBINDIR@/resolvconf -D "$unbound_conf"
fi

restart_unbound()
{
	if [ -n "$unbound_restart" ]; then
		eval $unbound_restart
	elif [ -n "$RESTARTCMD" ]; then
		set -- ${unbound_service}
		eval "$RESTARTCMD"
	else
		@SBINDIR@/resolvconf -r ${unbound_service}
	fi
}

if [ ! -f "$unbound_conf" ] || \
	[ "$(cat "$unbound_conf")" != "$(printf %s "$newconf")" ]
then
	printf %s "$newconf" >"$unbound_conf"
	# If we can't sent a HUP then force a restart
	if [ -s "$unbound_pid" ]; then
		if ! kill -HUP $(cat "$unbound_pid") 2>/dev/null; then
			restart_unbound
		fi
	else
		restart_unbound
	fi
fi
