#!/bin/sh
# Copyright (c) 2007-2016 Roy Marples
# All rights reserved

# named subscriber for resolvconf

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

[ -f "@SYSCONFDIR@"/resolvconf.conf ] || exit 0
. "@SYSCONFDIR@/resolvconf.conf" || exit 1
[ -z "${named_zones}${named_options}" ] && exit 0
[ -z "$RESOLVCONF" ] && eval "$(@SBINDIR@/resolvconf -v)"
NL="
"

# Platform specific kludges
if [ -z "${named_service}${named_restart}" ] &&
   [ -d "$RCDIR" ] && ! [ -x "$RCDIR"/named ]
then
	if [ -x "$RCDIR"/bind9 ]; then
		# Debian and derivatives
		named_service=bind9
	elif [ -x "$RCDIR"/rc.bind ]; then
		# Slackware
		named_service=rc.bind
	fi
fi
: ${named_service:=named}

: ${named_pid:=/var/run/$named_service.pid}
[ -s "$named_pid" ] || named_pid=/var/run/$named_service/$named_service.pid
[ -s "$named_pid" ] || unset named_pid

newoptions="# Generated by resolvconf$NL"
newzones="$newoptions"

forward=
for n in $NAMESERVERS; do
	case "$forward" in
	*"$NL	$n;"*);;
	*) forward="$forward$NL	$n;";;
	esac
done
if [ -n "$forward" ]; then
	newoptions="${newoptions}forward first;${NL}forwarders {$forward${NL}};$NL"
fi

for d in $DOMAINS; do
	newzones="${newzones}zone \"${d%%:*}\" {$NL"
	newzones="$newzones	type forward;$NL"
	newzones="$newzones	forward first;$NL	forwarders {$NL"
	ns="${d#*:}"
	while [ -n "$ns" ]; do
		newzones="$newzones		${ns%%,*};$NL"
		[ "$ns" = "${ns#*,}" ] && break
		ns="${ns#*,}"
	done
	newzones="$newzones	};$NL};$NL"
done

# Try to ensure that config dirs exist
if type config_mkdirs >/dev/null 2>&1; then
	config_mkdirs "$named_options" "$named_zones"
else
	@SBINDIR@/resolvconf -D "$named_options" "$named_zones"
fi

# No point in changing files or reloading bind if the end result has not
# changed
changed=false
if [ -n "$named_options" ]; then
	if [ ! -f "$named_options" ] || \
		[ "$(cat "$named_options")" != "$(printf %s "$newoptions")" ]
	then
		printf %s "$newoptions" >"$named_options"
		changed=true
	fi
fi
if [ -n "$named_zones" ]; then
	if [ ! -f "$named_zones" ] || \
		[ "$(cat "$named_zones")" != "$(printf %s "$newzones")" ]
	then
		printf %s "$newzones" >"$named_zones"
		changed=true
	fi
fi

# named does not seem to work with SIGHUP which is a same
if $changed; then
	if [ -n "$named_restart" ]; then
		eval $named_restart
	elif [ -n "$RESTARTCMD" ]; then
		set -- ${named_service}
		eval "$RESTARTCMD"
	else
		@SBINDIR@/resolvconf -r ${named_service}
	fi
fi
