.\" Copyright (c) 2001, 2003 Kungliga Tekniska HÃ¶gskolan
.\" (Royal Institute of Technology, Stockholm, Sweden).
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" 3. Neither the name of the Institute nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" $Id$
.\"
.Dd August 14, 2003
.Dt ECALLOC 3
.Os HEIMDAL
.Sh NAME
.Nm ecalloc ,
.Nm emalloc ,
.Nm eread ,
.Nm erealloc ,
.Nm esetenv ,
.Nm estrdup ,
.Nm ewrite
.Nd exit-on-failure wrapper functions
.Sh LIBRARY
The roken library (libroken, -lroken)
.Sh SYNOPSIS
.Fd #include <roken.h>
.Ft "void *"
.Fn ecalloc "size_t number" "size_t size"
.Ft "void *"
.Fn emalloc "size_t sz"
.Ft ssize_t
.Fn eread "int fd" "void *buf" "size_t nbytes"
.Ft "void *"
.Fn erealloc "void *ptr" "size_t sz"
.Ft void
.Fn esetenv "const char *var" "const char *val" "int rewrite"
.Ft "char *"
.Fn estrdup "const char *str"
.Ft ssize_t
.Fn ewrite "int fd" "const void *buf" "size_t nbytes"
.Sh DESCRIPTION
These functions do the same as the ones without the
.Dq e
prefix, but if there is an error they will print a message with
.Xr errx 3 ,
and exit. For
.Nm eread
and
.Nm ewrite
this is also true for partial data.
.Pp
This is useful in applications when there is no need for a more
advanced failure mode.
.Sh SEE ALSO
.Xr read 2 ,
.Xr write 2 ,
.Xr calloc 3 ,
.Xr errx 3 ,
.Xr malloc 3 ,
.Xr realloc 3 ,
.Xr setenv 3 ,
.Xr strdup 3
