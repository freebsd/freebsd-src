.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SSL_STREAM_CONCLUDE 3ossl"
.TH SSL_STREAM_CONCLUDE 3ossl 2025-07-01 3.5.1 OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
SSL_stream_conclude \- conclude the sending part of a QUIC stream
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/ssl.h>
\&
\& _\|_owur int SSL_stream_conclude(SSL *s, uint64_t flags);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fBSSL_stream_conclude()\fR signals the normal end-of-stream condition for the send
part of a QUIC stream. If called on a QUIC connection SSL object with an
associated default stream, it signals the end of the single stream to the peer.
.PP
Any data already queued for transmission via a call to \fBSSL_write()\fR will still be
written in a reliable manner before the end-of-stream is signalled, assuming the
connection remains healthy. This function can be thought of as appending a
logical end-of-stream marker after any data which has previously been written to
the stream via calls to \fBSSL_write()\fR. Further attempts to call \fBSSL_write()\fR after
calling this function will fail.
.PP
When calling this on a stream, the receive part of the stream remains
unaffected, and the peer may continue to send data until it also signals the end
of the stream. Thus, \fBSSL_read()\fR can still be used.
.PP
\&\fIflags\fR is reserved and should be set to 0.
.PP
Only the first call to this function has any effect for a given stream;
subsequent calls are no-ops. This is considered a success case.
.PP
This function is not supported on an object other than a QUIC stream SSL object.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
Returns 1 on success and 0 on failure.
.PP
Returns 0 if called on an SSL object not representing a QUIC stream.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBopenssl\-quic\fR\|(7), \fBssl\fR\|(7), \fBSSL_shutdown_ex\fR\|(3)
.SH HISTORY
.IX Header "HISTORY"
The \fBSSL_stream_conclude()\fR function was added in OpenSSL 3.2.
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2022\-2023 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
<https://www.openssl.org/source/license.html>.
