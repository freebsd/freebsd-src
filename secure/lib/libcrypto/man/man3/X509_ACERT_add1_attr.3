.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "X509_ACERT_ADD1_ATTR 3ossl"
.TH X509_ACERT_ADD1_ATTR 3ossl 2025-07-01 3.5.1 OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
X509_ACERT_add1_attr,
X509_ACERT_add1_attr_by_NID,
X509_ACERT_add1_attr_by_OBJ,
X509_ACERT_add1_attr_by_txt,
X509_ACERT_delete_attr
\&\- X509_ACERT attribute functions
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/x509_acert.h>
\&
\& int X509_ACERT_add1_attr(X509_ACERT *x, X509_ATTRIBUTE *attr);
\& int X509_ACERT_add1_attr_by_NID(X509_ACERT *x, int nid, int type,
\&                                 const void *bytes, int len);
\& int X509_ACERT_add1_attr_by_OBJ(X509_ACERT *x, const ASN1_OBJECT *obj,
\&                                 int type, const void *bytes, int len);
\& int X509_ACERT_add1_attr_by_txt(X509_ACERT *x, const char *attrname, int type,
\&                                 const unsigned char *bytes, int len);
\& X509_ATTRIBUTE *X509_ACERT_delete_attr(X509_ACERT *x, int loc);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fBX509_ACERT_add1_attr()\fR adds a constructed X509_ATTRIBUTE \fBattr\fR to the
existing X509_ACERT structure \fBx\fR.
.PP
\&\fBX509_ACERT_add1_attr_by_NID()\fR and \fBX509_ACERT_add1_attr_by_OBJ()\fR
add an attribute of type \fInid\fR or \fIobj\fR with a value of ASN1
type \fItype\fR constructed using \fIlen\fR bytes from \fIbytes\fR.
.PP
\&\fBX509_ACERT_add1_attr_by_txt()\fR adds an attribute of type \fIattrname\fR with a value of
ASN1 type \fItype\fR constructed using \fIlen\fR bytes from \fIbytes\fR.
.PP
\&\fBX509_ACERT_delete_attr()\fR will delete the \fIloc\fRth attribute from \fIx\fR and
return a pointer to it or NULL if there are fewer than \fIloc\fR attributes
contained in \fIx\fR.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\fBX509_ACERT_add1_attr()\fR, \fBX509_ACERT_add1_attr_by_NID()\fR, and
\&\fBX509_ACERT_add1_attr_by_OBJ()\fR return 1 for success and 0 for failure.
.PP
\&\fBX509_ACERT_delete_attr()\fR returns a \fBX509_ATTRIBUTE\fR pointer on
success or NULL on failure.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBX509_ACERT_get_attr_count\fR\|(3)
.SH HISTORY
.IX Header "HISTORY"
\&\fBX509_ACERT_add1_attr()\fR, \fBX509_ACERT_add1_attr_by_NID()\fR, \fBX509_ACERT_add1_attr_by_OBJ()\fR,
\&\fBX509_ACERT_add1_attr_by_txt()\fR and \fBX509_ACERT_delete_attr()\fR were added in OpenSSL 3.4.
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2023\-2024 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
<https://www.openssl.org/source/license.html>.
