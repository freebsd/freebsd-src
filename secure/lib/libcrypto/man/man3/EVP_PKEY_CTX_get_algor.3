.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "EVP_PKEY_CTX_GET_ALGOR 3ossl"
.TH EVP_PKEY_CTX_GET_ALGOR 3ossl 2025-07-01 3.5.1 OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
EVP_CIPHER_CTX_get_algor,
EVP_CIPHER_CTX_get_algor_params,
EVP_CIPHER_CTX_set_algor_params,
EVP_PKEY_CTX_get_algor,
EVP_PKEY_CTX_get_algor_params,
EVP_PKEY_CTX_set_algor_params
\&\- pass AlgorithmIdentifier and its params to/from algorithm implementations
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 3
\& int EVP_TYPE_CTX_get_algor(EVP_TYPE_CTX *ctx, X509_ALGOR **alg);
\& int EVP_TYPE_CTX_get_algor_params(EVP_TYPE_CTX *ctx, X509_ALGOR *alg);
\& int EVP_TYPE_CTX_set_algor_params(EVP_TYPE_CTX *ctx, const X509_ALGOR *alg);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
In the description here and the "SYNOPSIS" above, \fR\f(BITYPE\fR\fB\fR is used as a
placeholder for any EVP operation type.
.PP
\&\fBEVP_\fR\f(BITYPE\fR\fB_CTX_get_algor\fR() attempts to retrieve a complete
AlgorithmIdentifier from the \fBEVP_\fR\f(BITYPE\fR implementation, and populates
\&\fI*alg\fR with it.
If \fIalg\fR is NULL, calling this function will serve to see if calling this
function is supported at all by the \fBEVP_\fR\f(BITYPE\fR\fB\fR implementation.
If \fI*alg\fR is NULL, space will be allocated automatically, and assigned to
\&\fI*alg\fR.
.PP
\&\fBEVP_\fR\f(BITYPE\fR\fB_CTX_get_algor_params\fR() attempts to retrieve the \fIparameters\fR
part of an AlgorithmIdentifier from the \fBEVP_\fR\f(BITYPE\fR implementation, and
populates \fIalg\-\fRparameters> with it.
If \fIalg\fR is NULL, calling this function will serve to see if calling this
function is supported at all by the \fBEVP_\fR\f(BITYPE\fR\fB\fR implementation.
If \fIalg\->parameters\fR is NULL, space will be allocated automatically, and
assigned to  \fIalg\->parameters\fR.
If \fIalg\->parameters\fR is not NULL, its previous contents will be overwritten
with the retrieved AlgorithmIdentifier parameters.  Beware!
.PP
\&\fBEVP_\fR\f(BITYPE\fR\fB_CTX_set_algor_params\fR() attempts to pass \fIalg\->parameters\fR
to the \fBEVP_\fR\f(BITYPE\fR implementation.
If \fIalg\fR is NULL, calling this function will serve to see if calling this
function is supported at all by the \fBEVP_\fR\f(BITYPE\fR\fB\fR implementation.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
All functions return 1 for success, and 0 or a negative number if an error
occurs.  In particular, \-2 is returned when the function isn't supported by
the \fBEVP_\fR\f(BITYPE\fR implementation.
.SH HISTORY
.IX Header "HISTORY"
These functions were added in OpenSSL 3.4.
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2024 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
<https://www.openssl.org/source/license.html>.
