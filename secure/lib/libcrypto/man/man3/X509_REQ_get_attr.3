.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "X509_REQ_GET_ATTR 3ossl"
.TH X509_REQ_GET_ATTR 3ossl 2025-07-01 3.5.1 OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
X509_REQ_get_attr_count,
X509_REQ_get_attr_by_NID, X509_REQ_get_attr_by_OBJ, X509_REQ_get_attr,
X509_REQ_delete_attr,
X509_REQ_add1_attr, X509_REQ_add1_attr_by_OBJ, X509_REQ_add1_attr_by_NID,
X509_REQ_add1_attr_by_txt
\&\- X509_ATTRIBUTE support for signed certificate requests
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/x509.h>
\&
\& int X509_REQ_get_attr_count(const X509_REQ *req);
\& int X509_REQ_get_attr_by_NID(const X509_REQ *req, int nid, int lastpos);
\& int X509_REQ_get_attr_by_OBJ(const X509_REQ *req, const ASN1_OBJECT *obj,
\&                              int lastpos);
\& X509_ATTRIBUTE *X509_REQ_get_attr(const X509_REQ *req, int loc);
\& X509_ATTRIBUTE *X509_REQ_delete_attr(X509_REQ *req, int loc);
\& int X509_REQ_add1_attr(X509_REQ *req, X509_ATTRIBUTE *attr);
\& int X509_REQ_add1_attr_by_OBJ(X509_REQ *req,
\&                               const ASN1_OBJECT *obj, int type,
\&                               const unsigned char *bytes, int len);
\& int X509_REQ_add1_attr_by_NID(X509_REQ *req,
\&                               int nid, int type,
\&                               const unsigned char *bytes, int len);
\& int X509_REQ_add1_attr_by_txt(X509_REQ *req,
\&                               const char *attrname, int type,
\&                               const unsigned char *bytes, int len);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fBX509_REQ_get_attr_by_OBJ()\fR finds the location of the first matching object \fIobj\fR
in the \fIreq\fR attribute list. The search starts at the position after \fIlastpos\fR.
If the returned value is positive then it can be used on the next call to
\&\fBX509_REQ_get_attr_by_OBJ()\fR as the value of \fIlastpos\fR in order to iterate through
the remaining attributes. \fIlastpos\fR can be set to any negative value on the
first call, in order to start searching from the start of the attribute list.
.PP
\&\fBX509_REQ_get_attr_by_NID()\fR is similar to \fBX509_REQ_get_attr_by_OBJ()\fR except that
it passes the numerical identifier (NID) \fInid\fR associated with the object.
See <openssl/obj_mac.h> for a list of NID_*.
.PP
\&\fBX509_REQ_get_attr()\fR returns the \fBX509_ATTRIBUTE\fR object at index \fIloc\fR in the
\&\fIreq\fR attribute list. \fIloc\fR should be in the range from 0 to
\&\fBX509_REQ_get_attr_count()\fR \- 1.
.PP
\&\fBX509_REQ_delete_attr()\fR removes the \fBX509_ATTRIBUTE\fR object at index \fIloc\fR in
the \fIreq\fR objects list of attributes. An error occurs if \fIreq\fR is NULL.
.PP
\&\fBX509_REQ_add1_attr()\fR pushes a copy of the passed in \fBX509_ATTRIBUTE\fR \fRattr>
to the \fIreq\fR object's attribute list. An error will occur if either the
attribute list is NULL or the attribute already exists.
.PP
\&\fBX509_REQ_add1_attr_by_OBJ()\fR creates a new \fBX509_ATTRIBUTE\fR using
\&\fBX509_ATTRIBUTE_set1_object()\fR and \fBX509_ATTRIBUTE_set1_data()\fR to assign a new
\&\fIobj\fR with type \fItype\fR and data \fIbytes\fR of length \fIlen\fR and then pushes it
to the \fIreq\fR object's attribute list. \fIreq\fR must be non NULL or an error
will occur. If \fIobj\fR already exists in the attribute list then an error occurs.
.PP
\&\fBX509_REQ_add1_attr_by_NID()\fR is similar to \fBX509_REQ_add1_attr_by_OBJ()\fR except
that it passes the numerical identifier (NID) \fInid\fR associated with the object.
See <openssl/obj_mac.h> for a list of NID_*.
.PP
\&\fBX509_REQ_add1_attr_by_txt()\fR is similar to \fBX509_REQ_add1_attr_by_OBJ()\fR except
that it passes a name \fIattrname\fR associated with the object.
See <openssl/obj_mac.h> for a list of SN_* names.
.PP
Refer to \fBX509_ATTRIBUTE\fR\|(3) for information related to attributes.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\fBX509_REQ_get_attr_count()\fR returns the number of attributes in the \fIreq\fR object
attribute list or \-1 if the attribute list is NULL.
.PP
\&\fBX509_REQ_get_attr_by_OBJ()\fR returns \-1 if either the \fIreq\fR object's attribute
list is empty OR \fIobj\fR is not found, otherwise it returns the location of the
\&\fIobj\fR in the attribute list.
.PP
\&\fBX509_REQ_get_attr_by_NID()\fR is similar to \fBX509_REQ_get_attr_by_OBJ()\fR, except that
it returns \-2 if the \fInid\fR is not known by OpenSSL.
.PP
\&\fBX509_REQ_get_attr()\fR returns either an \fBX509_ATTRIBUTE\fR or NULL on error.
.PP
\&\fBX509_REQ_delete_attr()\fR returns either the removed \fBX509_ATTRIBUTE\fR or NULL if
there is a error.
.PP
\&\fBX509_REQ_add1_attr()\fR, \fBX509_REQ_add1_attr_by_OBJ()\fR, \fBX509_REQ_add1_attr_by_NID()\fR
and \fBX509_REQ_add1_attr_by_txt()\fR return 1 on success or 0 on error.
.SH NOTES
.IX Header "NOTES"
Any functions that modify the attributes (add or delete) internally set a flag
to indicate the ASN.1 encoding has been modified.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBX509_ATTRIBUTE\fR\|(3)
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2023\-2024 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
<https://www.openssl.org/source/license.html>.
