.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "X509_ACERT_GET_ATTR 3ossl"
.TH X509_ACERT_GET_ATTR 3ossl 2025-07-01 3.5.1 OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
X509_ACERT_get_attr,
X509_ACERT_get_attr_by_NID,
X509_ACERT_get_attr_by_OBJ,
X509_ACERT_get_attr_count
\&\- Retrieve attributes from an X509_ACERT structure
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/x509_acert.h>
\&
\& X509_ATTRIBUTE *X509_ACERT_get_attr(const X509_ACERT *x, int loc);
\& int X509_ACERT_get_attr_by_NID(const X509_ACERT *x, int nid, int lastpos);
\& int X509_ACERT_get_attr_by_OBJ(const X509_ACERT *x, const ASN1_OBJECT *obj,
\&                                int lastpos);
\& int X509_ACERT_get_attr_count(const X509_ACERT *x);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fBX509_ACERT_get0_attr()\fR retrieves the \fIloc\fRth \fBX509_ATTRIBUTE\fR from an
\&\fBX509_ACERT\fR \fIx\fR.  \fBX509_ACERT_get_attr_count()\fR returns the total number
of attributes in the \fBX509_ACERT\fR.
.PP
\&\fBX509_ACERT_get_attr_by_NID()\fR and \fBX509_ACERT_get_attr_by_OBJ()\fR retrieve the next
attribute location matching \fInid\fR or \fIobj\fR after \fIlastpos\fR. \fIlastpos\fR
should initially be set to \-1.
If there are no more entries \-1 is returned. If \fInid\fR is invalid
(doesn't correspond to a valid OID) then \-2 is returned.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\fBX509_ACERT_get0_attr()\fR return a \fBX509_ATTRIBUTE\fR from an attribute
certificate, or NULL if the specified attribute is not found.
.PP
\&\fBX509_ACERT_get_attr_by_NID()\fR and \fBX509_ACERT_get_attr_by_OBJ()\fR return
the location of the next attribute requested or \-1 if not found.
\&\fBX509_ACERT_get_attr_by_NID()\fR can also return \-2 if the supplied NID is invalid.
.PP
\&\fBX509_ACERT_get_attr_count()\fR returns the number of attributes in the given
attribute certificate.
.SH HISTORY
.IX Header "HISTORY"
\&\fBX509_ACERT_get0_attr()\fR, \fBX509_ACERT_get_attr_by_NID()\fR, \fBX509_ACERT_get_attr_by_OBJ()\fR and
\&\fBX509_ACERT_get_attr_count()\fR were added in OpenSSL 3.4.
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2023\-2024 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
<https://www.openssl.org/source/license.html>.
