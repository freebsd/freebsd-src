.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SSL_SET_BLOCKING_MODE 3ossl"
.TH SSL_SET_BLOCKING_MODE 3ossl 2025-07-01 3.5.1 OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
SSL_set_blocking_mode, SSL_get_blocking_mode \- configure blocking mode for a
QUIC SSL object
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/ssl.h>
\&
\& int SSL_set_blocking_mode(SSL *s, int blocking);
\& int SSL_get_blocking_mode(SSL *s);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fBSSL_set_blocking_mode()\fR can be used to enable or disable blocking mode on a QUIC
connection SSL object. By default, blocking is enabled, unless the SSL object is
configured to use an underlying read or write BIO which cannot provide a poll
descriptor (see \fBBIO_get_rpoll_descriptor\fR\|(3)), as blocking mode cannot be
supported in this case.
.PP
To enable blocking mode, call \fBSSL_set_blocking_mode()\fR with \fIblocking\fR set to 1;
to disable it, call \fBSSL_set_blocking_mode()\fR with \fIblocking\fR set to 0.
.PP
To retrieve the current blocking mode, call \fBSSL_get_blocking_mode()\fR.
.PP
Blocking mode means that calls such as \fBSSL_read()\fR and \fBSSL_write()\fR will block
until the requested operation can be performed. In nonblocking mode, these
calls will fail if the requested operation cannot be performed immediately; see
\&\fBSSL_get_error\fR\|(3).
.PP
These functions are only applicable to QUIC connection SSL objects. Other kinds
of SSL object, such as those for TLS, automatically function in blocking or
nonblocking mode based on whether the underlying network read and write BIOs
provided to the SSL object are themselves configured in nonblocking mode.
.PP
Where a QUIC connection SSL object is used in nonblocking mode, an application
is responsible for ensuring that the SSL object is ticked regularly; see
\&\fBSSL_handle_events\fR\|(3).
.PP
Blocking mode is disabled automatically if the application provides a QUIC
connection SSL object with a network BIO which cannot support blocking mode. To
re-enable blocking mode in this case, an application must set a network BIO
which can support blocking mode and explicitly call \fBSSL_set_blocking_mode()\fR.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\fBSSL_set_blocking_mode()\fR returns 1 on success and 0 on failure. The function
fails if called on an SSL object which does not represent a QUIC connection,
or if blocking mode cannot be used for the given connection.
.PP
\&\fBSSL_get_blocking_mode()\fR returns 1 if blocking is currently enabled. It returns
\&\-1 if called on an unsupported SSL object.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBSSL_handle_events\fR\|(3), \fBSSL_poll\fR\|(3), \fBopenssl\-quic\fR\|(7),
\&\fBopenssl\-quic\-concurrency\fR\|(7), \fBssl\fR\|(7)
.SH HISTORY
.IX Header "HISTORY"
The \fBSSL_set_blocking_mode()\fR and \fBSSL_get_blocking_mode()\fR functions were added in
OpenSSL 3.2.
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2022\-2025 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
<https://www.openssl.org/source/license.html>.
