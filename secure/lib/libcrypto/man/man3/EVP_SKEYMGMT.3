.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "EVP_SKEYMGMT 3ossl"
.TH EVP_SKEYMGMT 3ossl 2025-07-01 3.5.1 OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
EVP_SKEYMGMT,
EVP_SKEYMGMT_fetch,
EVP_SKEYMGMT_up_ref,
EVP_SKEYMGMT_free,
EVP_SKEYMGMT_get0_provider,
EVP_SKEYMGMT_is_a,
EVP_SKEYMGMT_get0_description,
EVP_SKEYMGMT_get0_name,
EVP_SKEYMGMT_do_all_provided,
EVP_SKEYMGMT_names_do_all,
EVP_SKEYMGMT_get0_gen_settable_params,
EVP_SKEYMGMT_get0_imp_settable_params
\&\- EVP key management routines for opaque symmetric keys
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/evp.h>
\&
\& typedef struct evp_sskeymgmt_st EVP_SKEYMGMT;
\&
\& EVP_SKEYMGMT *EVP_SKEYMGMT_fetch(OSSL_LIB_CTX *ctx, const char *algorithm,
\&                                  const char *properties);
\& int EVP_SKEYMGMT_up_ref(EVP_SKEYMGMT *skeymgmt);
\& void EVP_SKEYMGMT_free(EVP_SKEYMGMT *skeymgmt);
\& const OSSL_PROVIDER *EVP_SKEYMGMT_get0_provider(const EVP_SKEYMGMT *skeymgmt);
\& int EVP_SKEYMGMT_is_a(const EVP_SKEYMGMT *skeymgmt, const char *name);
\& const char *EVP_SKEYMGMT_get0_name(const EVP_SKEYMGMT *skeymgmt);
\& const char *EVP_SKEYMGMT_get0_description(const EVP_SKEYMGMT *skeymgmt);
\&
\& void EVP_SKEYMGMT_do_all_provided(OSSL_LIB_CTX *libctx,
\&                                   void (*fn)(EVP_SKEYMGMT *skeymgmt, void *arg),
\&                                   void *arg);
\& int EVP_SKEYMGMT_names_do_all(const EVP_SKEYMGMT *skeymgmt,
\&                               void (*fn)(const char *name, void *data),
\&                               void *data);
\& const OSSL_PARAM *EVP_SKEYMGMT_get0_gen_settable_params(const EVP_SKEYMGMT *skeymgmt);
\& const OSSL_PARAM *EVP_SKEYMGMT_get0_imp_settable_params(const EVP_SKEYMGMT *skeymgmt);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fBEVP_SKEYMGMT\fR is a method object that represents symmetric key management
implementations for different cryptographic algorithms.  This method object
provides functionality to allow providers to import key material from the
outside, as well as export key material to the outside.
.PP
Most of the functionality can only be used internally and has no public
interface, this opaque object is simply passed into other functions when
needed.
.PP
\&\fBEVP_SKEYMGMT_fetch()\fR looks for an algorithm within a provider that
has been loaded into the \fBOSSL_LIB_CTX\fR given by \fIctx\fR, having the
name given by \fIalgorithm\fR and the properties given by \fIproperties\fR.
.PP
\&\fBEVP_SKEYMGMT_up_ref()\fR increments the reference count for the given
\&\fBEVP_SKEYMGMT\fR \fIskeymgmt\fR.
.PP
\&\fBEVP_SKEYMGMT_free()\fR decrements the reference count for the given
\&\fBEVP_SKEYMGMT\fR \fIskeymgmt\fR, and when the count reaches zero, frees it.
If the argument is NULL, nothing is done.
.PP
\&\fBEVP_SKEYMGMT_get0_provider()\fR returns the provider that has this particular
implementation.
.PP
\&\fBEVP_SKEYMGMT_is_a()\fR checks if \fIskeymgmt\fR is an implementation of an
algorithm that's identified by \fIname\fR.
.PP
\&\fBEVP_SKEYMGMT_get0_name()\fR returns the algorithm name from the provided
implementation for the given \fIskeymgmt\fR. Note that the \fIskeymgmt\fR may have
multiple synonyms associated with it. In this case the first name from the
algorithm definition is returned. Ownership of the returned string is
retained by the \fIskeymgmt\fR object and should not be freed by the caller.
.PP
\&\fBEVP_SKEYMGMT_names_do_all()\fR traverses all names for the \fIskeymgmt\fR, and
calls \fIfn\fR with each name and \fIdata\fR.
.PP
\&\fBEVP_SKEYMGMT_get0_description()\fR returns a description of the \fIskeymgmt\fR, meant
for display and human consumption.  The description is at the discretion
of the \fIskeymgmt\fR implementation.
.PP
\&\fBEVP_SKEYMGMT_do_all_provided()\fR traverses all key \fIskeymgmt\fR implementations by
all activated providers in the library context \fIlibctx\fR, and for each
of the implementations, calls \fIfn\fR with the implementation method and
\&\fIdata\fR as arguments.
.PP
\&\fBEVP_SKEYMGMT_get0_gen_settable_params()\fR and \fBEVP_SKEYMGMT_get0_imp_settable_params()\fR
get a constant \fBOSSL_PARAM\fR\|(3) array that describes the settable parameters
that can be used with \fBEVP_SKEY_generate()\fR and \fBEVP_SKEY_import()\fR correspondingly.
.SH NOTES
.IX Header "NOTES"
\&\fBEVP_SKEYMGMT_fetch()\fR may be called implicitly by other fetching
functions, using the same library context and properties.
Any other API that uses symmetric keys will typically do this.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\fBEVP_SKEYMGMT_fetch()\fR returns a pointer to the key management
implementation represented by an EVP_SKEYMGMT object, or NULL on
error.
.PP
\&\fBEVP_SKEYMGMT_up_ref()\fR returns 1 on success, or 0 on error.
.PP
\&\fBEVP_SKEYMGMT_names_do_all()\fR returns 1 if the callback was called for all
names. A return value of 0 means that the callback was not called for any names.
.PP
\&\fBEVP_SKEYMGMT_free()\fR doesn't return any value.
.PP
\&\fBEVP_SKEYMGMT_get0_provider()\fR returns a pointer to a provider object, or NULL
on error.
.PP
\&\fBEVP_SKEYMGMT_is_a()\fR returns 1 if \fIskeymgmt\fR was identifiable, otherwise 0.
.PP
\&\fBEVP_SKEYMGMT_get0_name()\fR returns the algorithm name, or NULL on error.
.PP
\&\fBEVP_SKEYMGMT_get0_description()\fR returns a pointer to a description, or NULL if
there isn't one.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBEVP_SKEY\fR\|(3), \fBEVP_MD_fetch\fR\|(3), \fBOSSL_LIB_CTX\fR\|(3)
.SH HISTORY
.IX Header "HISTORY"
\&\fBEVP_SKEYMGMT\fR structure and functions
\&\fBEVP_SKEYMGMT_fetch()\fR,
\&\fBEVP_SKEYMGMT_up_ref()\fR,
\&\fBEVP_SKEYMGMT_free()\fR,
\&\fBEVP_SKEYMGMT_get0_provider()\fR,
\&\fBEVP_SKEYMGMT_is_a()\fR,
\&\fBEVP_SKEYMGMT_get0_description()\fR,
\&\fBEVP_SKEYMGMT_get0_name()\fR,
\&\fBEVP_SKEYMGMT_do_all_provided()\fR,
\&\fBEVP_SKEYMGMT_names_do_all()\fR,
\&\fBEVP_SKEYMGMT_get0_gen_settable_params()\fR,
\&\fBEVP_SKEYMGMT_get0_imp_settable_params()\fR
were added in OpenSSL 3.5.
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2025 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
<https://www.openssl.org/source/license.html>.
