.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LIFE_CYCLE-CIPHER 7ossl"
.TH LIFE_CYCLE-CIPHER 7ossl "2023-09-19" "3.0.11" "OpenSSL"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
life_cycle\-cipher \- The cipher algorithm life\-cycle
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
All symmetric ciphers (CIPHERs) go through a number of stages in their
life-cycle:
.IP "start" 4
.IX Item "start"
This state represents the \s-1CIPHER\s0 before it has been allocated.  It is the
starting state for any life-cycle transitions.
.IP "newed" 4
.IX Item "newed"
This state represents the \s-1CIPHER\s0 after it has been allocated.
.IP "initialised" 4
.IX Item "initialised"
These states represent the \s-1CIPHER\s0 when it is set up and capable of processing
input.  There are three possible initialised states:
.RS 4
.IP "initialised using EVP_CipherInit" 4
.IX Item "initialised using EVP_CipherInit"
.PD 0
.IP "initialised for decryption using EVP_DecryptInit" 4
.IX Item "initialised for decryption using EVP_DecryptInit"
.IP "initialised for encryption using EVP_EncryptInit" 4
.IX Item "initialised for encryption using EVP_EncryptInit"
.RE
.RS 4
.RE
.IP "updated" 4
.IX Item "updated"
.PD
These states represent the \s-1CIPHER\s0 when it is set up and capable of processing
additional input or generating output.  The three possible states directly
correspond to those for initialised above.  The three different streams should
not be mixed.
.IP "finaled" 4
.IX Item "finaled"
This state represents the \s-1CIPHER\s0 when it has generated output.
.IP "freed" 4
.IX Item "freed"
This state is entered when the \s-1CIPHER\s0 is freed.  It is the terminal state
for all life-cycle transitions.
.SS "State Transition Diagram"
.IX Subsection "State Transition Diagram"
The usual life-cycle of a \s-1CIPHER\s0 is illustrated:
                                 +---------------------------+
                                 |                           |
                                 |           start           |
                                 |                           |
                                 +---------------------------+   + - - - - - - - - - - - - - +
                                       |                         '  any of the initialised   '
                                       | EVP_CIPHER_CTX_new      ' updated or finaled states '
                                       v                         '                           '
                                 +---------------------------+   + - - - - - - - - - - - - - +
                                 |                           |      |
                                 |           newed           |      | EVP_CIPHER_CTX_reset
                                 |                           | <----+
                                 +---------------------------+
                                    |   |                 |
                          +---------+   |                 +---------+
          EVP_DecryptInit |             | EVP_CipherInit            | EVP_EncryptInit
                          v             v                           v
 +---------------------------+   +---------------------------+   +---------------------------+
 |                           |   |                           |   |                           |
 |        initialised        |   |        initialised        |   |        initialised        |
 |       for decryption      |   |                           |   |       for encryption      |
 +---------------------------+   +---------------------------+   +---------------------------+
   |                                   |                                                   |
   | EVP_DecryptUpdate                 | EVP_CipherUpdate                EVP_EncryptUpdate |
   |                                   v                                                   |
   |                             +---------------------------+                             |
   |                             |                           |--------------------+        |
   |                             |          updated          |   EVP_CipherUpdate |        |
   |                             |                           | <------------------+        |
   v                             +---------------------------+                             v
 +---------------------------+                         |         +---------------------------+
 |                           |---------------------+   |         |                           |
 |          updated          |   EVP_DecryptUpdate |   |         |          updated          |------+
 |       for decryption      | <-------------------+   |         |       for encryption      |      |
 +---------------------------+                         |         +---------------------------+      |
                          |            EVP_CipherFinal |            |           ^                   |
                          +-------+                    |   +--------+           |                   |
                 EVP_DecryptFinal |                    |   | EVP_EncryptFinal   +-------------------+
                                  v                    v   v                      EVP_EncryptUpdate
                                 +---------------------------+
                                 |                           |-----------------------------+
                                 |          finaled          |                             |
                                 |                           | <---------------------------+
                                 +---------------------------+   EVP_CIPHER_CTX_get_params
                                       |                             (AEAD encryption)
                                       | EVP_CIPHER_CTX_free
                                       v
                                 +---------------------------+
                                 |                           |
                                 |           freed           |
                                 |                           |
                                 +---------------------------+
.SS "Formal State Transitions"
.IX Subsection "Formal State Transitions"
This section defines all of the legal state transitions.
This is the canonical list.
 Function Call                ---------------------------------------------- Current State -----------------------------------------------
                              start   newed    initialised   updated     finaled   initialised   updated    initialised   updated    freed
                                                                                    decryption  decryption   encryption  encryption
 EVP_CIPHER_CTX_new           newed
 EVP_CipherInit                    initialised initialised initialised initialised initialised initialised  initialised initialised
 EVP_DecryptInit                   initialised initialised initialised initialised initialised initialised  initialised initialised
                                    decryption  decryption  decryption  decryption  decryption  decryption  decryption  decryption
 EVP_EncryptInit                   initialised initialised initialised initialised initialised initialised  initialised initialised
                                    encryption  encryption  encryption  encryption  encryption  encryption  encryption  encryption
 EVP_CipherUpdate                                updated     updated
 EVP_DecryptUpdate                                                                   updated     updated
                                                                                    decryption  decryption
 EVP_EncryptUpdate                                                                                            updated     updated
                                                                                                             encryption  encryption
 EVP_CipherFinal                                             finaled
 EVP_DecryptFinal                                                                                finaled
 EVP_EncryptFinal                                                                                                         finaled
 EVP_CIPHER_CTX_free          freed   freed       freed       freed       freed       freed       freed        freed       freed
 EVP_CIPHER_CTX_reset                 newed       newed       newed       newed       newed       newed        newed       newed
 EVP_CIPHER_CTX_get_params            newed    initialised   updated               initialised   updated    initialised   updated
                                                                                    decryption  decryption   encryption  encryption
 EVP_CIPHER_CTX_set_params            newed    initialised   updated               initialised   updated    initialised   updated
                                                                                    decryption  decryption   encryption  encryption
 EVP_CIPHER_CTX_gettable_params       newed    initialised   updated               initialised   updated    initialised   updated
                                                                                    decryption  decryption   encryption  encryption
 EVP_CIPHER_CTX_settable_params       newed    initialised   updated               initialised   updated    initialised   updated
                                                                                    decryption  decryption   encryption  encryption
.SH "NOTES"
.IX Header "NOTES"
At some point the \s-1EVP\s0 layer will begin enforcing the transitions described
herein.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBprovider\-cipher\fR\|(7), \fBEVP_EncryptInit\fR\|(3)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2021 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the Apache License 2.0 (the \*(L"License\*(R").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file \s-1LICENSE\s0 in the source distribution or at
<https://www.openssl.org/source/license.html>.
