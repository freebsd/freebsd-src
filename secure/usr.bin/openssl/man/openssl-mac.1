.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OPENSSL-MAC 1ossl"
.TH OPENSSL-MAC 1ossl "2023-09-22" "3.0.11" "OpenSSL"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
openssl\-mac \- perform Message Authentication Code operations
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBopenssl mac\fR
[\fB\-help\fR]
[\fB\-cipher\fR]
[\fB\-digest\fR]
[\fB\-macopt\fR]
[\fB\-in\fR \fIfilename\fR]
[\fB\-out\fR \fIfilename\fR]
[\fB\-binary\fR]
[\fB\-provider\fR \fIname\fR]
[\fB\-provider\-path\fR \fIpath\fR]
[\fB\-propquery\fR \fIpropq\fR]
\&\fImac_name\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The message authentication code functions output the \s-1MAC\s0 of a supplied input
file.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-help\fR" 4
.IX Item "-help"
Print a usage message.
.IP "\fB\-in\fR \fIfilename\fR" 4
.IX Item "-in filename"
Input filename to calculate a \s-1MAC\s0 for, or standard input by default.
Standard input is used if the filename is '\-'.
Files and standard input are expected to be in binary format.
.IP "\fB\-out\fR \fIfilename\fR" 4
.IX Item "-out filename"
Filename to output to, or standard output by default.
.IP "\fB\-binary\fR" 4
.IX Item "-binary"
Output the \s-1MAC\s0 in binary form. Uses hexadecimal text format if not specified.
.IP "\fB\-cipher\fR \fIname\fR" 4
.IX Item "-cipher name"
Used by \s-1CMAC\s0 and \s-1GMAC\s0 to specify the cipher algorithm.
For \s-1CMAC\s0 it must be one of \s-1AES\-128\-CBC, AES\-192\-CBC, AES\-256\-CBC\s0 or
\&\s-1DES\-EDE3\-CBC.\s0
For \s-1GMAC\s0 it should be a \s-1GCM\s0 mode cipher e.g. \s-1AES\-128\-GCM.\s0
.IP "\fB\-digest\fR \fIname\fR" 4
.IX Item "-digest name"
Used by \s-1HMAC\s0 as an alphanumeric string (use if the key contains printable
characters only).
The string length must conform to any restrictions of the \s-1MAC\s0 algorithm.
To see the list of supported digests, use \f(CW\*(C`openssl list \-digest\-commands\*(C'\fR.
.IP "\fB\-macopt\fR \fInm\fR:\fIv\fR" 4
.IX Item "-macopt nm:v"
Passes options to the \s-1MAC\s0 algorithm.
A comprehensive list of controls can be found in the \s-1EVP_MAC\s0 implementation
documentation.
Common parameter names used by \fBEVP_MAC_CTX_get_params()\fR are:
.RS 4
.IP "\fBkey:\fR\fIstring\fR" 4
.IX Item "key:string"
Specifies the \s-1MAC\s0 key as an alphanumeric string (use if the key contains
printable characters only).
The string length must conform to any restrictions of the \s-1MAC\s0 algorithm.
A key must be specified for every \s-1MAC\s0 algorithm.
.IP "\fBhexkey:\fR\fIstring\fR" 4
.IX Item "hexkey:string"
Specifies the \s-1MAC\s0 key in hexadecimal form (two hex digits per byte).
The key length must conform to any restrictions of the \s-1MAC\s0 algorithm.
A key must be specified for every \s-1MAC\s0 algorithm.
.IP "\fBiv:\fR\fIstring\fR" 4
.IX Item "iv:string"
Used by \s-1GMAC\s0 to specify an \s-1IV\s0 as an alphanumeric string (use if the \s-1IV\s0 contains
printable characters only).
.IP "\fBhexiv:\fR\fIstring\fR" 4
.IX Item "hexiv:string"
Used by \s-1GMAC\s0 to specify an \s-1IV\s0 in hexadecimal form (two hex digits per byte).
.IP "\fBsize:\fR\fIint\fR" 4
.IX Item "size:int"
Used by \s-1KMAC128\s0 or \s-1KMAC256\s0 to specify an output length.
The default sizes are 32 or 64 bytes respectively.
.IP "\fBcustom:\fR\fIstring\fR" 4
.IX Item "custom:string"
Used by \s-1KMAC128\s0 or \s-1KMAC256\s0 to specify a customization string.
The default is the empty string "".
.IP "\fBdigest:\fR\fIstring\fR" 4
.IX Item "digest:string"
This option is identical to the \fB\-digest\fR option.
.IP "\fBcipher:\fR\fIstring\fR" 4
.IX Item "cipher:string"
This option is identical to the \fB\-cipher\fR option.
.RE
.RS 4
.RE
.IP "\fB\-provider\fR \fIname\fR" 4
.IX Item "-provider name"
.PD 0
.IP "\fB\-provider\-path\fR \fIpath\fR" 4
.IX Item "-provider-path path"
.IP "\fB\-propquery\fR \fIpropq\fR" 4
.IX Item "-propquery propq"
.PD
See \*(L"Provider Options\*(R" in \fBopenssl\fR\|(1), \fBprovider\fR\|(7), and \fBproperty\fR\|(7).
.IP "\fImac_name\fR" 4
.IX Item "mac_name"
Specifies the name of a supported \s-1MAC\s0 algorithm which will be used.
To see the list of supported \s-1MAC\s0's use the command \f(CW\*(C`openssl list
\&\-mac\-algorithms\*(C'\fR.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To create a hex-encoded \s-1HMAC\-SHA1 MAC\s0 of a file and write to stdout: \e
 openssl mac \-digest \s-1SHA1\s0 \e
         \-macopt hexkey:000102030405060708090A0B0C0D0E0F10111213 \e
         \-in msg.bin \s-1HMAC\s0
.PP
To create a SipHash \s-1MAC\s0 from a file with a binary file output: \e
 openssl mac \-macopt hexkey:000102030405060708090A0B0C0D0E0F \e
         \-in msg.bin \-out out.bin \-binary SipHash
.PP
To create a hex-encoded \s-1CMAC\-AES\-128\-CBC MAC\s0 from a file:\e
 openssl mac \-cipher \s-1AES\-128\-CBC\s0 \e
         \-macopt hexkey:77A77FAF290C1FA30C683DF16BA7A77B \e
         \-in msg.bin \s-1CMAC\s0
.PP
To create a hex-encoded \s-1KMAC128 MAC\s0 from a file with a Customisation String
\&'Tag' and output length of 16: \e
 openssl mac \-macopt custom:Tag \-macopt hexkey:40414243444546 \e
         \-macopt size:16 \-in msg.bin \s-1KMAC128\s0
.PP
To create a hex-encoded \s-1GMAC\-AES\-128\-GCM\s0 with a \s-1IV\s0 from a file: \e
 openssl mac \-cipher \s-1AES\-128\-GCM\s0 \-macopt hexiv:E0E00F19FED7BA0136A797F3 \e
         \-macopt hexkey:77A77FAF290C1FA30C683DF16BA7A77B \-in msg.bin \s-1GMAC\s0
.SH "NOTES"
.IX Header "NOTES"
The \s-1MAC\s0 mechanisms that are available will depend on the options
used when building OpenSSL.
Use \f(CW\*(C`openssl list \-mac\-algorithms\*(C'\fR to list them.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBopenssl\fR\|(1),
\&\s-1\fBEVP_MAC\s0\fR\|(3),
\&\s-1\fBEVP_MAC\-CMAC\s0\fR\|(7),
\&\s-1\fBEVP_MAC\-GMAC\s0\fR\|(7),
\&\s-1\fBEVP_MAC\-HMAC\s0\fR\|(7),
\&\s-1\fBEVP_MAC\-KMAC\s0\fR\|(7),
\&\fBEVP_MAC\-Siphash\fR\|(7),
\&\fBEVP_MAC\-Poly1305\fR\|(7)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2018\-2022 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the Apache License 2.0 (the \*(L"License\*(R").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file \s-1LICENSE\s0 in the source distribution or at
<https://www.openssl.org/source/license.html>.
