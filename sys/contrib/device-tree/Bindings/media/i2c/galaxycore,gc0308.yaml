# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/media/i2c/galaxycore,gc0308.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Galaxycore GC0308 and GC0309 Image Sensors

maintainers:
  - Sebastian Reichel <sre@kernel.org>

description: |
  The GalaxyCore GC0308 (1/6.5") and GC0309 (1/9") are 640x480 VGA sensors
  programmable through an I2C interface and connected via parallel bus.
  They include an ISP capable of auto exposure and auto white balance.

allOf:
  - $ref: /schemas/media/video-interface-devices.yaml#

properties:
  compatible:
    oneOf:
      - const: galaxycore,gc0308
      - items:
          - const: galaxycore,gc0309
          - const: galaxycore,gc0308

  reg:
    const: 0x21

  clocks:
    description: Reference to the xclk clock.
    maxItems: 1

  reset-gpios:
    description: GPIO descriptor for the reset pin.
    maxItems: 1

  powerdown-gpios:
    description: GPIO descriptor for the powerdown pin.
    maxItems: 1

  vdd28-supply:
    description: 2.8V supply

  port:
    $ref: /schemas/graph.yaml#/$defs/port-base
    description: |
      Video output port.

    properties:
      endpoint:
        $ref: /schemas/media/video-interfaces.yaml#
        unevaluatedProperties: false

        properties:
          bus-width: true
          data-shift: true
          hsync-active: true
          vsync-active: true
          data-active: true
          pclk-sample: true

        required:
          - bus-width

    additionalProperties: false

required:
  - compatible
  - reg
  - clocks
  - powerdown-gpios
  - port

additionalProperties: false

examples:
  - |
    #include <dt-bindings/gpio/gpio.h>

    i2c {
        #address-cells = <1>;
        #size-cells = <0>;

        camera-sensor@21 {
            compatible = "galaxycore,gc0308";
            reg = <0x21>;
            clocks = <&camera_clk>;
            powerdown-gpios = <&gpio1 5 GPIO_ACTIVE_HIGH>;
            reset-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
            vdd28-supply = <&vdd28>;

            port {
                gc0308_ep: endpoint {
                    remote-endpoint = <&parallel_from_gc0308>;
                    bus-width = <8>;
                    data-shift = <2>; /* lines 9:2 are used */
                    hsync-active = <1>; /* active high */
                    vsync-active = <1>; /* active high */
                    data-active = <1>; /* active high */
                    pclk-sample = <1>; /* sample on rising edge */
                };
            };
        };
    };

...
