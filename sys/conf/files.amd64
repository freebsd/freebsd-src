# This file tells config what files go into building a kernel,
# files marked standard are always included.
#
#

# common files stuff between i386 and amd64
include 	"conf/files.x86"

# The long compile-with and dependency lines are required because of
# limitations in config: backslash-newline doesn't work in strings, and
# dependency lines other than the first are silently ignored.
#
#
elf-vdso.so.o			standard				\
	dependency	"$S/amd64/amd64/sigtramp.S assym.inc $S/conf/vdso_amd64.ldscript $S/tools/amd64_vdso.sh" \
	compile-with	"env AWK='${AWK}' NM='${NM}' LD='${LD}' CC='${CC}' DEBUG='${DEBUG}' OBJCOPY='${OBJCOPY}' ELFDUMP='${ELFDUMP}' S='${S}' sh $S/tools/amd64_vdso.sh" \
	no-ctfconvert	\
	no-implicit-rule before-depend	\
	clean		"elf-vdso.so.o elf-vdso.so.1 vdso_offsets.h sigtramp.pico"
#
elf-vdso32.so.o			optional	compat_freebsd32		\
	dependency	"$S/amd64/ia32/ia32_sigtramp.S ia32_assym.h $S/conf/vdso_amd64_ia32.ldscript $S/tools/amd64_ia32_vdso.sh" \
	compile-with	"env AWK='${AWK}' NM='${NM}' LD='${LD}' CC='${CC}' DEBUG='${DEBUG}' OBJCOPY='${OBJCOPY}' ELFDUMP='${ELFDUMP}' S='${S}' sh $S/tools/amd64_ia32_vdso.sh" \
	no-ctfconvert	\
	no-implicit-rule before-depend	\
	clean		"elf-vdso32.so.o elf-vdso32.so.1 vdso_ia32_offsets.h ia32_sigtramp.pico"
#
ia32_genassym.o			standard				\
	dependency 	"$S/compat/ia32/ia32_genassym.c offset.inc"		\
	compile-with	"${CC} ${CFLAGS:N-flto*:N-fno-common:N-fsanitize*:N-fno-sanitize*} -fcommon -c ${.IMPSRC}" \
	no-obj no-implicit-rule						\
	clean		"ia32_genassym.o"
#
ia32_assym.h			standard				\
	dependency 	"$S/kern/genassym.sh ia32_genassym.o"		\
	compile-with	"env NM='${NM}' NMFLAGS='${NMFLAGS}' sh $S/kern/genassym.sh ia32_genassym.o > ${.TARGET}" \
	no-obj no-implicit-rule before-depend				\
	clean		"ia32_assym.h"
#
amd64/acpica/acpi_machdep.c	optional	acpi
amd64/acpica/acpi_wakeup.c	optional	acpi
acpi_wakecode.o			optional	acpi			\
	dependency	"$S/amd64/acpica/acpi_wakecode.S assym.inc"	\
	compile-with	"${NORMAL_S}"					\
	no-obj no-implicit-rule before-depend				\
	clean		"acpi_wakecode.o"
acpi_wakecode.bin		optional	acpi			\
	dependency	"acpi_wakecode.o"				\
	compile-with	"${OBJCOPY} -S -O binary acpi_wakecode.o ${.TARGET}" \
	no-obj no-implicit-rule	before-depend				\
	clean		"acpi_wakecode.bin"
acpi_wakecode.h			optional	acpi			\
	dependency	"acpi_wakecode.bin"				\
	compile-with	"file2c -sx 'static char wakecode[] = {' '};' < acpi_wakecode.bin > ${.TARGET}" \
	no-obj no-implicit-rule	before-depend				\
	clean		"acpi_wakecode.h"
acpi_wakedata.h			optional	acpi			\
	dependency	"acpi_wakecode.o"				\
	compile-with	'${NM} -n --defined-only acpi_wakecode.o | while read offset dummy what; do echo "#define	$${what}	0x$${offset}"; done > ${.TARGET}' \
	no-obj no-implicit-rule	before-depend				\
	clean		"acpi_wakedata.h"
#
#amd64/amd64/apic_vector.S	standard
amd64/amd64/bios.c		standard
amd64/amd64/bpf_jit_machdep.c	optional	bpf_jitter
amd64/amd64/copyout.c		standard
amd64/amd64/cpu_switch.S	standard
amd64/amd64/db_disasm.c		optional	ddb
amd64/amd64/db_interface.c	optional	ddb
amd64/amd64/db_trace.c		optional	ddb
amd64/amd64/efirt_machdep.c	optional	efirt
amd64/amd64/efirt_support.S	optional	efirt
amd64/amd64/elf_machdep.c	standard
amd64/amd64/exception.S		standard
amd64/amd64/exec_machdep.c	standard
amd64/amd64/fpu.c		standard
amd64/amd64/gdb_machdep.c	optional	gdb
amd64/amd64/initcpu.c		standard
amd64/amd64/io.c		optional	io
amd64/amd64/locore.S		standard	no-obj
amd64/amd64/xen-locore.S	optional	xenhvm \
	compile-with "${NORMAL_S} -g0" \
	no-ctfconvert
amd64/amd64/machdep.c		standard
amd64/amd64/mem.c		optional	mem
amd64/amd64/minidump_machdep.c	standard
amd64/amd64/mp_machdep.c	optional	smp
amd64/amd64/mpboot.S		optional	smp
amd64/amd64/pmap.c		standard
amd64/amd64/ptrace_machdep.c	standard
amd64/amd64/support.S		standard
amd64/amd64/sys_machdep.c	standard
amd64/amd64/trap.c		standard
amd64/amd64/uio_machdep.c	standard
amd64/amd64/vm_machdep.c	standard
amd64/pci/pci_cfgreg.c		optional	pci
cddl/dev/dtrace/amd64/dtrace_asm.S			optional dtrace compile-with "${DTRACE_S}"
cddl/dev/dtrace/amd64/dtrace_subr.c			optional dtrace compile-with "${DTRACE_C}"
crypto/aesni/aeskeys_amd64.S	optional aesni
crypto/des/des_enc.c		optional	netsmb
crypto/openssl/amd64/aes-gcm-avx512.S	optional ossl
crypto/openssl/amd64/aesni-x86_64.S	optional ossl
crypto/openssl/amd64/aesni-gcm-x86_64.S	optional ossl
crypto/openssl/amd64/chacha-x86_64.S	optional ossl
crypto/openssl/amd64/ghash-x86_64.S	optional ossl
crypto/openssl/amd64/poly1305-x86_64.S	optional ossl
crypto/openssl/amd64/sha1-x86_64.S	optional ossl
crypto/openssl/amd64/sha256-x86_64.S	optional ossl
crypto/openssl/amd64/sha512-x86_64.S	optional ossl
crypto/openssl/amd64/ossl_aes_gcm.c	optional ossl
dev/amdgpio/amdgpio.c		optional	amdgpio
dev/axgbe/if_axgbe_pci.c	optional	axp
dev/axgbe/xgbe-desc.c		optional	axp
dev/axgbe/xgbe-dev.c		optional	axp
dev/axgbe/xgbe-drv.c		optional	axp
dev/axgbe/xgbe-mdio.c		optional	axp
dev/axgbe/xgbe-sysctl.c		optional	axp
dev/axgbe/xgbe-txrx.c		optional	axp
dev/axgbe/xgbe_osdep.c		optional	axp
dev/axgbe/xgbe-i2c.c		optional	axp
dev/axgbe/xgbe-phy-v2.c		optional	axp
dev/enic/enic_res.c		optional	enic
dev/enic/enic_txrx.c		optional	enic
dev/enic/if_enic.c		optional	enic
dev/enic/vnic_cq.c		optional	enic
dev/enic/vnic_dev.c		optional	enic
dev/enic/vnic_intr.c		optional	enic
dev/enic/vnic_rq.c		optional	enic
dev/enic/vnic_wq.c		optional	enic
dev/ftgpio/ftgpio.c		optional	ftgpio superio
dev/hyperv/vmbus/amd64/hyperv_machdep.c		optional	hyperv
dev/hyperv/vmbus/amd64/vmbus_vector.S		optional	hyperv
dev/hyperv/vmbus/hyperv_mmu.c			optional	hyperv
dev/iavf/if_iavf_iflib.c	optional	iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/iavf"
dev/iavf/iavf_lib.c		optional	iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/iavf"
dev/iavf/iavf_osdep.c		optional	iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/iavf"
dev/iavf/iavf_txrx_iflib.c	optional	iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/iavf"
dev/iavf/iavf_common.c		optional	iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/iavf"
dev/iavf/iavf_adminq.c		optional	iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/iavf"
dev/iavf/iavf_vc_common.c	optional	iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/iavf"
dev/iavf/iavf_vc_iflib.c	optional	iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/iavf"
dev/ice/if_ice_iflib.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_lib.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_osdep.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_resmgr.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_strings.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_iflib_recovery_txrx.c	optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_iflib_txrx.c	optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_common.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_controlq.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_dcb.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_flex_pipe.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_flow.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_nvm.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_sched.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_switch.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_vlan_mode.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_fw_logging.c	optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_fwlog.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/ice_rdma.c		optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
dev/ice/irdma_if.m		optional	ice pci \
	compile-with "${NORMAL_M} -I$S/dev/ice"
dev/ice/irdma_di_if.m		optional	ice pci \
	compile-with "${NORMAL_M} -I$S/dev/ice"
dev/ice/ice_ddp_common.c	optional	ice pci \
	compile-with "${NORMAL_C} -I$S/dev/ice"
ice_ddp.c			optional ice_ddp	\
	compile-with	"${AWK} -f $S/tools/fw_stub.awk ice_ddp.fw:ice_ddp:0x01032900 -mice_ddp -c${.TARGET}"	\
	no-ctfconvert no-implicit-rule before-depend local	\
	clean		"ice_ddp.c"
ice_ddp.fwo			optional ice_ddp	\
	dependency	"ice_ddp.fw"			\
	compile-with	"${NORMAL_FWO}"			\
	no-implicit-rule				\
	clean		"ice_ddp.fwo"
ice_ddp.fw			optional ice_ddp	\
	dependency	"$S/contrib/dev/ice/ice-1.3.41.0.pkg" \
	compile-with	"${CP} $S/contrib/dev/ice/ice-1.3.41.0.pkg ice_ddp.fw" \
	no-obj no-implicit-rule				\
	clean		"ice_ddp.fw"
dev/ioat/ioat.c			optional	ioat pci
dev/ioat/ioat_test.c		optional	ioat pci
dev/ixl/if_ixl.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/ixl_pf_main.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/ixl_pf_iflib.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/ixl_pf_qmgr.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/ixl_pf_iov.c		optional	ixl pci  pci_iov \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/ixl_pf_i2c.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/ixl_txrx.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_osdep.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_lan_hmc.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_hmc.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_common.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_nvm.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_adminq.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_dcb.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ncthwm/ncthwm.c		optional	ncthwm superio
dev/qlxge/qls_dbg.c		optional	qlxge pci
dev/qlxge/qls_dump.c		optional	qlxge pci
dev/qlxge/qls_hw.c		optional	qlxge pci
dev/qlxge/qls_ioctl.c		optional	qlxge pci
dev/qlxge/qls_isr.c		optional	qlxge pci
dev/qlxge/qls_os.c		optional	qlxge pci
dev/qlxgb/qla_dbg.c		optional	qlxgb pci
dev/qlxgb/qla_hw.c		optional	qlxgb pci
dev/qlxgb/qla_ioctl.c		optional	qlxgb pci
dev/qlxgb/qla_isr.c		optional	qlxgb pci
dev/qlxgb/qla_misc.c		optional	qlxgb pci
dev/qlxgb/qla_os.c		optional	qlxgb pci
dev/qlxgbe/ql_dbg.c		optional	qlxgbe pci
dev/qlxgbe/ql_hw.c		optional	qlxgbe pci
dev/qlxgbe/ql_ioctl.c		optional	qlxgbe pci
dev/qlxgbe/ql_isr.c		optional	qlxgbe pci
dev/qlxgbe/ql_misc.c		optional	qlxgbe pci
dev/qlxgbe/ql_os.c		optional	qlxgbe pci
dev/qlxgbe/ql_reset.c		optional	qlxgbe pci
dev/qlxgbe/ql_fw.c		optional	qlxgbe pci
dev/qlxgbe/ql_boot.c		optional	qlxgbe pci
dev/qlxgbe/ql_minidump.c	optional	qlxgbe pci
dev/qlnx/qlnxe/ecore_cxt.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_dbg_fw_funcs.c optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_dcbx.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_dev.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_hw.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_init_fw_funcs.c optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_init_ops.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_int.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_l2.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_mcp.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_sp_commands.c optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_spq.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_sriov.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_vf.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_ll2.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_iwarp.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_rdma.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_roce.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_ooo.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/qlnx_rdma.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/qlnx_ioctl.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/qlnx_os.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/sfxge/common/ef10_ev.c	optional	sfxge pci
dev/sfxge/common/ef10_filter.c	optional	sfxge pci
dev/sfxge/common/ef10_image.c	optional	sfxge pci
dev/sfxge/common/ef10_intr.c	optional	sfxge pci
dev/sfxge/common/ef10_mac.c	optional	sfxge pci
dev/sfxge/common/ef10_mcdi.c	optional	sfxge pci
dev/sfxge/common/ef10_nic.c	optional	sfxge pci
dev/sfxge/common/ef10_nvram.c	optional	sfxge pci
dev/sfxge/common/ef10_phy.c	optional	sfxge pci
dev/sfxge/common/ef10_rx.c	optional	sfxge pci
dev/sfxge/common/ef10_tx.c	optional	sfxge pci
dev/sfxge/common/ef10_vpd.c	optional	sfxge pci
dev/sfxge/common/efx_bootcfg.c	optional	sfxge pci
dev/sfxge/common/efx_crc32.c	optional	sfxge pci
dev/sfxge/common/efx_ev.c	optional	sfxge pci
dev/sfxge/common/efx_filter.c	optional	sfxge pci
dev/sfxge/common/efx_hash.c	optional	sfxge pci
dev/sfxge/common/efx_intr.c	optional	sfxge pci
dev/sfxge/common/efx_lic.c	optional	sfxge pci
dev/sfxge/common/efx_mac.c	optional	sfxge pci
dev/sfxge/common/efx_mcdi.c	optional	sfxge pci
dev/sfxge/common/efx_mon.c	optional	sfxge pci
dev/sfxge/common/efx_nic.c	optional	sfxge pci
dev/sfxge/common/efx_nvram.c	optional	sfxge pci
dev/sfxge/common/efx_phy.c	optional	sfxge pci
dev/sfxge/common/efx_port.c	optional	sfxge pci
dev/sfxge/common/efx_rx.c	optional	sfxge pci
dev/sfxge/common/efx_sram.c	optional	sfxge pci
dev/sfxge/common/efx_tunnel.c	optional	sfxge pci
dev/sfxge/common/efx_tx.c	optional	sfxge pci
dev/sfxge/common/efx_vpd.c	optional	sfxge pci
dev/sfxge/common/hunt_nic.c	optional	sfxge pci
dev/sfxge/common/mcdi_mon.c	optional	sfxge pci
dev/sfxge/common/medford_nic.c	optional	sfxge pci
dev/sfxge/common/medford2_nic.c	optional	sfxge pci
dev/sfxge/common/siena_mac.c	optional	sfxge pci
dev/sfxge/common/siena_mcdi.c	optional	sfxge pci
dev/sfxge/common/siena_nic.c	optional	sfxge pci
dev/sfxge/common/siena_nvram.c	optional	sfxge pci
dev/sfxge/common/siena_phy.c	optional	sfxge pci
dev/sfxge/common/siena_sram.c	optional	sfxge pci
dev/sfxge/common/siena_vpd.c	optional	sfxge pci
dev/sfxge/sfxge.c		optional	sfxge pci
dev/sfxge/sfxge_dma.c		optional	sfxge pci
dev/sfxge/sfxge_ev.c		optional	sfxge pci
dev/sfxge/sfxge_intr.c		optional	sfxge pci
dev/sfxge/sfxge_mcdi.c		optional	sfxge pci
dev/sfxge/sfxge_nvram.c		optional	sfxge pci
dev/sfxge/sfxge_port.c		optional	sfxge pci
dev/sfxge/sfxge_rx.c		optional	sfxge pci
dev/sfxge/sfxge_tx.c		optional	sfxge pci
dev/smartpqi/smartpqi_cam.c     optional 	smartpqi
dev/smartpqi/smartpqi_cmd.c     optional 	smartpqi
dev/smartpqi/smartpqi_discovery.c	optional	smartpqi
dev/smartpqi/smartpqi_event.c   optional 	smartpqi
dev/smartpqi/smartpqi_features.c   optional 	smartpqi
dev/smartpqi/smartpqi_helper.c  optional 	smartpqi
dev/smartpqi/smartpqi_init.c    optional 	smartpqi
dev/smartpqi/smartpqi_intr.c    optional 	smartpqi
dev/smartpqi/smartpqi_ioctl.c   optional 	smartpqi
dev/smartpqi/smartpqi_main.c    optional 	smartpqi
dev/smartpqi/smartpqi_mem.c     optional 	smartpqi
dev/smartpqi/smartpqi_misc.c    optional 	smartpqi
dev/smartpqi/smartpqi_queue.c   optional 	smartpqi
dev/smartpqi/smartpqi_request.c optional 	smartpqi
dev/smartpqi/smartpqi_response.c	optional 	smartpqi
dev/smartpqi/smartpqi_sis.c     optional 	smartpqi
dev/smartpqi/smartpqi_tag.c     optional 	smartpqi
dev/sume/if_sume.c		optional	sume
dev/syscons/apm/apm_saver.c	optional	apm_saver apm
dev/tpm/tpm_crb.c		optional	tpm acpi
dev/tpm/tpm_acpi.c		optional	tpm acpi
dev/tpm/tpm_isa.c		optional	tpm isa
dev/p2sb/p2sb.c			optional	p2sb pci
dev/p2sb/lewisburg_gpiocm.c	optional	lbggpiocm p2sb
dev/p2sb/lewisburg_gpio.c	optional	lbggpio lbggpiocm
kern/link_elf_obj.c		standard
#
# IA32 binary support
#
#amd64/ia32/ia32_exception.S	optional	compat_freebsd32
amd64/ia32/ia32_reg.c		optional	compat_freebsd32
amd64/ia32/ia32_signal.c	optional	compat_freebsd32
amd64/ia32/ia32_syscall.c	optional	compat_freebsd32
amd64/ia32/ia32_misc.c		optional	compat_freebsd32
compat/ia32/ia32_sysvec.c	optional	compat_freebsd32
#
# x86 real mode BIOS emulator, required by dpms/pci/vesa
#
compat/x86bios/x86bios.c	optional x86bios | dpms | pci | vesa
contrib/x86emu/x86emu.c		optional x86bios | dpms | pci | vesa
# Common files where we currently configure the system differently, but perhaps shouldn't
# config(8) doesn't have a way to force standard options, so we've been inconsistent
# about marking non-optional things 'standard'.
x86/acpica/madt.c		optional	acpi
x86/isa/atpic.c			optional	atpic isa
x86/isa/elcr.c			optional	atpic isa | mptable
x86/isa/isa.c			standard
x86/isa/isa_dma.c		standard
x86/pci/pci_early_quirks.c	optional	pci
x86/x86/io_apic.c		standard
x86/x86/local_apic.c		standard
x86/x86/mptable.c		optional	mptable
x86/x86/mptable_pci.c		optional	mptable pci
x86/x86/msi.c			optional	pci
x86/xen/pv.c			optional	xenhvm

# zfs blake3 hash support
contrib/openzfs/module/icp/asm-x86_64/blake3/blake3_avx2.S      optional zfs compile-with "${ZFS_S}"
contrib/openzfs/module/icp/asm-x86_64/blake3/blake3_avx512.S    optional zfs compile-with "${ZFS_S}"
contrib/openzfs/module/icp/asm-x86_64/blake3/blake3_sse2.S      optional zfs compile-with "${ZFS_S}"
contrib/openzfs/module/icp/asm-x86_64/blake3/blake3_sse41.S     optional zfs compile-with "${ZFS_S}"

# zfs sha2 hash support
zfs-sha256-x86_64.o		optional	zfs			\
	dependency "$S/contrib/openzfs/module/icp/asm-x86_64/sha2/sha256-x86_64.S" \
	compile-with	"${CC} -c ${ZFS_ASM_CFLAGS} -o ${.TARGET} ${WERROR} $S/contrib/openzfs/module/icp/asm-x86_64/sha2/sha256-x86_64.S" \
	no-implicit-rule \
	clean "zfs-sha256-x86_64.o"

zfs-sha512-x86_64.o		optional	zfs			\
	dependency "$S/contrib/openzfs/module/icp/asm-x86_64/sha2/sha512-x86_64.S" \
	compile-with	"${CC} -c ${ZFS_ASM_CFLAGS} -o ${.TARGET} ${WERROR} $S/contrib/openzfs/module/icp/asm-x86_64/sha2/sha512-x86_64.S" \
	no-implicit-rule \
	clean "zfs-sha512-x86_64.o"

# zfs checksums / zcommon
contrib/openzfs/module/zcommon/zfs_fletcher_avx512.c		optional zfs compile-with "${ZFS_C}"
contrib/openzfs/module/zcommon/zfs_fletcher_intel.c		optional zfs compile-with "${ZFS_C}"
contrib/openzfs/module/zcommon/zfs_fletcher_sse.c		optional zfs compile-with "${ZFS_C}"

contrib/openzfs/module/zfs/vdev_raidz_math_avx2.c		optional zfs compile-with "${ZFS_C}"
contrib/openzfs/module/zfs/vdev_raidz_math_avx512bw.c		optional zfs compile-with "${ZFS_C}"
contrib/openzfs/module/zfs/vdev_raidz_math_avx512f.c		optional zfs compile-with "${ZFS_C}"
contrib/openzfs/module/zfs/vdev_raidz_math_sse2.c		optional zfs compile-with "${ZFS_C}"
contrib/openzfs/module/zfs/vdev_raidz_math_ssse3.c		optional zfs compile-with "${ZFS_C}"
# Clock calibration subroutine; uses floating-point arithmetic
subr_clockcalib.o		standard				\
	dependency	"$S/kern/subr_clockcalib.c"			\
	compile-with	"${CC} -c ${CFLAGS:C/^-O2$/-O3/:N-nostdinc} ${WERROR} -mmmx -msse -msse2 ${.IMPSRC}" \
	no-implicit-rule						\
	clean		"subr_clockcalib.o"
