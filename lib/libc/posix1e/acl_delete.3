.\"-
.\" Copyright (c) 2000, 2002 Robert N. M. Watson
.\" All rights reserved.
.\"
.\" This software was developed by Robert Watson for the TrustedBSD Project.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd December 29, 2002
.Dt ACL_DELETE 3
.Os
.Sh NAME
.Nm acl_delete_def_file ,
.Nm acl_delete_def_link_np ,
.Nm acl_delete_fd_np ,
.Nm acl_delete_file_np ,
.Nm acl_delete_link_np
.Nd delete an ACL from a file
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/types.h
.In sys/acl.h
.Ft int
.Fn acl_delete_def_file "const char *path_p"
.Ft int
.Fn acl_delete_def_link_np "const char *path_p"
.Ft int
.Fn acl_delete_fd_np "int filedes" "acl_type_t type"
.Ft int
.Fn acl_delete_file_np "const char *path_p" "acl_type_t type"
.Ft int
.Fn acl_delete_link_np "const char *path_p" "acl_type_t type"
.Sh DESCRIPTION
The
.Fn acl_delete_def_file ,
.Fn acl_delete_def_link_np ,
.Fn acl_delete_fd_np ,
.Fn acl_delete_file_np ,
and
.Fn acl_delete_link_np
each allow the deletion of an ACL from a file.
The
.Fn acl_delete_def_file
function
is a POSIX.1e call that deletes the default ACL from a file (normally a
directory) by name; the remainder of the calls are non-portable extensions
that permit the deletion of arbitrary ACL types from a file/directory
either by path name or file descriptor.
The
.Fn _file
variations follow a symlink if it occurs in the last segment of the
path name; the
.Fn _link
variations operate on the symlink itself.
.Sh IMPLEMENTATION NOTES
.Fx Ns 's
support for POSIX.1e interfaces and features is still under
development at this time.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
If any of the following conditions occur, these functions shall return -1
and set
.Va errno
to the corresponding value:
.Bl -tag -width Er
.It Bq Er EACCES
Search permission is denied for a component of the path prefix, or the
object exists and the process does not have appropriate access rights.
.It Bq Er EBADF
The
.Va fd
argument is not a valid file descriptor.
.It Bq Er EINVAL
The ACL type passed is invalid for this file object.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 255 characters, or an
entire path name exceeded 1023 characters.
.It Bq Er ENOENT
The named object does not exist, or the
.Va path_p
argument points to an empty string.
.It Bq Er ENOMEM
Insufficient memory available to fulfill request.
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.Pp
Argument
.Va path_p
must be a directory, and is not.
.It Bq Er EOPNOTSUPP
The file system does not support ACL deletion.
.It Bq Er EPERM
The process does not have appropriate privilege to perform the operation
to delete an ACL.
.It Bq Er EROFS
The file system is read-only.
.El
.Sh SEE ALSO
.Xr acl 3 ,
.Xr acl_get 3 ,
.Xr acl_set 3 ,
.Xr posix1e 3
.Sh STANDARDS
POSIX.1e is described in IEEE POSIX.1e draft 17.
Discussion
of the draft continues on the cross-platform POSIX.1e implementation
mailing list.
To join this list, see the
.Fx
POSIX.1e implementation
page for more information.
.Sh HISTORY
POSIX.1e support was introduced in
.Fx 4.0 ,
and development continues.
.Sh AUTHORS
.An Robert N M Watson
