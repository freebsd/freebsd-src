.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd May 11, 2010
.Dt STRTOD 3
.Os
.Sh NAME
.Nm strtod , strtof , strtold
.Nd convert
.Tn ASCII
string to floating point
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In stdlib.h
.Ft double
.Fn strtod "const char * restrict nptr" "char ** restrict endptr"
.Ft float
.Fn strtof "const char * restrict nptr" "char ** restrict endptr"
.Ft "long double"
.Fn strtold "const char * restrict nptr" "char ** restrict endptr"
.Sh DESCRIPTION
These conversion
functions convert the initial portion of the string
pointed to by
.Fa nptr
to
.Vt double ,
.Vt float ,
and
.Vt "long double"
representation, respectively.
.Pp
The expected form of the string is an optional plus (``+'') or minus
sign (``\-'') followed by either:
.Bl -bullet
.It
a decimal significand consisting of a sequence of decimal digits
optionally containing a decimal-point character, or
.It
a hexadecimal significand consisting of a ``0X'' or ``0x'' followed
by a sequence of hexadecimal digits optionally containing a
decimal-point character.
.El
.Pp
In both cases, the significand may be optionally followed by an
exponent.
An exponent consists of an ``E'' or ``e'' (for decimal
constants) or a ``P'' or ``p'' (for hexadecimal constants),
followed by an optional plus or minus sign, followed by a
sequence of decimal digits.
For decimal constants, the exponent indicates the power of 10 by
which the significand should be scaled.
For hexadecimal constants, the scaling is instead done by powers
of 2.
.Pp
Alternatively, if the portion of the string following the optional
plus or minus sign begins with
.Dq INFINITY
or
.Dq NAN ,
ignoring case, it is interpreted as an infinity or a quiet \*(Na,
respectively.
The syntax
.Dq Xo Pf NAN( Ar "s" ) Xc ,
where
.Ar s
is an alphanumeric string, produces the same value as the call
.Fo nan
.Qq Ar s Ns
.Fc
(respectively,
.Fo nanf
.Qq Ar s Ns
.Fc
and
.Fo nanl
.Qq Ar s Ns
.Fc . )
.Pp
In any of the above cases, leading white-space characters in the
string (as defined by the
.Xr isspace 3
function) are skipped.
The decimal point
character is defined in the program's locale (category
.Dv LC_NUMERIC ) .
.Sh RETURN VALUES
The
.Fn strtod ,
.Fn strtof ,
and
.Fn strtold
functions return the converted value, if any.
.Pp
If
.Fa endptr
is not
.Dv NULL ,
a pointer to the character after the last character used
in the conversion is stored in the location referenced by
.Fa endptr .
.Pp
If no conversion is performed, zero is returned and the value of
.Fa nptr
is stored in the location referenced by
.Fa endptr .
.Pp
If the correct value would cause overflow, plus or minus
.Dv HUGE_VAL ,
.Dv HUGE_VALF ,
or
.Dv HUGE_VALL
is returned (according to the sign and type of the return value), and
.Er ERANGE
is stored in
.Va errno .
If the correct value would cause underflow, zero is
returned and
.Er ERANGE
is stored in
.Va errno .
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er ERANGE
Overflow or underflow occurred.
.El
.Sh SEE ALSO
.Xr atof 3 ,
.Xr atoi 3 ,
.Xr atol 3 ,
.Xr nan 3 ,
.Xr strtol 3 ,
.Xr strtoul 3 ,
.Xr wcstod 3
.Sh STANDARDS
The
.Fn strtod
function
conforms to
.St -isoC-99 .
.Sh AUTHORS
The author of this software is
.An David M. Gay .
.Bd -literal
Copyright (c) 1998 by Lucent Technologies
All Rights Reserved

Permission to use, copy, modify, and distribute this software and
its documentation for any purpose and without fee is hereby
granted, provided that the above copyright notice appear in all
copies and that both that the copyright notice and this
permission notice and warranty disclaimer appear in supporting
documentation, and that the name of Lucent or any of its entities
not be used in advertising or publicity pertaining to
distribution of the software without specific, written prior
permission.

LUCENT DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.
IN NO EVENT SHALL LUCENT OR ANY OF ITS ENTITIES BE LIABLE FOR ANY
SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
THIS SOFTWARE.
.Ed
