.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd June 27, 2022
.Dt GETNETENT 3
.Os
.Sh NAME
.Nm getnetent ,
.Nm getnetbyaddr ,
.Nm getnetbyname ,
.Nm setnetent ,
.Nm endnetent
.Nd get network entry
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In netdb.h
.Ft struct netent *
.Fn getnetent void
.Ft struct netent *
.Fn getnetbyname "const char *name"
.Ft struct netent *
.Fn getnetbyaddr "uint32_t net" "int type"
.Ft void
.Fn setnetent "int stayopen"
.Ft void
.Fn endnetent void
.Ft int
.Fn getnetent_r "struct netent *ne" "char *buffer" "size_t buflen" "struct netent **result" "int *h_errnop"
.Ft int
.Fn getnetbyaddr_r "uint32_t net" "int type" "struct netent *ne" "char *buffer" "size_t buflen" "struct netent **result" int *h_errorp"
.Ft int
.Fn getnetbyname_r "const char *name" "struct netent *ne" "char *buffer" "size_t buflen" "struct netent **result" "int *h_errorp"
.Sh DESCRIPTION
The
.Fn getnetent ,
.Fn getnetbyname ,
and
.Fn getnetbyaddr
functions
each return a pointer to an object with the
following structure describing an internet network.
This structure contains either the information obtained
from the nameserver, broken-out fields of a line in the network data base
.Pa /etc/networks ,
or entries supplied by the
.Xr yp 8
system.
The order of the lookups is controlled by the
`networks' entry in
.Xr nsswitch.conf 5 .
.Bd -literal -offset indent
struct netent {
	char		*n_name;	/* official name of net */
	char		**n_aliases;	/* alias list */
	int		n_addrtype;	/* net number type */
	uint32_t	n_net;		/* net number */
};
.Ed
.Pp
The members of this structure are:
.Bl -tag -width n_addrtype
.It Fa n_name
The official name of the network.
.It Fa n_aliases
A zero terminated list of alternate names for the network.
.It Fa n_addrtype
The type of the network number returned; currently only AF_INET.
.It Fa n_net
The network number.
Network numbers are returned in machine byte
order.
.El
.Pp
The
.Fn getnetent
function
reads the next line of the file, opening the file if necessary.
.Pp
The
.Fn setnetent
function
opens and rewinds the file.
If the
.Fa stayopen
flag is non-zero,
the net data base will not be closed after each call to
.Fn getnetbyname
or
.Fn getnetbyaddr .
.Pp
The
.Fn endnetent
function
closes the file.
.Pp
The
.Fn getnetbyname
function
and
.Fn getnetbyaddr
sequentially search from the beginning
of the file until a matching
net name or
net address and type is found,
or until
.Dv EOF
is encountered.
The
.Fa type
argument
must be
.Dv AF_INET .
Network numbers are supplied in host order.
.Pp
Functions with the
.Em _r
suffix provide reentrant versions of their respective counterparts.
The caller must supply five additional parameters: a
.Vt struct netent
variable to be filled on success, a
.Va buffer
of
.Va buflen
bytes in size, a
.Vt struct netent
.Va result
variable that will point to the result on success or be set to
.Dv NULL
on failure or if the name is not found.
The
.Va h_errnop
variable will be filled with the error code if any.
All these functions return 0 on success.
.Sh FILES
.Bl -tag -width /etc/nsswitch.conf -compact
.It Pa /etc/networks
.It Pa /etc/nsswitch.conf
.It Pa /etc/resolv.conf
.El
.Sh DIAGNOSTICS
Null pointer returned on
.Dv EOF
or error.
.Sh SEE ALSO
.Xr networks 5
.Pp
.%T RFC 1101
.Sh HISTORY
The
.Fn getnetent ,
.Fn getnetbyaddr ,
.Fn getnetbyname ,
.Fn setnetent ,
and
.Fn endnetent
functions appeared in
.Bx 4.2 .
.Sh BUGS
The data space used by
these functions is thread-specific; if future use requires the data, it should be
copied before any subsequent calls to these functions overwrite it.
Only Internet network
numbers are currently understood.
Expecting network numbers to fit
in no more than 32 bits is probably
naive.
