.\" Copyright (c) 2002-2004 Tim J. Robbins
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd April 7, 2004
.Dt MBRLEN 3
.Os
.Sh NAME
.Nm mbrlen
.Nd "get number of bytes in a character (restartable)"
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In wchar.h
.Ft size_t
.Fn mbrlen "const char * restrict s" "size_t n" "mbstate_t * restrict ps"
.Sh DESCRIPTION
The
.Fn mbrlen
function inspects at most
.Fa n
bytes pointed to by
.Fa s
to determine the number of bytes needed to complete the next
multibyte character.
.Pp
The
.Vt mbstate_t
argument,
.Fa ps ,
is used to keep track of the shift state.
If it is
.Dv NULL ,
.Fn mbrlen
uses an internal, static
.Vt mbstate_t
object, which is initialized to the initial conversion state
at program startup.
.Pp
It is equivalent to:
.Pp
.Dl "mbrtowc(NULL, s, n, ps);"
.Pp
Except that when
.Fa ps
is a
.Dv NULL
pointer,
.Fn mbrlen
uses its own static, internal
.Vt mbstate_t
object to keep track of the shift state.
.Sh RETURN VALUES
The
.Fn mbrlen
functions returns:
.Bl -tag -width indent
.It 0
The next
.Fa n
or fewer bytes
represent the null wide character
.Pq Li "L'\e0'" .
.It >0
The next
.Fa n
or fewer bytes
represent a valid character,
.Fn mbrlen
returns the number of bytes used to complete the multibyte character.
.It Po Vt size_t Pc Ns \-2
The next
.Fa n
contribute to, but do not complete, a valid multibyte character sequence,
and all
.Fa n
bytes have been processed.
.It Po Vt size_t Pc Ns \-1
An encoding error has occurred.
The next
.Fa n
or fewer bytes do not contribute to a valid multibyte character.
.El
.Sh EXAMPLES
A function that calculates the number of characters in a multibyte
character string:
.Bd -literal -offset indent
size_t
nchars(const char *s)
{
	size_t charlen, chars;
	mbstate_t mbs;

	chars = 0;
	memset(&mbs, 0, sizeof(mbs));
	while ((charlen = mbrlen(s, MB_CUR_MAX, &mbs)) != 0 &&
	    charlen != (size_t)-1 && charlen != (size_t)-2) {
		s += charlen;
		chars++;
	}

	return (chars);
}
.Ed
.Sh ERRORS
The
.Fn mbrlen
function will fail if:
.Bl -tag -width Er
.It Bq Er EILSEQ
An invalid multibyte sequence was detected.
.It Bq Er EINVAL
The conversion state is invalid.
.El
.Sh SEE ALSO
.Xr mblen 3 ,
.Xr mbrtowc 3 ,
.Xr multibyte 3
.Sh STANDARDS
The
.Fn mbrlen
function conforms to
.St -isoC-99 .
