.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd April 2, 2022
.Dt FSEEK 3
.Os
.Sh NAME
.Nm fgetpos ,
.Nm fseek ,
.Nm fseeko ,
.Nm fsetpos ,
.Nm ftell ,
.Nm ftello ,
.Nm rewind
.Nd reposition a stream
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In stdio.h
.Ft int
.Fn fseek "FILE *stream" "long offset" "int whence"
.Ft long
.Fn ftell "FILE *stream"
.Ft void
.Fn rewind "FILE *stream"
.Ft int
.Fn fgetpos "FILE * restrict stream" "fpos_t * restrict pos"
.Ft int
.Fn fsetpos "FILE *stream" "const fpos_t *pos"
.In sys/types.h
.Ft int
.Fn fseeko "FILE *stream" "off_t offset" "int whence"
.Ft off_t
.Fn ftello "FILE *stream"
.Sh DESCRIPTION
The
.Fn fseek
function sets the file position indicator for the stream pointed
to by
.Fa stream .
The new position, measured in bytes, is obtained by adding
.Fa offset
bytes to the position specified by
.Fa whence .
If
.Fa whence
is set to
.Dv SEEK_SET ,
.Dv SEEK_CUR ,
or
.Dv SEEK_END ,
the offset is relative to the
start of the file, the current position indicator, or end-of-file,
respectively.
A successful call to the
.Fn fseek
function clears the end-of-file indicator for the stream and undoes
any effects of the
.Xr ungetc 3
and
.Xr ungetwc 3
functions on the same stream.
.Pp
The
.Fn ftell
function
obtains the current value of the file position indicator for the
stream pointed to by
.Fa stream .
.Pp
The
.Fn rewind
function sets the file position indicator for the stream pointed
to by
.Fa stream
to the beginning of the file.
It is equivalent to:
.Pp
.Dl (void)fseek(stream, 0L, SEEK_SET)
.Pp
except that the error indicator for the stream is also cleared
(see
.Xr clearerr 3 ) .
.Pp
Since
.Fn rewind
does not return a value,
an application wishing to detect errors should clear
.Va errno ,
then call
.Fn rewind ,
and if
.Va errno
is non-zero, assume an error has occurred.
.Pp
The
.Fn fseeko
function is identical to
.Fn fseek ,
except it takes an
.Fa off_t
argument
instead of a
.Fa long .
Likewise, the
.Fn ftello
function is identical to
.Fn ftell ,
except it returns an
.Fa off_t .
.Pp
The
.Fn fgetpos
and
.Fn fsetpos
functions
are alternate interfaces for retrieving and setting the current position in
the file, similar to
.Fn ftell
and
.Fn fseek ,
except that the current position is stored in an opaque object of
type
.Vt fpos_t
pointed to by
.Fa pos .
These functions provide a portable way to seek to offsets larger than
those that can be represented by a
.Vt long int .
They may also store additional state information in the
.Vt fpos_t
object to facilitate seeking within files containing multibyte
characters with state-dependent encodings.
Although
.Vt fpos_t
has traditionally been an integral type,
applications cannot assume that it is;
in particular, they must not perform arithmetic on objects
of this type.
.Pp
If the stream is a wide character stream (see
.Xr fwide 3 ) ,
the position specified by the combination of
.Fa offset
and
.Fa whence
must contain the first byte of a multibyte sequence.
.Sh RETURN VALUES
The
.Fn rewind
function
returns no value.
.Pp
.Rv -std fgetpos fseek fseeko fsetpos
.Pp
Upon successful completion,
.Fn ftell
and
.Fn ftello
return the current offset.
Otherwise, \-1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa stream
argument
is not a seekable stream.
.It Bq Er EINVAL
The
.Fa whence
argument is invalid or
the resulting file-position
indicator would be set to a negative value.
.It Bq Er EOVERFLOW
The resulting file offset would be a value which
cannot be represented correctly in an object of type
.Fa off_t
for
.Fn fseeko
and
.Fn ftello
or
.Fa long
for
.Fn fseek
and
.Fn ftell .
.It Bq Er ESPIPE
The file descriptor underlying stream is associated with a pipe or FIFO
or file-position indicator value is unspecified
(see
.Xr ungetc 3 ) .
.El
.Pp
The functions
.Fn fgetpos ,
.Fn fseek ,
.Fn fseeko ,
.Fn fsetpos ,
.Fn ftell ,
.Fn ftello ,
and
.Fn rewind
may also fail and set
.Va errno
for any of the errors specified for the routines
.Xr fflush 3 ,
.Xr fstat 2 ,
.Xr lseek 2 ,
and
.Xr malloc 3 .
.Sh SEE ALSO
.Xr lseek 2 ,
.Xr clearerr 3 ,
.Xr fwide 3 ,
.Xr ungetc 3 ,
.Xr ungetwc 3
.Sh STANDARDS
The
.Fn fgetpos ,
.Fn fsetpos ,
.Fn fseek ,
.Fn ftell ,
and
.Fn rewind
functions
conform to
.St -isoC .
.Pp
The
.Fn fseeko
and
.Fn ftello
functions conform to
.St -p1003.1-2001 .
.Sh HISTORY
The functions
.Fn fseek ,
.Fn ftell ,
and
.Fn rewind
first appeared in
.At v7 .
