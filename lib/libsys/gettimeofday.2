.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd April 28, 2024
.Dt GETTIMEOFDAY 2
.Os
.Sh NAME
.Nm gettimeofday ,
.Nm settimeofday
.Nd get/set date and time
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/time.h
.Ft int
.Fn gettimeofday "struct timeval *tp" "struct timezone *tzp"
.Ft int
.Fn settimeofday "const struct timeval *tp" "const struct timezone *tzp"
.Sh DESCRIPTION
.Em Note :
The
.Nm gettimeofday
function
.Po but not
.Nm settimeofday Pc
is obsolescent.
See the
.Sx STANDARDS
section for more details.
.Pp
The system's notion of the current Greenwich time and the current time
zone is obtained with the
.Fn gettimeofday
system call, and set with the
.Fn settimeofday
system call.
The time is expressed in seconds and microseconds
since midnight (0 hour), January 1, 1970.
The resolution of the system
clock is hardware dependent, and the time may be updated continuously or
in
.Dq ticks .
If
.Fa tp
or
.Fa tzp
is NULL, the associated time
information will not be returned or set.
.Pp
The structures pointed to by
.Fa tp
and
.Fa tzp
are defined in
.In sys/time.h
as:
.Bd -literal
struct timeval {
	time_t		tv_sec;		/* seconds */
	suseconds_t	tv_usec;	/* and microseconds */
};

struct timezone {
	int	tz_minuteswest; /* minutes west of Greenwich */
	int	tz_dsttime;	/* type of dst correction */
};
.Ed
.Pp
The
.Vt timezone
structure indicates the local time zone
(measured in minutes of time westward from Greenwich),
and a flag that, if nonzero, indicates that
Daylight Saving time applies locally during
the appropriate part of the year.
The kernel generally does not track these values and they
are usually returned as zero.
Use
.Xr localtime 3
to find the offset for the currently active timezone.
.Pp
Only the super-user may set the time of day or time zone.
If the system is running at securelevel >= 2 (see
.Xr init 8 ) ,
the time may only be advanced or retarded by a maximum of one second.
This limitation is imposed to prevent a malicious super-user
from setting arbitrary time stamps on files.
The system time can be adjusted backwards without restriction using the
.Xr adjtime 2
system call even when the system is secure.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The following error codes may be set in
.Va errno :
.Bl -tag -width Er
.It Bq Er EINVAL
The supplied
.Fa timeval
value is invalid.
.It Bq Er EPERM
A user other than the super-user attempted to set the time.
.El
.Sh SEE ALSO
.Xr date 1 ,
.Xr adjtime 2 ,
.Xr clock_gettime 2 ,
.Xr ctime 3 ,
.Xr timeradd 3 ,
.Xr clocks 7
.Sh STANDARDS
The
.Nm gettimeofday
function is considered obsolescent and its usage discouraged by
.\" XXX: This should be replaced in the future when an appropriate argument to
.\" the St macro is available: -p1003.1-2017
.No IEEE Std 1003.1-2008, 2017 Edition (\\(LqPOSIX.1\\(Rq) .
Applications should use the
.Xr clock_gettime 2
function instead.
.Sh HISTORY
The
.Fn gettimeofday
system call appeared in
.Bx 4.2 .
