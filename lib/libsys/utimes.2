.\"	$NetBSD: utimes.2,v 1.13 1999/03/22 19:45:11 garbled Exp $
.\"
.\" Copyright (c) 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd March 30, 2020
.Dt UTIMES 2
.Os
.Sh NAME
.Nm utimes ,
.Nm lutimes ,
.Nm futimes ,
.Nm futimesat
.Nd set file access and modification times
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/time.h
.Ft int
.Fn utimes "const char *path" "const struct timeval *times"
.Ft int
.Fn lutimes "const char *path" "const struct timeval *times"
.Ft int
.Fn futimes "int fd" "const struct timeval *times"
.Ft int
.Fn futimesat "int fd" "const char *path" "const struct timeval times[2]"
.Sh DESCRIPTION
.Bf -symbolic
These interfaces are obsoleted by
.Xr futimens 2
and
.Xr utimensat 2
because they are not accurate to nanoseconds.
.Ef
.Pp
The access and modification times of the file named by
.Fa path
or referenced by
.Fa fd
are changed as specified by the argument
.Fa times .
.Pp
If
.Fa times
is
.Dv NULL ,
the access and modification times are set to the current time.
The caller must be the owner of the file, have permission to
write the file, or be the super-user.
.Pp
If
.Fa times
is
.No non- Ns Dv NULL ,
it is assumed to point to an array of two timeval structures.
The access time is set to the value of the first element, and the
modification time is set to the value of the second element.
For file systems that support file birth (creation) times (such as
.Dv UFS2 ) ,
the birth time will be set to the value of the second element
if the second element is older than the currently set birth time.
To set both a birth time and a modification time,
two calls are required; the first to set the birth time
and the second to set the (presumably newer) modification time.
Ideally a new system call will be added that allows the setting
of all three times at once.
The caller must be the owner of the file or be the super-user.
.Pp
In either case, the inode-change-time of the file is set to the current
time.
.Pp
The
.Fn lutimes
system call
is like
.Fn utimes
except in the case where the named file is a symbolic link,
in which case
.Fn lutimes
changes the access and modification times of the link,
while
.Fn utimes
changes the times of the file the link references.
.Pp
The
.Fn futimesat
system call is equivalent to
.Fn utimes
except in the case where
.Fa path
specifies a relative path.
In this case the access and modification time
is set to that of a file relative to the directory associated with the file
descriptor
.Fa fd
instead of the current working directory.
If
.Fn futimesat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fd
parameter, the current working directory is used and the behavior
is identical to a call to
.Fn utimes .
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
All of the system call will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er EACCES
The
.Fa times
argument is
.Dv NULL
and the effective user ID of the process does not
match the owner of the file, and is not the super-user, and write
access is denied.
.It Bq Er EFAULT
The
.Fa path
or
.Fa times
argument
points outside the process's allocated address space.
.It Bq Er EFAULT
The
.Fa times
argument
points outside the process's allocated address space.
.It Bq Er EINVAL
The
.Va tv_usec
component of at least one of the values specified by the
.Fa times
argument has a value less than 0 or greater than 999999.
.It Bq Er EIO
An I/O error occurred while reading or writing the affected inode.
.It Bq Er EINTEGRITY
Corrupted data was detected while reading from the file system.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv NAME_MAX
characters, or an entire path name exceeded
.Dv PATH_MAX
characters.
.It Bq Er ENOENT
The named file does not exist.
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er EPERM
The
.Fa times
argument is not
.Dv NULL
and the calling process's effective user ID
does not match the owner of the file and is not the super-user.
.It Bq Er EPERM
The named file has its immutable or append-only flags set.
See the
.Xr chflags 2
manual page for more information.
.It Bq Er EROFS
The file system containing the file is mounted read-only.
.El
.Pp
The
.Fn futimes
system call
will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa fd
argument
does not refer to a valid descriptor.
.El
.Pp
In addition to the errors returned by the
.Fn utimes ,
the
.Fn futimesat
may fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa path
argument does not specify an absolute path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor open for searching.
.It Bq Er ENOTDIR
The
.Fa path
argument is not an absolute path and
.Fa fd
is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory.
.El
.Sh SEE ALSO
.Xr chflags 2 ,
.Xr stat 2 ,
.Xr utimensat 2 ,
.Xr utime 3
.Sh STANDARDS
The
.Fn utimes
function is expected to conform to
.St -xpg4.2 .
The
.Fn futimesat
system call follows The Open Group Extended API Set 2 specification
but was replaced by
.Fn utimensat
in
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn utimes
system call appeared in
.Bx 4.2 .
The
.Fn futimes
and
.Fn lutimes
system calls first appeared in
.Fx 3.0 .
The
.Fn futimesat
system call appeared in
.Fx 8.0 .
