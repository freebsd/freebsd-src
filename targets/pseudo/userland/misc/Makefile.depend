# This file is not autogenerated - take care!

.if !defined(MK_FORTH)
.include <src.opts.mk>
.endif

DEP_MACHINE?= ${MACHINE}

_sys_boot_efi= stand/efi/loader stand/efi/boot1
.if ${MK_FDT} != "no"
_sys_boot_fdt= stand/fdt stand/efi/fdt
.endif
.if ${MK_ZFS} != "no"
_sys_boot_zfs= stand/zfs
.endif

DIRDEPS = \
	etc \
	etc/newsyslog.conf.d \
	etc/sendmail \
	rescue/librescue \
	rescue/rescue \

.if ${MK_BOOT} != "no"
DIRDEPS+= stand/common

.if ${MK_FORTH} != "no"
DIRDEPS+= \
	stand/ficl \
	stand/forth \

.endif

DIRDEPS.x86sys= \
	stand/efi/libefi \
	stand/geli \
	stand/i386/boot0 \
	stand/i386/boot0sio \
	stand/i386/boot2 \
	stand/i386/btx/btx \
	stand/i386/btx/btxldr \
	stand/i386/btx/lib \
	stand/i386/cdboot \
	stand/i386/gptboot \
	stand/i386/libfirewire \
	stand/i386/libi386 \
	stand/i386/loader \
	stand/i386/mbr \
	stand/i386/pmbr \
	stand/i386/pxeldr \
	stand/libsa32 \
	${_sys_boot_zfs} \

.if ${MK_ZFS} != "no"
DIRDEPS.x86sys+= \
	stand/i386/gptzfsboot \
	stand/i386/zfsboot \
	stand/i386/zfsloader \

DIRDEPS+= \
	sbin/zfsbootcfg \

.endif

DIRDEPS.amd64= \
	${DIRDEPS.x86sys} \
	${_sys_boot_efi} \
	stand/ficl32 \
	stand/userboot/test \
	stand/userboot/userboot \

.if ${MK_ZFS} != "no"
DIRDEPS.amd64+= \
	stand/zfs32 \

.endif

.if ${MK_EFI} != "no"
DIRDEPS+= \
	usr.sbin/efivar \

.endif

DIRDEPS.arm= ${_sys_boot_fdt} ${_sys_boot_efi}
DIRDEPS.arm64= ${_sys_boot_fdt} ${_sys_boot_efi}
DIRDEPS.i386= ${DIRDEPS.x86sys} ${_sys_boot_efi}
DIRDEPS.powerpc= ${_sys_boot_fdt} stand/libsa32 stand/ofw stand/uboot
.endif

DIRDEPS+= ${DIRDEPS.${DEP_MACHINE}:U}

.if ${DEP_MACHINE} == "amd64"
# do not build stand/i386 for amd64
DIRDEPS:= ${DIRDEPS:Nstand/i386*} ${DIRDEPS:Mstand/i386*:S/$/.i386,i386/}
.endif

.include <dirdeps.mk>
