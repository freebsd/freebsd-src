#!/bin/sh

# panic: AEAD without a separate IV
# cpuid = 18
# time = 1620305816
# KDB: stack backtrace:
# db_trace_self_wrapper() at db_trace_self_wrapper+0x2b/frame 0xfffffe01aeea25d0
# vpanic() at vpanic+0x181/frame 0xfffffe01aeea2620
# panic() at panic+0x43/frame 0xfffffe01aeea2680
# crp_sanity() at crp_sanity+0x4e9/frame 0xfffffe01aeea26b0
# crypto_dispatch() at crypto_dispatch+0xf/frame 0xfffffe01aeea26d0
# crypto_ioctl() at crypto_ioctl+0x1e33/frame 0xfffffe01aeea27e0
# devfs_ioctl() at devfs_ioctl+0xcd/frame 0xfffffe01aeea2830
# VOP_IOCTL_APV() at VOP_IOCTL_APV+0x59/frame 0xfffffe01aeea2850
# vn_ioctl() at vn_ioctl+0x133/frame 0xfffffe01aeea2960
# devfs_ioctl_f() at devfs_ioctl_f+0x1e/frame 0xfffffe01aeea2980
# kern_ioctl() at kern_ioctl+0x289/frame 0xfffffe01aeea29f0
# sys_ioctl() at sys_ioctl+0x12a/frame 0xfffffe01aeea2ac0
# amd64_syscall() at amd64_syscall+0x147/frame 0xfffffe01aeea2bf0
# fast_syscall_common() at fast_syscall_common+0xf8/frame 0xfffffe01aeea2bf0
# --- syscall (0, FreeBSD ELF64, nosys), rip = 0x8003827da, rsp = 0x7fffffffe848, rbp = 0x7fffffffe890 ---
# KDB: enter: panic
# [ thread pid 4018 tid 100350 ]
# Stopped at      kdb_enter+0x37: movq    $0,0x1282a9e(%rip)
# db> x/s version
# version: FreeBSD 14.0-CURRENT #0 main-n246502-49c894ddced: Thu May  6 09:17:33 CEST 2021
# pho@t2.osted.lan:/usr/src/sys/amd64/compile/PHO
# db>

[ `uname -p` != "amd64" ] && exit 0
[ `id -u ` -ne 0 ] && echo "Must be root!" && exit 1

. ../default.cfg
cat > /tmp/syzkaller35.c <<EOF
// https://syzkaller.appspot.com/bug?id=53246f1d9a11588c630ff9e2676551ee0a2757a4
// autogenerated by syzkaller (https://github.com/google/syzkaller)
// Reported-by: syzbot+007341439ae295cee74f@syzkaller.appspotmail.com

#define _GNU_SOURCE

#include <pwd.h>
#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/endian.h>
#include <sys/syscall.h>
#include <unistd.h>

uint64_t r[1] = {0xffffffffffffffff};

int main(void)
{
  syscall(SYS_mmap, 0x20000000ul, 0x1000000ul, 7ul, 0x1012ul, -1, 0ul);
  intptr_t res = 0;
  memcpy((void*)0x20000340, "/dev/crypto\000", 12);
  res = syscall(SYS_openat, 0xffffffffffffff9cul, 0x20000340ul, 0ul, 0ul);
  if (res != -1)
    r[0] = res;
  *(uint32_t*)0x20000440 = 0x28;
  *(uint32_t*)0x20000444 = 0;
  *(uint32_t*)0x20000448 = 0x10;
  *(uint64_t*)0x20000450 = 0x20000380;
  memcpy((void*)0x20000380,
         "\x3c\x02\x2e\x61\x79\x2e\xec\xb0\x7f\x8a\xee\x18\xe5\xaa\x35\x05",
         16);
  *(uint32_t*)0x20000458 = 0;
  *(uint64_t*)0x20000460 = 0;
  *(uint32_t*)0x20000468 = 0;
  *(uint32_t*)0x2000046c = 0xfdffffff;
  *(uint32_t*)0x20000470 = 0;
  *(uint32_t*)0x20000474 = 0;
  *(uint32_t*)0x20000478 = 0;
  *(uint32_t*)0x2000047c = 0;
  syscall(SYS_ioctl, r[0], 0xc040636aul, 0x20000440ul);
  *(uint32_t*)0x20000280 = 0;
  *(uint16_t*)0x20000284 = 1;
  *(uint16_t*)0x20000286 = 0;
  *(uint32_t*)0x20000288 = 0xf0a;
  *(uint32_t*)0x2000028c = 0;
  *(uint32_t*)0x20000290 = 0;
  *(uint64_t*)0x20000298 = 0x20000480;
  *(uint64_t*)0x200002a0 = 0;
  *(uint64_t*)0x200002a8 = 0;
  *(uint64_t*)0x200002b0 = 0x20000680;
  *(uint64_t*)0x200002b8 = 0;
  syscall(SYS_ioctl, r[0], 0xc040636dul, 0x20000280ul);
  return 0;
}
EOF
mycc -o /tmp/syzkaller35 -Wall -Wextra -O0 /tmp/syzkaller35.c ||
    exit 1

kldload cryptodev.ko && loaded=1
(cd /tmp; timeout 3m ./syzkaller35)
[ $loaded ] && kldunload cryptodev.ko

rm -rf /tmp/syzkaller35 /tmp/syzkaller35.c /tmp/syzkaller.*
exit 0
