#!/bin/sh
#
# $NetBSD: t_sizes,v 1.6 2007/03/11 10:09:17 pooka Exp $
#
# Copyright (c) 2005, 2006 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Julio M. Merino Vidal, developed as part of Google's Summer of Code
# 2005 program.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#

#
# Verifies that the file system controls memory usage correctly.
#

test_run() {
	test_mount -o  size=10485760 

	pagesize=$(sysctl hw.pagesize | cut -d ' ' -f 2)

	test_name "Get status of clean filesystem"
	eval $(${Src_Dir}/h_tools statvfs . | sed -e 's|^f_|cf_|')
	cf_bused=$((${cf_blocks} - ${cf_bfree}))

	test_name "Creation of small file"
	echo a >a || die
	test_name "statvfs(2) reports correct block accounting"
	eval $(${Src_Dir}/h_tools statvfs .)
	f_bused=$((${f_blocks} - ${f_bfree}))
	[ ${f_bused} -gt 1 ] || die
	rm a || die

	test_name "Creation of big file"
	dd if=/dev/zero of=a bs=1m count=5 >/dev/null 2>&1 || die
	test_name "statvfs(2) reports correct block accounting"
	eval $(${Src_Dir}/h_tools statvfs .)
	f_bused=$((${f_blocks} - ${f_bfree}))
	[ ${f_bused} -ne ${cf_bused} ] || die
	[ ${f_bused} -gt $((5 * 1024 * 1024 / ${pagesize})) ] || die
	of_bused=${f_bused}
	rm a || die
	eval $(${Src_Dir}/h_tools statvfs .)
	f_bused=$((${f_blocks} - ${f_bfree}))
	[ ${f_bused} -lt ${of_bused} ] || die

	test_name "Creation of big file that overflows the filesystem"
	of_bused=${f_bused}
	dd if=/dev/zero of=a bs=1m count=15 >/dev/null 2>&1 && die
	rm a || die
	test_name "statvfs(2) reports correct block accounting"
	eval $(${Src_Dir}/h_tools statvfs .)
	f_bused=$((${f_blocks} - ${f_bfree}))
	[ ${f_bused} -ge ${of_bused} -a ${f_bused} -le $((${of_bused} + 1)) ] \
	    || die

	test_name "Write to middle of a file does not change size"
	dd if=/dev/zero of=a bs=1024 count=10 >/dev/null 2>&1 || die
	sync
	dd if=/dev/zero of=a bs=1024 conv=notrunc seek=1 count=1	\
	     >/dev/null 2>&1 || die
	sync
	eval $(stat -s a)
	[ ${st_size} -eq 10240 ] || die

	test_unmount
}

. ${SUBRDIR}/h_funcs.subr
