#!/bin/sh
#-
# Copyright (c) 2017 Edward Tomasz Napierala <trasz@FreeBSD.org>
#
# This software was developed by SRI International and the University of
# Cambridge Computer Laboratory under DARPA/AFRL contract (FA8750-10-C-0237)
# ("CTSRD"), as part of the DARPA CRASH research programme.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

# This is a simple HTTP benchmark.  It works by running a number of fetch(1)
# instances in parallel, 10 by default, each performing a number of fetches,
# 100 by default, and then printing out the time it took.
#
# Example usage: ./fetchbench -i 2 -n 5 http://freebsd.org

usage()
{
	cat <<EOF 1>&2
usage: fetchbench [-i number-of-instances] [-n fetches-per-instance] url
EOF
	exit 1
}

NPROC=10
NFETCH=100

while getopts "i:n:X" opt; do
	case "$opt" in
	i)	NPROC="${OPTARG}" ;;
	n)	NFETCH="${OPTARG}" ;;
	X)	MEASURE_PLEASE=1 ;;
	*)	usage ;;
	esac
done
shift $(($OPTIND - 1))

if [ $# -ne 1 ]; then
	usage
fi

URL="${1}"

if [ -n "${MEASURE_PLEASE}" ]; then
	for p in `/usr/bin/jot ${NPROC}`; do
		(
		for f in `/usr/bin/jot ${NFETCH}`; do echo "${URL}"; done | /usr/bin/xargs /usr/bin/fetch -qo /dev/null
		) &
	done
	wait
	echo -n "${0}: $((${NFETCH} * ${NPROC})) requests for ${URL}, spread among ${NPROC} parallel processes, in "
else
	( /usr/bin/time -h "${0}" -i "${NPROC}" -n "${NFETCH}" -X "${URL}" ) 2>&1 | sed -E 's/	//;s/	+/, /g'
fi
