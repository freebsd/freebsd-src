.\" SPDX-License-Identifier: BSD-2-Clause
.\"
.\" Copyright (c) 2022, Gordon Bergling <gbe@FreeBSD.org>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR
.\" ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd March 18, 2024
.Dt TCP_RACK 4
.Os
.Sh NAME
.Nm tcp_rack
.Nd TCP RACK-TLP Loss Detection Algorithm for TCP
.Sh SYNOPSIS
To load the TCP stack as a module at boot time, place the following line in
.Xr loader.conf 5 :
.Bd -literal -offset indent
tcp_rack_load="YES"
.Ed
.Pp
To enable the TCP stack, place the following line in the
.Xr sysctl.conf 5 :
.Bd -literal -offset indent
net.inet.tcp.functions_default=rack
.Ed
.Sh DESCRIPTION
RACK-TLP uses per-segment transmit timestamps and selective
acknowledgments (SACKs) and has two parts.
Recent Acknowledgment (RACK) starts fast recovery quickly
using time-based inferences derived from acknowledgment (ACK)
feedback, and Tail Loss Probe (TLP) leverages RACK
and sends a probe packet to trigger ACK feedback to avoid
retransmission timeout (RTO) events.
.Pp
Compared to the widely used duplicate acknowledgment (DupAck)
threshold approach, RACK-TLP detects losses more efficiently
when there are application-limited flights of data, lost
retransmissions, or data packet reordering events.
.Pp
It is intended to be an alternative to the
DupAck threshold approach.
.Sh MIB Variables
The algorithm exposes the following scopes in the
.Va net.inet.tcp.rack
branch of the
.Xr sysctl 3
MIB:
.Bl -tag -width indent
.It Va net.inet.tcp.rack.misc
Misc related controls
.It Va net.inet.tcp.rack.features
Feature controls
.It Va net.inet.tcp.rack.measure
Measure related controls
.It Va net.inet.tcp.rack.timers
Timer related controls
.It Va net.inet.tcp.rack.tlp
TLP and Rack related Controls
.It Va net.inet.tcp.rack.timely
Rack Timely RTT Controls
.It Va net.inet.tcp.rack.hdwr_pacing
Pacing related Controls
.It Va net.inet.tcp.rack.pacing
Pacing related Controls
.It Va net.inet.tcp.rack.tp
Rack tracepoint facility
.It Va net.inet.tcp.rack.probertt
ProbeRTT related Controls
.It Va net.inet.tcp.rack.stats
Rack Counters
.It Va net.inet.tcp.rack.sack_attack
Rack Sack Attack Counters and Controls
.El
.Pp
Besides the variables within the above scopes the following
variables are also exposed in the
.Va net.inet.tcp.rack
branch:
.Bl -tag -width indent
.It Va net.inet.tcp.rack.clear
Clear counters
.It Va net.inet.tcp.rack.opts
RACK Option Stats
.It Va net.inet.tcp.rack.outsize
MSS send sizes
.It Va net.inet.tcp.rack.req_measure_cnt
If doing dynamic pacing, how many measurements
must be in before we start pacing?
.It Va net.inet.tcp.rack.use_pacing
If set we use pacing, if clear we use only the original burst mitigation
.It Va net.inet.tcp.rack.rate_sample_method
What method should we use for rate sampling 0=high, 1=low
.El
.Sh SEE ALSO
.Xr cc_chd 4 ,
.Xr cc_cubic 4 ,
.Xr cc_hd 4 ,
.Xr cc_htcp 4 ,
.Xr cc_newreno 4 ,
.Xr cc_vegas 4 ,
.Xr h_ertt 4 ,
.Xr mod_cc 4 ,
.Xr tcp 4 ,
.Xr tcp_bbr 4 ,
.Xr mod_cc 9
.Rs
.%A "Neal Cardwell"
.%A "Yuchung Cheng"
.%A "Nandita Dukkipati"
.%A "Priyaranjan Jha"
.%T "The RACK-TLP Loss Detection Algorithm for TCP"
.%O "RFC 8985"
.%D "February 2021"
.Re
.Rs
.%A "M. Allman"
.%A "V. Paxson"
.%A "E. Blanton"
.%T "TCP Congestion Control"
.%O "RFC 5681"
.%D "September 2009"
.Re
.Rs
.%A "M. Mathis"
.%A "Nandita Dukkipati"
.%A "Yuchung Cheng"
.%T "Proportional Rate Reduction for TCP"
.%O "RFC 6937"
.%D "May 2013"
.Re
.Sh HISTORY
The
.Nm
congestion control module first appeared in
.Fx 13.0 .
.Sh AUTHORS
.An -nosplit
The
.Nm
congestion control module was written by
.An Randall Stewart Aq Mt rrs@FreeBSD.org
and sponsored by Netflix, Inc.
This manual page was written by
.An Gordon Bergling Aq Mt gbe@FreeBSD.org .
