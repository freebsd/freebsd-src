.\" Copyright (c) 2001-2002 Maksim Yevmenkin <m_evmenkin@yahoo.com>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $Id: ng_ubt.4,v 1.3 2003/05/21 19:37:35 max Exp $
.\"
.Dd December 26, 2012
.Dt NG_UBT 4
.Os
.Sh NAME
.Nm ng_ubt
.Nd Netgraph node type that is also a driver for Bluetooth USB devices
.Sh SYNOPSIS
.In sys/types.h
.In netgraph/bluetooth/include/ng_ubt.h
.Sh DESCRIPTION
The
.Nm ubt
node type is both a persistent Netgraph node type and a driver for
Bluetooth USB devices.
It implements a Bluetooth USB transport layer
as per chapter H2 of the Bluetooth Specification Book v1.1.
A new node is created when a supported USB device is plugged in.
.Pp
The node has a single hook called
.Dv hook .
Incoming bytes received on the device are re-assembled into HCI frames
(according to the length).
Full HCI frames are sent out on the hook.
The node will add a HCI frame indicator if the device did not send it.
HCI frames received on
.Dv hook
are transmitted out.
The node will drop the HCI frame indicator unless the device
requires it to be present.
.Sh HARDWARE
The
.Nm
driver supports all Bluetooth USB devices that conform with
the Bluetooth specification v1.1, including:
.Pp
.Bl -bullet -compact
.It
3Com 3CREB96
.It
AIPTEK BR0R02
.It
EPoX BT-DG02
.It
Mitsumi Bluetooth USB adapter
.It
MSI MS-6967
.It
TDK Bluetooth USB adapter
.It
Broadcom Bluetooth USB adapter
.El
.Sh HOOKS
This node type supports the following hooks:
.Bl -tag -width ".Va hook"
.It Va hook
single HCI frame contained in a single
.Vt mbuf
structure.
.El
.Sh CONTROL MESSAGES
This node type supports the generic control messages, plus the following:
.Bl -tag -width indent
.It Dv NGM_UBT_NODE_GET_DEBUG Pq Ic get_debug
Returns an integer containing the current debug level for the node.
.It Dv NGM_UBT_NODE_SET_DEBUG Pq Ic set_debug
This command takes an integer argument and sets the current debug level
for the node.
.It Dv NGM_UBT_NODE_GET_QLEN Pq Ic get_qlen
This command takes a parameter that specifies the queue number and returns
the current maximal length of the queue for the node.
.It Dv NGM_UBT_NODE_SET_QLEN Pq Ic set_qlen
This command takes two parameters that specify the queue number and the maximum
length of the queue and sets the maximal length of the queue for the node.
.It Dv NGM_UBT_NODE_GET_STAT Pq Ic get_stat
Returns various statistic information for the node, such as: number of
bytes (frames) sent, number of bytes (frames) received and number of
input (output) errors.
.It Dv NGM_UBT_NODE_RESET_STAT Pq Ic reset_stat
Reset all statistic counters to zero.
.El
.Sh SHUTDOWN
This node shuts down when the corresponding USB device is un-plugged.
.Sh SEE ALSO
.Xr netgraph 4 ,
.Xr ugen 4 ,
.Xr usb 4 ,
.Xr ngctl 8
.Sh HISTORY
The
.Nm ubt
node type was implemented in
.Fx 5.0 .
.Sh AUTHORS
.An Maksim Yevmenkin Aq Mt m_evmenkin@yahoo.com
.Sh BUGS
Isochronous USB transfers are broken.
This means that the USB device will not be able to transfer SCO data (voice).
USB interrupt transfers are implemented as bulk-in transfers (not really a bug).
