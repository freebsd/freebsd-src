.\" Copyright (c) 1996-1999 Whistle Communications, Inc.
.\" All rights reserved.
.\"
.\" Subject to the following obligations and disclaimer of warranty, use and
.\" redistribution of this software, in source or object code forms, with or
.\" without modifications are expressly permitted by Whistle Communications;
.\" provided, however, that:
.\" 1. Any and all reproductions of the source or object code must include the
.\"    copyright notice above and the following disclaimer of warranties; and
.\" 2. No rights are granted, in any manner or form, to use Whistle
.\"    Communications, Inc. trademarks, including the mark "WHISTLE
.\"    COMMUNICATIONS" on advertising, endorsements, or otherwise except as
.\"    such appears in the above copyright notice or in the software.
.\"
.\" THIS SOFTWARE IS BEING PROVIDED BY WHISTLE COMMUNICATIONS "AS IS", AND
.\" TO THE MAXIMUM EXTENT PERMITTED BY LAW, WHISTLE COMMUNICATIONS MAKES NO
.\" REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, REGARDING THIS SOFTWARE,
.\" INCLUDING WITHOUT LIMITATION, ANY AND ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.
.\" WHISTLE COMMUNICATIONS DOES NOT WARRANT, GUARANTEE, OR MAKE ANY
.\" REPRESENTATIONS REGARDING THE USE OF, OR THE RESULTS OF THE USE OF THIS
.\" SOFTWARE IN TERMS OF ITS CORRECTNESS, ACCURACY, RELIABILITY OR OTHERWISE.
.\" IN NO EVENT SHALL WHISTLE COMMUNICATIONS BE LIABLE FOR ANY DAMAGES
.\" RESULTING FROM OR ARISING OUT OF ANY USE OF THIS SOFTWARE, INCLUDING
.\" WITHOUT LIMITATION, ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
.\" PUNITIVE, OR CONSEQUENTIAL DAMAGES, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES, LOSS OF USE, DATA OR PROFITS, HOWEVER CAUSED AND UNDER ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF WHISTLE COMMUNICATIONS IS ADVISED OF THE POSSIBILITY
.\" OF SUCH DAMAGE.
.\"
.\" Author: Archie Cobbs <archie@FreeBSD.org>
.\" $Whistle: ng_cisco.8,v 1.5 1999/01/25 23:46:26 archie Exp $
.\"
.Dd January 19, 1999
.Dt NG_CISCO 4
.Os
.Sh NAME
.Nm ng_cisco
.Nd Cisco HDLC protocol netgraph node type
.Sh SYNOPSIS
.In sys/types.h
.In netinet/in.h
.In netgraph/ng_cisco.h
.Sh DESCRIPTION
The
.Nm cisco
node type performs encapsulation and de-encapsulation of packets
using the Cisco HDLC protocol.
This is a fairly simple
protocol for the transmission of packets across
high speed synchronous lines.
Each packet is prepended with
an Ethertype, indicating the protocol.
There is also a
.Dq keep alive
and an
.Dq inquire
capability.
.Pp
The
.Dv downstream
hook should connect to the synchronous line.
On the other side
of the node are the
.Dv inet ,
.Dv inet6 ,
.Dv atalk ,
and
.Dv ipx
hooks, which transmit and receive raw IP, IPv6, AppleTalk, and IPX packets,
respectively.
Typically these hooks would connect to the corresponding
hooks on an
.Xr ng_iface 4
type node.
.Sh IP Configuration
In order to function properly for IP traffic, the node must be informed
of the local IP address and netmask setting.
This is because the protocol
includes an
.Dq inquire
packet which we must be prepared to answer.
There are two ways to accomplish this, manually and automatically.
.Pp
Whenever such an inquire packet is received, the node sends a
.Dv NGM_CISCO_GET_IPADDR
control message to the peer node connected to the
.Dv inet
hook (if any).
If the peer responds, then that response is used.
This is the automatic method.
.Pp
If the peer does not respond, the node falls back on its cached value
for the IP address and netmask.
This cached value can be set at any time
with a
.Dv NGM_CISCO_SET_IPADDR
message, and this is the manual method.
.Pp
If the
.Dv inet
hook is connected to the
.Dv inet
hook of an
.Xr ng_iface 4
node, as is usually the case, then configuration is automatic as the
.Xr ng_iface 4
understands the
.Dv NGM_CISCO_GET_IPADDR
message.
.Sh HOOKS
This node type supports the following hooks:
.Bl -tag -width ".Va downstream"
.It Va downstream
The connection to the synchronous line.
.It Va inet
IP hook.
.It Va inet6
IPv6 hook.
.It Va atalk
AppleTalk hook.
.It Va ipx
IPX hook.
.El
.Sh CONTROL MESSAGES
This node type supports the generic control messages, plus the following:
.Bl -tag -width foo
.It Dv NGM_CISCO_SET_IPADDR Pq Ic setipaddr
This command takes an array of two
.Dv "struct in_addr"
arguments.
The first is the IP address of the corresponding interface
and the second is the netmask.
.It Dv NGM_CISCO_GET_IPADDR Pq Ic getipaddr
This command returns the IP configuration in the same format used by
.Dv NGM_CISCO_SET_IPADDR .
This command is also
.Em sent
by this node type to the
.Dv inet
peer whenever an IP address inquiry packet is received.
.It Dv NGM_CISCO_GET_STATUS Pq Ic getstats
Returns a
.Dv "struct ngciscostat" :
.Bd -literal -offset 4n
struct ngciscostat {
  uint32_t   seqRetries;	/* # unack'd retries */
  uint32_t   keepAlivePeriod;	/* in seconds */
};
.Ed
.El
.Sh SHUTDOWN
This node shuts down upon receipt of a
.Dv NGM_SHUTDOWN
control message, or when all hooks have been disconnected.
.Sh SEE ALSO
.Xr netgraph 4 ,
.Xr ng_iface 4 ,
.Xr ngctl 8
.Rs
.%A D. Perkins
.%T "Requirements for an Internet Standard Point-to-Point Protocol"
.%O RFC 1547
.Re
.Sh LEGAL
.Tn Cisco
is a trademark of Cisco Systems, Inc.
.Sh HISTORY
The
.Nm
node type was implemented in
.Fx 4.0 .
.Sh AUTHORS
.An Julian Elischer Aq Mt julian@FreeBSD.org
.An Archie Cobbs Aq Mt archie@FreeBSD.org
.Sh BUGS
Not all of the functionality has been implemented.
For example,
the node does not support querying the remote end for its IP address
and netmask.
