.\"
.\" Copyright (C) 2001 Chad David <davidc@acns.ab.ca>. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice(s), this list of conditions and the following disclaimer as
.\"    the first lines of this file unmodified other than the possible
.\"    addition of one or more copyright notices.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice(s), this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER(S) ``AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
.\" DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
.\" CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
.\" DAMAGE.
.\"
.Dd July 24, 2001
.Dt VM_PAGE_FREE 9
.Os
.Sh NAME
.Nm vm_page_free ,
.Nm vm_page_free_toq ,
.Nm vm_page_free_zero ,
.Nm vm_page_try_to_free
.Nd "free a page"
.Sh SYNOPSIS
.In sys/param.h
.In vm/vm.h
.In vm/vm_page.h
.Ft void
.Fn vm_page_free "vm_page_t m"
.Ft void
.Fn vm_page_free_toq "vm_page_t m"
.Ft void
.Fn vm_page_free_zero "vm_page_t m"
.Ft int
.Fn vm_page_try_to_free "vm_page_t m"
.Sh DESCRIPTION
The
.Fn vm_page_free_toq
function moves a page into the free queue, and disassociates it from
its object.
If the page is held, wired, already free, or its busy count is not
zero, the system will panic.
If the
.Dv PG_ZERO
flag is set on the page, it is placed at the end of the free queue;
otherwise, it is placed at the front.
.Pp
If the page's object is of type
.Dv OBJT_VNODE
and it is the last page associated with the object, the underlying
vnode may be freed.
.Pp
The
.Fn vm_page_free
and
.Fn vm_page_free_zero
functions both call
.Fn vm_page_free_toq
to actually free the page, but
.Fn vm_page_free_zero
sets the
.Dv PG_ZERO
flag and
.Fn vm_page_free
clears the
.Dv PG_ZERO
flag prior to the call to
.Fn vm_page_free_toq .
.Pp
The
.Fn vm_page_try_to_free
function verifies that the page is not held, wired, busy or dirty, and
if so, marks the page as busy, drops any protection that may be set on
the page, and frees it.
.Sh RETURN VALUES
.Fn vm_page_try_to_free
returns 1 if it is able to free the page; otherwise, 0 is returned.
.Sh SEE ALSO
.Xr vm_page_busy 9 ,
.Xr vm_page_hold 9 ,
.Xr vm_page_wire 9
.Sh AUTHORS
This manual page was written by
.An Chad David Aq Mt davidc@acns.ab.ca .
