.\"
.\" Copyright (c) 2003 Bruce M Simpson <bms@spc.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd July 21, 2003
.Dt PMAP_MAP 9
.Os
.Sh NAME
.Nm pmap_map
.Nd map a physical memory range into kernel virtual address (KVA) space
.Sh SYNOPSIS
.In sys/param.h
.In vm/vm.h
.In vm/pmap.h
.Ft vm_offset_t
.Fo pmap_map
.Fa "vm_offset_t *virt" "vm_paddr_t start" "vm_paddr_t end" "int prot"
.Fc
.Sh DESCRIPTION
The
.Fn pmap_map
function maps a range of physical addresses into kernel virtual address (KVA)
space, from
.Fa start
to
.Fa end ,
with protection bits
.Fa prot .
.Pp
The value passed in
.Fa *virt
is treated as a hint for the virtual address of the beginning of the mapping.
.Sh IMPLEMENTATION NOTES
The
.Fa prot
argument is currently ignored by machine-dependent implementations.
.Pp
Architectures which can support a direct mapped physical to virtual
region can return the appropriate address within that region, leaving
.Fa *virt
unchanged.
.Sh RETURN VALUES
The
.Fn pmap_map
function returns the virtual address of the beginning of the mapping, if
the mapping was successfully made;
.Fa *virt
will also be updated with the first usable address after the mapped region.
.Pp
If the function is unsuccessful,
.Dv NULL
is returned.
.Sh SEE ALSO
.Xr pmap 9
.Sh AUTHORS
This manual page was written by
.An Bruce M Simpson Aq Mt bms@spc.org .
