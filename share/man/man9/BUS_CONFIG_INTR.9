.\" Copyright (c) 2003 Marcel Moolenaar
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd January 16, 2025
.Dt BUS_CONFIG_INTR 9
.Os
.\"
.Sh NAME
.Nm BUS_CONFIG_INTR ,
.Nm bus_config_intr
.Nd "configure interrupt polarity and trigger mode"
.\"
.Sh SYNOPSIS
.In sys/param.h
.In sys/bus.h
.Ft int
.Fo BUS_CONFIG_INTR
.Fa "device_t bus" "device_t dev" "int irq" "enum intr_trigger trig"
.Fa "enum intr_polarity pol"
.Fc
.Ft int
.Fo bus_config_intr
.Fa "device_t dev" "int irq" "enum intr_trigger trig" "enum intr_polarity pol"
.Fc
.Sh DESCRIPTION
The
.Fn BUS_CONFIG_INTR
method allows bus or device drivers to provide interrupt polarity and trigger
mode to parent buses.
This typically bubbles all the way up to the root bus (e.g.\& nexus) where the
necessary actions are taken to actually program the hardware.
Since the
.Fn BUS_CONFIG_INTR
method takes an interrupt number, it is assumed but not necessarily required
that it is called prior to
.Xr BUS_SETUP_INTR 9 .
.Pp
The
.Fn bus_config_intr
function is a simple wrapper around
.Fn BUS_CONFIG_INTR .
.Pp
The
.Fa trig
argument can be one of:
.Bl -tag -width ".Dv INTR_TRIGGER_CONFORM"
.It Dv INTR_TRIGGER_CONFORM
The interrupt trigger mode is standard for the bus to which the device is
attached.
.It Dv INTR_TRIGGER_EDGE
The interrupt is edge triggered.
This means that the interrupt is raised by the rising edge of the signal on
the interrupt line.
The signal typically reverts to the original state so as to cause a spike.
.It Dv INTR_TRIGGER_LEVEL
The interrupt is level triggered.
This means that the interrupt is raised when the signal on the interrupt line
transitions and remains unchanged after that until the interrupt has been
serviced, after which the signal transitions back.
.El
.Pp
The
.Fa pol
argument can be any one of:
.Bl -tag -width ".Dv INTR_POLARITY_CONFORM"
.It Dv INTR_POLARITY_CONFORM
The interrupt polarity is standard for the bus to which the device is attached.
.It Dv INTR_POLARITY_HIGH
The interrupt is activated by a high voltage on the interrupt line.
.It Dv INTR_POLARITY_LOW
The interrupt is activated by a low voltage on the interrupt line.
.El
.\"
.Sh RETURN VALUES
Zero is returned on success, otherwise an appropriate error is returned.
.\"
.Sh SEE ALSO
.Xr BUS_SETUP_INTR 9 ,
.Xr BUS_TEARDOWN_INTR 9 ,
.Xr device 9 ,
.Xr driver 9
.\"
.Sh HISTORY
The
.Fn BUS_CONFIG_INTR
method first appeared in
.Fx 5.2 .
.\"
.Sh AUTHORS
This manual page was written by
.An Marcel Moolenaar Aq Mt marcel@xcllnt.net .
