#-
# Copyright (c) 2012 Spectra Logic Corporation
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions, and the following disclaimer,
#    without modification.
# 2. Redistributions in binary form must reproduce at minimum a disclaimer
#    substantially similar to the "NO WARRANTY" disclaimer below
#    ("Disclaimer") and any redistribution must be conditioned upon
#    including a substantially similar Disclaimer requirement for further
#    binary redistribution.
#
# NO WARRANTY
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGES.
#
# Authors: Alan Somers     (Spectra Logic Corporation)
#


# This is a valgrind suppression file used for running zfsd_unittest with
# valgrind.  It suppress spurious errors generated by the googletest and
# googlemock libraries.
#
# To use, do:
# valgrind --suppressions=$PWD/zfsd_unittest.supp ./zfsd_unittest 

{
   <insert_a_suppression_name_here>
   Memcheck:Free
   fun:free
   ...
   fun:__cxa_finalize
   fun:exit
   fun:(below main)
}

{
   <insert_a_suppression_name_here>
   Memcheck:Free
   fun:free
    ...
   fun:_ZN7testing8internal27PrettyUnitTestResultPrinter*
   ...
   ...
   fun:main
}

{
   <insert_a_suppression_name_here>
   Memcheck:Free
   fun:free
   fun:_ZN7testing*
   ...
   fun:main
}

{
   <insert_a_suppression_name_here>
   Memcheck:Free
   fun:free
   ...
   fun:_Z41__static_initialization_and_destruction_0ii
   ...
}

{
   <insert_a_suppression_name_here>
   Memcheck:Free
   fun:free
   ...
   fun:_ZN7testing8internal8MockSpec*
   ...
   fun:_ZN7testing4Test3RunEv
   fun:_ZN7testing8internal12TestInfoImpl3RunEv
   fun:_ZN7testing8TestCase3RunEv
   fun:_ZN7testing8internal12UnitTestImpl11RunAllTestsEv
}

{
   <insert_a_suppression_name_here>
   Memcheck:Free
   fun:free
   ...
   fun:_ZN7testing8internal14FunctionMocker*
   ...
}

{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   obj:/lib/libc.so.7
   obj:/lib/libc.so.7
   fun:snprintf
   fun:_ZN7testing45_GLOBAL__N_src_gmock_all.cc_00000000_917CAD5926PrintByteSegmentInObjectToEPKhmmPSo
   fun:_ZN7testing9internal220PrintBytesInObjectToEPKhmPSo
   fun:_ZN7testing9internal220TypeWithoutFormatterI8ZfsEventLb0EE10PrintValueERKS2_PSo
   fun:_ZN7testing9internal2lsIcSt11char_traitsIcE8ZfsEventEERSt13basic_ostreamIT_T0_ES9_RKT1_
   fun:_ZN16testing_internal26DefaultPrintNonContainerToI8ZfsEventEEvRKT_PSo
   fun:_ZN7testing8internal14DefaultPrintToI8ZfsEventEEvcNS0_13bool_constantILb0EEERKT_PSo
   fun:_ZN7testing8internal7PrintToI8ZfsEventEEvRKT_PSo
   fun:_ZN7testing8internal16UniversalPrinterIK8ZfsEventE5PrintERS3_PSo
   fun:_ZN7testing8internal16UniversalPrinterIRK8ZfsEventE5PrintES4_PSo
}

{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   ...
   fun:snprintf
   ...
   fun:_ZN7testing9internal220PrintBytesInObjectToEPKhmPSo
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   ...
   fun:snprintf
   ...
   fun:_ZN7testing9internal220PrintBytesInObjectToEPKhmPSo
   ...
}

